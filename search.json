[
  {
    "objectID": "slides/05-tables-tfrmt/tfrmt.html",
    "href": "slides/05-tables-tfrmt/tfrmt.html",
    "title": "A quick tour of the many uses of {tfrmt}",
    "section": "",
    "text": "Metadata-driven table formatting\nEasily create new and modify existing tables\nInput: ARD with raw, numeric values ({cards}!)\nOutput: Formatted table via {gt}"
  },
  {
    "objectID": "slides/05-tables-tfrmt/tfrmt.html#ard-first-tables-with-tfrmt",
    "href": "slides/05-tables-tfrmt/tfrmt.html#ard-first-tables-with-tfrmt",
    "title": "A quick tour of the many uses of {tfrmt}",
    "section": "",
    "text": "Metadata-driven table formatting\nEasily create new and modify existing tables\nInput: ARD with raw, numeric values ({cards}!)\nOutput: Formatted table via {gt}"
  },
  {
    "objectID": "slides/05-tables-tfrmt/tfrmt.html#the-tfrmt-object",
    "href": "slides/05-tables-tfrmt/tfrmt.html#the-tfrmt-object",
    "title": "A quick tour of the many uses of {tfrmt}",
    "section": "The {tfrmt} object",
    "text": "The {tfrmt} object\n\nPre-define the non-data components of your table\nPre-define how the data will be handled once added"
  },
  {
    "objectID": "slides/05-tables-tfrmt/tfrmt.html#use-1-study-planning-mocks",
    "href": "slides/05-tables-tfrmt/tfrmt.html#use-1-study-planning-mocks",
    "title": "A quick tour of the many uses of {tfrmt}",
    "section": "Use #1: Study planning (mocks)",
    "text": "Use #1: Study planning (mocks)\n\nlibrary(tfrmt)\n\nprint_mock_gt(\n  tfrmt = tfrmt_demog, # tfrmt\n  .data = ard_demog_mock # sample ARD\n)|&gt; \n   gt_style_slides()\n\n Removing `value` from input data for mocking.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDemographics Table\n\n\n\nPlaceboN = xx\nLow DoseN = xx\nHigh DoseN = xx\n\n\n\n\nAge (y)     \n\n\n\n\n\n\n\n\n  Mean      \nxxx.x       \nxxx.x       \nxxx.x       \n\n\n  SD        \nxxx.xx      \nxxx.xx      \nxxx.xx      \n\n\n  Median    \nxxx.x       \nxxx.x       \nxxx.x       \n\n\n  Min       \nxxx.x       \nxxx.x       \nxxx.x       \n\n\n  Max       \nxxx.x       \nxxx.x       \nxxx.x       \n\n\n  &lt;65 yrs   \nxxx (xx.x %)\nxxx (xx.x %)\nxxx (xx.x %)\n\n\n  65-80 yrs \nxxx (xx.x %)\nxxx (xx.x %)\nxxx (xx.x %)\n\n\n  &gt;80 yrs   \nxxx (xx.x %)\nxxx (xx.x %)\nxxx (xx.x %)\n\n\nSex         \n\n\n\n\n\n\n\n\n  Male      \nxxx (xx.x %)\nxxx (xx.x %)\nxxx (xx.x %)\n\n\n  Female    \nxxx (xx.x %)\nxxx (xx.x %)\nxxx (xx.x %)\n\n\nBaseline BMI\n\n\n\n\n\n\n\n\n  Mean      \nxxx.x       \nxxx.x       \nxxx.x       \n\n\n  SD        \nxxx.xx      \nxxx.xx      \nxxx.xx      \n\n\n  Median    \nxxx.x       \nxxx.x       \nxxx.x       \n\n\n  Min       \nxxx.x       \nxxx.x       \nxxx.x       \n\n\n  Max       \nxxx.x       \nxxx.x       \nxxx.x       \n\n\n  &lt;25       \nxxx (xx.x %)\nxxx (xx.x %)\nxxx (xx.x %)\n\n\n  25-&lt;30    \nxxx (xx.x %)\nxxx (xx.x %)\nxxx (xx.x %)\n\n\n  &gt;=30      \nxxx (xx.x %)\nxxx (xx.x %)\nxxx (xx.x %)\n\n\n\n\n\n\n\n\nIf no data is supplied, {tfrmt} will generate some under the hood"
  },
  {
    "objectID": "slides/05-tables-tfrmt/tfrmt.html#use-2-final-analysis",
    "href": "slides/05-tables-tfrmt/tfrmt.html#use-2-final-analysis",
    "title": "A quick tour of the many uses of {tfrmt}",
    "section": "Use #2: Final analysis",
    "text": "Use #2: Final analysis\n\nlibrary(tfrmt)\n\nprint_to_gt(\n  tfrmt = tfrmt_demog,\n  .data = ard_demog # true ARD\n)|&gt; \n   gt_style_slides()\n\n\n\n\n\n\n\n\n\n\n\n\n\nDemographics Table\n\n\n\nPlaceboN = 86\nLow DoseN = 84\nHigh DoseN = 84\n\n\n\n\nAge (y)     \n\n\n\n\n\n\n\n\n  Mean      \n75.2       \n75.7       \n74.4       \n\n\n  SD        \n 8.59      \n 8.29      \n 7.89      \n\n\n  Median    \n76.0       \n77.5       \n76.0       \n\n\n  Min       \n52.0       \n51.0       \n56.0       \n\n\n  Max       \n89.0       \n88.0       \n88.0       \n\n\n  &lt;65 yrs   \n14 (16.3 %)\n 8 ( 9.5 %)\n11 (13.1 %)\n\n\n  65-80 yrs \n42 (48.8 %)\n47 (56.0 %)\n55 (65.5 %)\n\n\n  &gt;80 yrs   \n30 (34.9 %)\n29 (34.5 %)\n18 (21.4 %)\n\n\nSex         \n\n\n\n\n\n\n\n\n  Male      \n33 (38.4 %)\n34 (40.5 %)\n44 (52.4 %)\n\n\n  Female    \n53 (61.6 %)\n50 (59.5 %)\n40 (47.6 %)\n\n\nBaseline BMI\n\n\n\n\n\n\n\n\n  Mean      \n23.6       \n25.1       \n25.3       \n\n\n  SD        \n 3.67      \n 4.27      \n 4.16      \n\n\n  Median    \n23.4       \n24.3       \n24.8       \n\n\n  Min       \n15.1       \n17.7       \n13.7       \n\n\n  Max       \n33.3       \n40.1       \n34.5       \n\n\n  &lt;25       \n59 (68.6 %)\n47 (56.0 %)\n44 (52.4 %)\n\n\n  25-&lt;30    \n21 (24.4 %)\n27 (32.1 %)\n28 (33.3 %)\n\n\n  &gt;=30      \n 6 ( 7.0 %)\n10 (11.9 %)\n12 (14.3 %)\n\n\n\n\n\n\n\n\nFull reuse of the original {tfrmt} object = reduced rework!"
  },
  {
    "objectID": "slides/05-tables-tfrmt/tfrmt.html#use-3-repurposed-final-table",
    "href": "slides/05-tables-tfrmt/tfrmt.html#use-3-repurposed-final-table",
    "title": "A quick tour of the many uses of {tfrmt}",
    "section": "Use #3: Repurposed final table",
    "text": "Use #3: Repurposed final table\n\nlibrary(tfrmt)\n\ntfrmt_demog |&gt; \n  layer_tfrmt(\n    tfrmt_demog_custom  \n  )|&gt; \n  print_to_gt( \n    .data = ard_demog\n  ) |&gt; \n  gt::grp_pull(1)|&gt; \n   gt_style_slides()\n\n\n\n\n\n\n\n\n\n\n\n\n\nDemographics Table\n\n\nSafety Population\n\n\n\nHigh Dose(N = 84)\nLow Dose(N = 84)\nPlacebo(N = 86)\n\n\n\n\nAge (y)    \n\n\n\n\n\n\n\n\n  Mean     \n74.4       \n75.7       \n75.2       \n\n\n  SD       \n 7.89      \n 8.29      \n 8.59      \n\n\n  Median   \n76.0       \n77.5       \n76.0       \n\n\n  Min      \n56.0       \n51.0       \n52.0       \n\n\n  Max      \n88.0       \n88.0       \n89.0       \n\n\n           \n           \n           \n           \n\n\n  &lt;65 yrs  \n11 (13.1 %)\n 8 ( 9.5 %)\n14 (16.3 %)\n\n\n  65-80 yrs\n55 (65.5 %)\n47 (56.0 %)\n42 (48.8 %)\n\n\n  &gt;80 yrs  \n18 (21.4 %)\n29 (34.5 %)\n30 (34.9 %)\n\n\n           \n           \n           \n           \n\n\nSex        \n\n\n\n\n\n\n\n\n  Male     \n44 (52.4 %)\n34 (40.5 %)\n33 (38.4 %)\n\n\n  Female   \n40 (47.6 %)\n50 (59.5 %)\n53 (61.6 %)\n\n\n           \n           \n           \n           \n\n\n\nData collected at Screening Visit\n\n\n\n\n\n\n\n\n\nLayering allows for custom tweaks while preserving the original metadata"
  },
  {
    "objectID": "slides/05-tables-tfrmt/tfrmt.html#templates-the-possibilities",
    "href": "slides/05-tables-tfrmt/tfrmt.html#templates-the-possibilities",
    "title": "A quick tour of the many uses of {tfrmt}",
    "section": "Templates: the possibilities",
    "text": "Templates: the possibilities\n\nOrganization standards can be capture as templates\n\n\n# create a template as a function\ntfrmt_demog_org &lt;- function(tfrmt_obj){\n  \n  tfrmt_demog_org &lt;- tfrmt( \n    # define standard formatting for org\n  )\n  \n  layer_tfrmt(x = tfrmt_obj, y = tfrmt_demog_ta)\n}\n\n# Make a standard table\ntfrmt_demog_org() |&gt;  \n  print_to_gt(\n    .data = ard_demog\n  )"
  },
  {
    "objectID": "slides/05-tables-tfrmt/tfrmt.html#templates-the-possibilities-1",
    "href": "slides/05-tables-tfrmt/tfrmt.html#templates-the-possibilities-1",
    "title": "A quick tour of the many uses of {tfrmt}",
    "section": "Templates: the possibilities",
    "text": "Templates: the possibilities\n\nOrganization standards can be capture as templates\nWith layering, teams can customize only the bits that need changing\n\n\n# create a template as a function\ntfrmt_demog_ta &lt;- function(tfrmt_obj){\n  \n  tfrmt_demog_ta &lt;- tfrmt( \n    # define the formatting specific to the therapeutic area\n  )\n  \n  layer_tfrmt(x = tfrmt_obj, y = tfrmt_demog_ta)\n}\n\n# Layering multiple templates\ntfrmt_demog_org() |&gt; \n  tfrmt_demog_ta() |&gt;  \n  print_to_gt(\n    .data = ard_demog\n  )"
  },
  {
    "objectID": "slides/05-tables-tfrmt/tfrmt.html#templates-the-possibilities-2",
    "href": "slides/05-tables-tfrmt/tfrmt.html#templates-the-possibilities-2",
    "title": "A quick tour of the many uses of {tfrmt}",
    "section": "Templates: the possibilities",
    "text": "Templates: the possibilities\n\nOrganization standards can be capture as templates\nWith layering, teams can customize only the bits that need changing\n\n\n# create a template as a function\ntfrmt_demog_study &lt;- function(tfrmt_obj){\n  \n  tfrmt_demog_study &lt;- tfrmt( \n    # define the formatting specific to the study\n  )\n  \n  layer_tfrmt(x = tfrmt_obj, y = tfrmt_demog_study)\n}\n\n# Layering multiple templates\ntfrmt_demog_org() |&gt; \n  tfrmt_demog_ta() |&gt;  \n  tfrmt_demog_study() |&gt; \n  print_to_gt(\n    .data = ard_demog\n  )"
  },
  {
    "objectID": "slides/05-tables-tfrmt/tfrmt.html#save-metadata-for-reuse",
    "href": "slides/05-tables-tfrmt/tfrmt.html#save-metadata-for-reuse",
    "title": "A quick tour of the many uses of {tfrmt}",
    "section": "Save metadata for reuse",
    "text": "Save metadata for reuse\n\nlibrary(tfrmt)\n\ntfrmt_demog |&gt; \n  tfrmt_to_json()\n\n{\n  \"group\": [\"rowlbl1\", \"grp\"],\n  \"label\": [\"rowlbl2\"],\n  \"param\": [\"param\"],\n  \"value\": [\"value\"],\n  \"column\": [\"column\"],\n  \"title\": [\"Demographics Table\"],\n  \"body_plan\": [\n    {\n      \"group_val\": [\".default\"],\n      \"label_val\": [\".default\"],\n      \"param_val\": [\"n\", \"pct\"],\n      \"frmt_combine\": {\n        \"expression\": [\"{n} {pct}\"],\n        \"frmt_ls\": {\n          \"n\": {\n            \"frmt\": {\n              \"expression\": [\"xxx\"],\n              \"missing\": {},\n              \"scientific\": {},\n              \"transform\": {}\n            }\n          },\n          \"pct\": {\n            \"frmt_when\": {\n              \"frmt_ls\": {\n                \"==100\": [\"\"],\n                \"==0\": [\"\"],\n                \"TRUE\": {\n                  \"frmt\": {\n                    \"expression\": [\"(xx.x %)\"],\n                    \"missing\": {},\n                    \"scientific\": {},\n                    \"transform\": {}\n                  }\n                }\n              },\n              \"missing\": {}\n            }\n          }\n        },\n        \"missing\": {}\n      }\n    },\n    {\n      \"group_val\": [\".default\"],\n      \"label_val\": [\"n\"],\n      \"param_val\": [\".default\"],\n      \"frmt\": {\n        \"expression\": [\"xxx\"],\n        \"missing\": {},\n        \"scientific\": {},\n        \"transform\": {}\n      }\n    },\n    {\n      \"group_val\": [\".default\"],\n      \"label_val\": [\"Mean\", \"Median\", \"Min\", \"Max\"],\n      \"param_val\": [\".default\"],\n      \"frmt\": {\n        \"expression\": [\"xxx.x\"],\n        \"missing\": {},\n        \"scientific\": {},\n        \"transform\": {}\n      }\n    },\n    {\n      \"group_val\": [\".default\"],\n      \"label_val\": [\"SD\"],\n      \"param_val\": [\".default\"],\n      \"frmt\": {\n        \"expression\": [\"xxx.xx\"],\n        \"missing\": {},\n        \"scientific\": {},\n        \"transform\": {}\n      }\n    }\n  ],\n  \"col_style_plan\": [\n    {\n      \"cols\": [\n        [\"Placebo\"],\n        [\"Low Dose\"],\n        [\"High Dose\"]\n      ],\n      \"align\": [\".\", \",\", \" \"],\n      \"type\": [\"char\"],\n      \"width\": {}\n    },\n    {\n      \"cols\": [\n        [\"rowlbl1\"],\n        [\"rowlbl2\"]\n      ],\n      \"align\": [\"left\"],\n      \"type\": [\"char\"],\n      \"width\": {}\n    }\n  ],\n  \"col_plan\": {\n    \"col_plan\": {\n      \"dots\": [\n        [\"-grp\"],\n        [\"-starts_with(\\\"ord\\\")\"]\n      ],\n      \".drop\": [false]\n    }\n  },\n  \"sorting_cols\": [\"ord1\", \"ord2\"],\n  \"big_n\": {\n    \"param_val\": [\"bigN\"],\n    \"n_frmt\": {\n      \"expression\": [\"&lt;br&gt;N = xx\"],\n      \"missing\": {},\n      \"scientific\": {},\n      \"transform\": {}\n    },\n    \"by_page\": [false]\n  }\n} \n\n\n\nCreate a language-agnostic JSON file\nLoad JSON back into R and recreate the table with json_to_tfrmt()"
  },
  {
    "objectID": "slides/05-tables-tfrmt/tfrmt.html#saving-display",
    "href": "slides/05-tables-tfrmt/tfrmt.html#saving-display",
    "title": "A quick tour of the many uses of {tfrmt}",
    "section": "Saving display",
    "text": "Saving display\n\ntfrmt::print_to_gt() creates a {gt} object under the hood\nYou can export the table to a variety of formats using gt::gt_save()"
  },
  {
    "objectID": "slides/05-tables-tfrmt/tfrmt.html#creating-a-tfrmt-table-step-by-step",
    "href": "slides/05-tables-tfrmt/tfrmt.html#creating-a-tfrmt-table-step-by-step",
    "title": "A quick tour of the many uses of {tfrmt}",
    "section": "Creating a {tfrmt} table step-by-step",
    "text": "Creating a {tfrmt} table step-by-step\n\n\nhead(ard_demog)\n\n# A tibble: 6 × 7\n  TRT01A stat_variable stat_name    stat label     ord1  ord2\n  &lt;chr&gt;  &lt;chr&gt;         &lt;chr&gt;       &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt; &lt;dbl&gt;\n1 Active Age (years)   median     77     Median       1    NA\n2 Active Age (years)   p25        71     [Q1, Q3]     1    NA\n3 Active Age (years)   p75        81     [Q1, Q3]     1    NA\n4 Active Age Group     n         149     &gt;64          2     2\n5 Active Age Group     p           0.887 &gt;64          2     2\n6 Active Age Group     n          19     18-64        2     1\n\n\n\n\n\n\ntfrmt_demog &lt;- tfrmt(\n  group = stat_variable, \n  label = label, \n  column = TRT01A,\n  param = stat_name,\n  value = stat, \n  sorting_cols = c(ord1, ord2) \n)"
  },
  {
    "objectID": "slides/05-tables-tfrmt/tfrmt.html#ensure-placement-of-all-values-main",
    "href": "slides/05-tables-tfrmt/tfrmt.html#ensure-placement-of-all-values-main",
    "title": "A quick tour of the many uses of {tfrmt}",
    "section": "Ensure placement of all values (Main)",
    "text": "Ensure placement of all values (Main)\n\ntfrmt_demog &lt;- tfrmt(\n  group = stat_variable, \n  label = label, \n  column = TRT01A,\n  param = stat_name,\n  value = stat, \n  sorting_cols = c(ord1, ord2) \n)\n\nprint_to_gt(\n  tfrmt = tfrmt_demog,\n  .data = ard_demog\n) |&gt; \n   gt_style_slides()\n\nThe following rows of the given dataset have no format applied to them 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36\n\n\nMultiple param listed for the same group/label values.\nThe following frmt_structures may be missing from the body_plan\nor the order may need to be changed:\n- `frmt_structure(group_val = \"Age (years)\", label_val = c(\"[Q1, Q3]\"), frmt_combine(\"{p25}, {p75}\",p25 = frmt(\"xx\"), p75 = frmt(\"xx\")))`\n- `frmt_structure(group_val = \"Age Group\", label_val = c(\"18-64\",\"&gt;64\"), frmt_combine(\"{n}, {p}\",n = frmt(\"xx\"), p = frmt(\"xx\")))`\n- `frmt_structure(group_val = \"Sex\", label_val = c(\"F\",\"M\"), frmt_combine(\"{n}, {p}\",n = frmt(\"xx\"), p = frmt(\"xx\")))`\nUnable to to apply apply_row_grp_lbl.\nReason: `label` column label contains NA values. For group-level summary data, `label` and the relevant `group` values should match.\n\n\n\n\n\n\n\n\n\nord1\nord2\nActive\nPlacebo\nOverall\n\n\n\n\nMedian\n1\nNA\n77\n76\n77\n\n\n[Q1, Q3]\n1\nNA\n71, 81\n69, 82\n70, 81\n\n\n18-64\n2\n1\n19, 0.113095238095238\n14, 0.162790697674419\n33, 0.12992125984252\n\n\n&gt;64\n2\n2\n149, 0.886904761904762\n72, 0.837209302325581\n221, 0.87007874015748\n\n\nF\n3\nNA\n90, 0.535714285714286\n53, 0.616279069767442\n143, 0.562992125984252\n\n\nM\n3\nNA\n78, 0.464285714285714\n33, 0.383720930232558\n111, 0.437007874015748\n\n\nNA\nNA\nNA\n168\n86\n\n\n\nN\nNA\nNA\n\n\n254"
  },
  {
    "objectID": "slides/05-tables-tfrmt/tfrmt.html#ensure-placement-of-all-values-big-n",
    "href": "slides/05-tables-tfrmt/tfrmt.html#ensure-placement-of-all-values-big-n",
    "title": "A quick tour of the many uses of {tfrmt}",
    "section": "Ensure placement of all values (Big N)",
    "text": "Ensure placement of all values (Big N)\n\ntfrmt_demog &lt;- tfrmt_demog |&gt;\n  tfrmt(\n    big_n = big_n_structure(\n      param_val = \"bigN\",\n      n_frmt = frmt(\"&lt;br&gt;N = xx\")\n      )\n  )\n\nprint_to_gt(\n  tfrmt = tfrmt_demog, \n  .data = ard_demog\n  )|&gt; \n   gt_style_slides()\n\nThe following rows of the given dataset have no format applied to them 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33\n\n\nMultiple param listed for the same group/label values.\nThe following frmt_structures may be missing from the body_plan\nor the order may need to be changed:\n- `frmt_structure(group_val = \"Age (years)\", label_val = c(\"[Q1, Q3]\"), frmt_combine(\"{p25}, {p75}\",p25 = frmt(\"xx\"), p75 = frmt(\"xx\")))`\n- `frmt_structure(group_val = \"Age Group\", label_val = c(\"18-64\",\"&gt;64\"), frmt_combine(\"{n}, {p}\",n = frmt(\"xx\"), p = frmt(\"xx\")))`\n- `frmt_structure(group_val = \"Sex\", label_val = c(\"F\",\"M\"), frmt_combine(\"{n}, {p}\",n = frmt(\"xx\"), p = frmt(\"xx\")))`\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nord1\nord2\nActiveN = 168\nPlaceboN = 86\nOverallN = 254\n\n\n\n\nAge (years)\n\n\n\n\n\n\n\n\n\n\n\n\n  Median\n1\nNA\n77\n76\n77\n\n\n  [Q1, Q3]\n1\nNA\n71, 81\n69, 82\n70, 81\n\n\nAge Group\n\n\n\n\n\n\n\n\n\n\n\n\n  18-64\n2\n1\n19, 0.113095238095238\n14, 0.162790697674419\n33, 0.12992125984252\n\n\n  &gt;64\n2\n2\n149, 0.886904761904762\n72, 0.837209302325581\n221, 0.87007874015748\n\n\nSex\n\n\n\n\n\n\n\n\n\n\n\n\n  F\n3\nNA\n90, 0.535714285714286\n53, 0.616279069767442\n143, 0.562992125984252\n\n\n  M\n3\nNA\n78, 0.464285714285714\n33, 0.383720930232558\n111, 0.437007874015748"
  },
  {
    "objectID": "slides/05-tables-tfrmt/tfrmt.html#select-and-reorder-columns",
    "href": "slides/05-tables-tfrmt/tfrmt.html#select-and-reorder-columns",
    "title": "A quick tour of the many uses of {tfrmt}",
    "section": "Select and reorder columns",
    "text": "Select and reorder columns\n\ntfrmt_demog &lt;- tfrmt_demog |&gt;\n  tfrmt(\n    col_plan = col_plan(\n      Placebo,\n      Active,\n      - starts_with(\"ord\")\n    )\n  )\n\nprint_to_gt(\n  tfrmt = tfrmt_demog, \n  .data = ard_demog\n)|&gt; \n   gt_style_slides()\n\nThe following rows of the given dataset have no format applied to them 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33\n\n\nMultiple param listed for the same group/label values.\nThe following frmt_structures may be missing from the body_plan\nor the order may need to be changed:\n- `frmt_structure(group_val = \"Age (years)\", label_val = c(\"[Q1, Q3]\"), frmt_combine(\"{p25}, {p75}\",p25 = frmt(\"xx\"), p75 = frmt(\"xx\")))`\n- `frmt_structure(group_val = \"Age Group\", label_val = c(\"18-64\",\"&gt;64\"), frmt_combine(\"{n}, {p}\",n = frmt(\"xx\"), p = frmt(\"xx\")))`\n- `frmt_structure(group_val = \"Sex\", label_val = c(\"F\",\"M\"), frmt_combine(\"{n}, {p}\",n = frmt(\"xx\"), p = frmt(\"xx\")))`\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPlaceboN = 86\nActiveN = 168\nOverallN = 254\n\n\n\n\nAge (years)\n\n\n\n\n\n\n\n\n  Median\n76\n77\n77\n\n\n  [Q1, Q3]\n69, 82\n71, 81\n70, 81\n\n\nAge Group\n\n\n\n\n\n\n\n\n  18-64\n14, 0.162790697674419\n19, 0.113095238095238\n33, 0.12992125984252\n\n\n  &gt;64\n72, 0.837209302325581\n149, 0.886904761904762\n221, 0.87007874015748\n\n\nSex\n\n\n\n\n\n\n\n\n  F\n53, 0.616279069767442\n90, 0.535714285714286\n143, 0.562992125984252\n\n\n  M\n33, 0.383720930232558\n78, 0.464285714285714\n111, 0.437007874015748"
  },
  {
    "objectID": "slides/05-tables-tfrmt/tfrmt.html#format-the-data-values---basic",
    "href": "slides/05-tables-tfrmt/tfrmt.html#format-the-data-values---basic",
    "title": "A quick tour of the many uses of {tfrmt}",
    "section": "Format the data values - Basic",
    "text": "Format the data values - Basic\n\ntfrmt_demog &lt;- tfrmt_demog |&gt;\n  tfrmt(\n    body_plan = body_plan(\n      frmt_structure(\n        group_val = \".default\", \n        label_val = \".default\", \n        frmt(\"x.xx\"))\n    )\n  )\n\nprint_to_gt(\n  tfrmt = tfrmt_demog, \n  .data = ard_demog\n) |&gt; \n   gt_style_slides()\n\nMultiple param listed for the same group/label values.\nThe following frmt_structures may be missing from the body_plan\nor the order may need to be changed:\n- `frmt_structure(group_val = \"Age (years)\", label_val = c(\"[Q1, Q3]\"), frmt_combine(\"{p25}, {p75}\",p25 = frmt(\"xx\"), p75 = frmt(\"xx\")))`\n- `frmt_structure(group_val = \"Age Group\", label_val = c(\"18-64\",\"&gt;64\"), frmt_combine(\"{n}, {p}\",n = frmt(\"xx\"), p = frmt(\"xx\")))`\n- `frmt_structure(group_val = \"Sex\", label_val = c(\"F\",\"M\"), frmt_combine(\"{n}, {p}\",n = frmt(\"xx\"), p = frmt(\"xx\")))`\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPlaceboN = 86\nActiveN = 168\nOverallN = 254\n\n\n\n\nAge (years)\n\n\n\n\n\n\n\n\n  Median\n76.00\n77.00\n77.00\n\n\n  [Q1, Q3]\n69.00, 82.00\n71.00, 81.00\n70.00, 81.00\n\n\nAge Group\n\n\n\n\n\n\n\n\n  18-64\n14.00, 0.16\n19.00, 0.11\n33.00, 0.13\n\n\n  &gt;64\n72.00, 0.84\n149.00, 0.89\n221.00, 0.87\n\n\nSex\n\n\n\n\n\n\n\n\n  F\n53.00, 0.62\n90.00, 0.54\n143.00, 0.56\n\n\n  M\n33.00, 0.38\n78.00, 0.46\n111.00, 0.44"
  },
  {
    "objectID": "slides/05-tables-tfrmt/tfrmt.html#format-the-data-values---advanced",
    "href": "slides/05-tables-tfrmt/tfrmt.html#format-the-data-values---advanced",
    "title": "A quick tour of the many uses of {tfrmt}",
    "section": "Format the data values - Advanced",
    "text": "Format the data values - Advanced\n\ntfrmt_demog &lt;- tfrmt_demog |&gt;\n  tfrmt(\n    body_plan = body_plan(\n      frmt_structure(\n        group_val = \".default\", \n        label_val = \".default\",\n        frmt_combine(\"{n} ({p}%)\",\n                     n = frmt(\"xx\"),\n                     p = frmt(\"xx.x\", transform = ~ . *100)\n                     \n        )\n      )\n    )\n  )\n\nprint_to_gt(\n  tfrmt = tfrmt_demog, \n  .data = ard_demog\n  ) |&gt; \n   gt_style_slides()\n\nMultiple param listed for the same group/label values.\nThe following frmt_structures may be missing from the body_plan\nor the order may need to be changed:\n- `frmt_structure(group_val = \"Age (years)\", label_val = c(\"[Q1, Q3]\"), frmt_combine(\"{p25}, {p75}\",p25 = frmt(\"xx\"), p75 = frmt(\"xx\")))`\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPlaceboN = 86\nActiveN = 168\nOverallN = 254\n\n\n\n\nAge (years)\n\n\n\n\n\n\n\n\n  Median\n76.00\n77.00\n77.00\n\n\n  [Q1, Q3]\n69.00, 82.00\n71.00, 81.00\n70.00, 81.00\n\n\nAge Group\n\n\n\n\n\n\n\n\n  18-64\n14 (16.3%)\n19 (11.3%)\n33 (13.0%)\n\n\n  &gt;64\n72 (83.7%)\n149 (88.7%)\n221 (87.0%)\n\n\nSex\n\n\n\n\n\n\n\n\n  F\n53 (61.6%)\n90 (53.6%)\n143 (56.3%)\n\n\n  M\n33 (38.4%)\n78 (46.4%)\n111 (43.7%)"
  },
  {
    "objectID": "slides/05-tables-tfrmt/tfrmt.html#format-the-data-values---advanced-1",
    "href": "slides/05-tables-tfrmt/tfrmt.html#format-the-data-values---advanced-1",
    "title": "A quick tour of the many uses of {tfrmt}",
    "section": "Format the data values - Advanced",
    "text": "Format the data values - Advanced\n\ntfrmt_demog &lt;- tfrmt_demog |&gt;\n  tfrmt(\n    body_plan = body_plan(\n      \n      frmt_structure(\n        group_val = \".default\", \n        label_val = \"Median\",\n        frmt(\"xx.x\")\n      ),\n      \n      frmt_structure(\n        group_val = \".default\",\n        label_val = \".default\",\n        frmt_combine(\n          expression = \"[{p25}, {p75}]\",                \n          p25 = frmt(\"xx.x\"),                     \n          p75 = frmt(\"xx.x\")                      \n        )\n      )\n      \n    )\n  )\n  \nprint_to_gt(\n  tfrmt = tfrmt_demog, \n  .data = ard_demog\n  ) |&gt; \n   gt_style_slides()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPlaceboN = 86\nActiveN = 168\nOverallN = 254\n\n\n\n\nAge (years)\n\n\n\n\n\n\n\n\n  Median\n76.0\n77.0\n77.0\n\n\n  [Q1, Q3]\n[69.0, 82.0]\n[71.0, 81.0]\n[70.0, 81.0]\n\n\nAge Group\n\n\n\n\n\n\n\n\n  18-64\n14 (16.3%)\n19 (11.3%)\n33 (13.0%)\n\n\n  &gt;64\n72 (83.7%)\n149 (88.7%)\n221 (87.0%)\n\n\nSex\n\n\n\n\n\n\n\n\n  F\n53 (61.6%)\n90 (53.6%)\n143 (56.3%)\n\n\n  M\n33 (38.4%)\n78 (46.4%)\n111 (43.7%)"
  },
  {
    "objectID": "slides/05-tables-tfrmt/tfrmt.html#align-the-columns",
    "href": "slides/05-tables-tfrmt/tfrmt.html#align-the-columns",
    "title": "A quick tour of the many uses of {tfrmt}",
    "section": "Align the columns",
    "text": "Align the columns\n\ntfrmt_demog &lt;- tfrmt_demog |&gt;\n  tfrmt(\n    col_style_plan = col_style_plan(\n      col_style_structure(\n        col = c(\"Placebo\", \n                \"Active\"),\n        align = \" \"\n      )\n    )\n  )\n  \nprint_to_gt(\n  tfrmt = tfrmt_demog, \n  .data = ard_demog\n  ) |&gt; \n   gt_style_slides()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPlaceboN = 86\nActiveN = 168\nOverallN = 254\n\n\n\n\nAge (years)\n\n\n\n\n\n\n\n\n  Median\n  76.0        \n  77.0        \n77.0\n\n\n  [Q1, Q3]\n[69.0, 82.0]  \n[71.0, 81.0]  \n[70.0, 81.0]\n\n\nAge Group\n\n\n\n\n\n\n\n\n  18-64\n    14 (16.3%)\n    19 (11.3%)\n33 (13.0%)\n\n\n  &gt;64\n    72 (83.7%)\n   149 (88.7%)\n221 (87.0%)\n\n\nSex\n\n\n\n\n\n\n\n\n  F\n    53 (61.6%)\n    90 (53.6%)\n143 (56.3%)\n\n\n  M\n    33 (38.4%)\n    78 (46.4%)\n111 (43.7%)"
  },
  {
    "objectID": "slides/05-tables-tfrmt/tfrmt.html#add-footnotes",
    "href": "slides/05-tables-tfrmt/tfrmt.html#add-footnotes",
    "title": "A quick tour of the many uses of {tfrmt}",
    "section": "Add footnotes",
    "text": "Add footnotes\n\ntfrmt_demog &lt;- tfrmt_demog |&gt;\n  tfrmt(\n    footnote_plan = footnote_plan(\n      footnote_structure(\n        \"Pooled High and Low Dose\",\n        column_val = \"Active\"\n      )\n    )\n  )\n  \nprint_to_gt(\n  tfrmt = tfrmt_demog, \n  .data = ard_demog\n  ) |&gt; \n   gt_style_slides()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPlaceboN = 86\nActiveN = 1681\nOverallN = 254\n\n\n\n\nAge (years)\n\n\n\n\n\n\n\n\n  Median\n  76.0        \n  77.0        \n77.0\n\n\n  [Q1, Q3]\n[69.0, 82.0]  \n[71.0, 81.0]  \n[70.0, 81.0]\n\n\nAge Group\n\n\n\n\n\n\n\n\n  18-64\n    14 (16.3%)\n    19 (11.3%)\n33 (13.0%)\n\n\n  &gt;64\n    72 (83.7%)\n   149 (88.7%)\n221 (87.0%)\n\n\nSex\n\n\n\n\n\n\n\n\n  F\n    53 (61.6%)\n    90 (53.6%)\n143 (56.3%)\n\n\n  M\n    33 (38.4%)\n    78 (46.4%)\n111 (43.7%)\n\n\n\n1 Pooled High and Low Dose"
  },
  {
    "objectID": "slides/05-tables-tfrmt/tfrmt.html#add-titles",
    "href": "slides/05-tables-tfrmt/tfrmt.html#add-titles",
    "title": "A quick tour of the many uses of {tfrmt}",
    "section": "Add titles",
    "text": "Add titles\n\ntfrmt_demog &lt;- tfrmt_demog |&gt;\n  tfrmt(\n    title = \"Demographic Table\",\n    subtitle = \"Safety Population\"\n  )\n  \nprint_to_gt(\n  tfrmt = tfrmt_demog, \n  .data = ard_demog\n  ) |&gt; \n   gt_style_slides()\n\n\n\n\n\n\n\n\n\n\n\n\n\nDemographic Table\n\n\nSafety Population\n\n\n\nPlaceboN = 86\nActiveN = 1681\nOverallN = 254\n\n\n\n\nAge (years)\n\n\n\n\n\n\n\n\n  Median\n  76.0        \n  77.0        \n77.0\n\n\n  [Q1, Q3]\n[69.0, 82.0]  \n[71.0, 81.0]  \n[70.0, 81.0]\n\n\nAge Group\n\n\n\n\n\n\n\n\n  18-64\n    14 (16.3%)\n    19 (11.3%)\n33 (13.0%)\n\n\n  &gt;64\n    72 (83.7%)\n   149 (88.7%)\n221 (87.0%)\n\n\nSex\n\n\n\n\n\n\n\n\n  F\n    53 (61.6%)\n    90 (53.6%)\n143 (56.3%)\n\n\n  M\n    33 (38.4%)\n    78 (46.4%)\n111 (43.7%)\n\n\n\n1 Pooled High and Low Dose"
  },
  {
    "objectID": "slides/05-tables-tfrmt/tfrmt.html#other-features-include",
    "href": "slides/05-tables-tfrmt/tfrmt.html#other-features-include",
    "title": "A quick tour of the many uses of {tfrmt}",
    "section": "Other features include:",
    "text": "Other features include:\n\nTransform values in the formatting\nRow group formatting\nPagination\nMulti-positional column alignment\nTemplating"
  },
  {
    "objectID": "slides/05-tables-tfrmt/tfrmt.html#cards-to-tfrmt---how-did-we-get-here",
    "href": "slides/05-tables-tfrmt/tfrmt.html#cards-to-tfrmt---how-did-we-get-here",
    "title": "A quick tour of the many uses of {tfrmt}",
    "section": "cards to tfrmt - How did we get here?",
    "text": "cards to tfrmt - How did we get here?\n{tfrmt} includes several helper functions to transform native {cards} output to display-ready data. Functionality includes:\n\nCoalesce/rename the group and variable names/levels\nUnlist the list-columns\nPrepare row group and label columns\nFill missing variable values in a hierarchy\nPrepare big N rows for headers\n\nTo explore, let’s start with the result of our cards::ard_stack() call.\n\nlibrary(cards)\n \nard_demog &lt;- cards::ard_stack(\n  data = adsl,\n  .by = TRT01A,\n  cards::ard_continuous( variables = AGE,\n                         statistic = ~ cards::continuous_summary_fns(c(\"median\", \"p25\", \"p75\"))),\n  cards::ard_categorical(variables = c(AGEGR1, SEX), statistic = ~ c(\"n\",\"p\")),\n  .overall = TRUE,\n  .total_n = TRUE\n)"
  },
  {
    "objectID": "slides/05-tables-tfrmt/tfrmt.html#cards-to-tfrmt",
    "href": "slides/05-tables-tfrmt/tfrmt.html#cards-to-tfrmt",
    "title": "A quick tour of the many uses of {tfrmt}",
    "section": "cards to tfrmt",
    "text": "cards to tfrmt\nFirst, let’s “shuffle” the results into a tidy data frame:\n\nard_demog_display &lt;- ard_demog |&gt; \n  tfrmt::shuffle_card(fill_overall = \"Overall\") \n\nard_demog_display\n\n# A tibble: 40 × 9\n   TRT01A AGE    AGEGR1 SEX   context stat_variable stat_name stat_label    stat\n   &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;   &lt;chr&gt;         &lt;chr&gt;     &lt;chr&gt;        &lt;dbl&gt;\n 1 Active Overa… &lt;NA&gt;   &lt;NA&gt;  contin… AGE           median    Median      77    \n 2 Active Overa… &lt;NA&gt;   &lt;NA&gt;  contin… AGE           p25       Q1          71    \n 3 Active Overa… &lt;NA&gt;   &lt;NA&gt;  contin… AGE           p75       Q3          81    \n 4 Active &lt;NA&gt;   &gt;64    &lt;NA&gt;  catego… AGEGR1        n         n          149    \n 5 Active &lt;NA&gt;   &gt;64    &lt;NA&gt;  catego… AGEGR1        p         %            0.887\n 6 Active &lt;NA&gt;   18-64  &lt;NA&gt;  catego… AGEGR1        n         n           19    \n 7 Active &lt;NA&gt;   18-64  &lt;NA&gt;  catego… AGEGR1        p         %            0.113\n 8 Active &lt;NA&gt;   &lt;NA&gt;   F     catego… SEX           n         n           90    \n 9 Active &lt;NA&gt;   &lt;NA&gt;   F     catego… SEX           p         %            0.536\n10 Active &lt;NA&gt;   &lt;NA&gt;   M     catego… SEX           n         n           78    \n# ℹ 30 more rows"
  },
  {
    "objectID": "slides/05-tables-tfrmt/tfrmt.html#cards-to-tfrmt-1",
    "href": "slides/05-tables-tfrmt/tfrmt.html#cards-to-tfrmt-1",
    "title": "A quick tour of the many uses of {tfrmt}",
    "section": "cards to tfrmt",
    "text": "cards to tfrmt\nSince the variable values are now spread wide, we want to collapse them into a single column named variable_level.\n\nard_demog_display &lt;- ard_demog |&gt; \n  tfrmt::shuffle_card(fill_overall = \"Overall\") |&gt; \n  tfrmt::prep_combine_vars(c(\"AGE\",\"AGEGR1\",\"SEX\"))\n\nard_demog_display\n\n# A tibble: 40 × 7\n   TRT01A variable_level context     stat_variable stat_name stat_label    stat\n   &lt;chr&gt;  &lt;chr&gt;          &lt;chr&gt;       &lt;chr&gt;         &lt;chr&gt;     &lt;chr&gt;        &lt;dbl&gt;\n 1 Active Overall        continuous  AGE           median    Median      77    \n 2 Active Overall        continuous  AGE           p25       Q1          71    \n 3 Active Overall        continuous  AGE           p75       Q3          81    \n 4 Active &gt;64            categorical AGEGR1        n         n          149    \n 5 Active &gt;64            categorical AGEGR1        p         %            0.887\n 6 Active 18-64          categorical AGEGR1        n         n           19    \n 7 Active 18-64          categorical AGEGR1        p         %            0.113\n 8 Active F              categorical SEX           n         n           90    \n 9 Active F              categorical SEX           p         %            0.536\n10 Active M              categorical SEX           n         n           78    \n# ℹ 30 more rows"
  },
  {
    "objectID": "slides/05-tables-tfrmt/tfrmt.html#cards-to-tfrmt-2",
    "href": "slides/05-tables-tfrmt/tfrmt.html#cards-to-tfrmt-2",
    "title": "A quick tour of the many uses of {tfrmt}",
    "section": "cards to tfrmt",
    "text": "cards to tfrmt\nNext, we create a row label (“label” column) for the table that is either the category (i.e. variable_level) for categorical variables, or the stat name for continuous variables.\n\nard_demog_display &lt;- ard_demog |&gt; \n  tfrmt::shuffle_card(fill_overall = \"Overall\") |&gt; \n  tfrmt::prep_combine_vars(c(\"AGE\",\"AGEGR1\",\"SEX\")) |&gt; \n  tfrmt::prep_label()\n\nard_demog_display\n\n# A tibble: 40 × 8\n   TRT01A variable_level context     stat_variable stat_name stat_label    stat\n   &lt;chr&gt;  &lt;chr&gt;          &lt;chr&gt;       &lt;chr&gt;         &lt;chr&gt;     &lt;chr&gt;        &lt;dbl&gt;\n 1 Active Overall        continuous  AGE           median    Median      77    \n 2 Active Overall        continuous  AGE           p25       Q1          71    \n 3 Active Overall        continuous  AGE           p75       Q3          81    \n 4 Active &gt;64            categorical AGEGR1        n         n          149    \n 5 Active &gt;64            categorical AGEGR1        p         %            0.887\n 6 Active 18-64          categorical AGEGR1        n         n           19    \n 7 Active 18-64          categorical AGEGR1        p         %            0.113\n 8 Active F              categorical SEX           n         n           90    \n 9 Active F              categorical SEX           p         %            0.536\n10 Active M              categorical SEX           n         n           78    \n# ℹ 30 more rows\n# ℹ 1 more variable: label &lt;chr&gt;"
  },
  {
    "objectID": "slides/05-tables-tfrmt/tfrmt.html#cards-to-tfrmt-3",
    "href": "slides/05-tables-tfrmt/tfrmt.html#cards-to-tfrmt-3",
    "title": "A quick tour of the many uses of {tfrmt}",
    "section": "cards to tfrmt",
    "text": "cards to tfrmt\nTake a look at our “big N” (i.e. population counts) rows:\n\nard_demog_display |&gt; \n  dplyr::filter(stat_variable %in% c(\"TRT01A\", \"..ard_total_n..\"))\n\n# A tibble: 7 × 8\n  TRT01A variable_level context stat_variable stat_name stat_label    stat label\n  &lt;chr&gt;  &lt;chr&gt;          &lt;chr&gt;   &lt;chr&gt;         &lt;chr&gt;     &lt;chr&gt;        &lt;dbl&gt; &lt;chr&gt;\n1 Active &lt;NA&gt;           tabula… TRT01A        n         n          168     &lt;NA&gt; \n2 Active &lt;NA&gt;           tabula… TRT01A        N         N          254     &lt;NA&gt; \n3 Active &lt;NA&gt;           tabula… TRT01A        p         %            0.661 &lt;NA&gt; \n4 Place… &lt;NA&gt;           tabula… TRT01A        n         n           86     &lt;NA&gt; \n5 Place… &lt;NA&gt;           tabula… TRT01A        N         N          254     &lt;NA&gt; \n6 Place… &lt;NA&gt;           tabula… TRT01A        p         %            0.339 &lt;NA&gt; \n7 Overa… &lt;NA&gt;           total_n ..ard_total_… N         N          254     N    \n\n\nFirst, we only need the counts themselves, not denominators or percentages. Second, we need to give these a unique stat name to distinguish them for the big_n_structure in {tfrmt}. We can use the prep_big_n() function for this:\n\nard_demog_display &lt;- ard_demog |&gt; \n  tfrmt::shuffle_card(fill_overall = \"Overall\") |&gt; \n  tfrmt::prep_combine_vars(c(\"AGE\",\"AGEGR1\",\"SEX\")) |&gt; \n  tfrmt::prep_label() |&gt; \n  tfrmt::prep_big_n(vars = \"TRT01A\")\n\nard_demog_display |&gt; \n  dplyr::filter(stat_variable %in% c(\"TRT01A\", \"..ard_total_n..\"))\n\n# A tibble: 3 × 8\n  TRT01A  variable_level context  stat_variable stat_name stat_label  stat label\n  &lt;chr&gt;   &lt;chr&gt;          &lt;chr&gt;    &lt;chr&gt;         &lt;chr&gt;     &lt;chr&gt;      &lt;dbl&gt; &lt;chr&gt;\n1 Active  &lt;NA&gt;           tabulate TRT01A        bigN      n            168 &lt;NA&gt; \n2 Placebo &lt;NA&gt;           tabulate TRT01A        bigN      n             86 &lt;NA&gt; \n3 Overall &lt;NA&gt;           total_n  ..ard_total_… bigN      N            254 N"
  },
  {
    "objectID": "slides/05-tables-tfrmt/tfrmt.html#cards-to-tfrmt-4",
    "href": "slides/05-tables-tfrmt/tfrmt.html#cards-to-tfrmt-4",
    "title": "A quick tour of the many uses of {tfrmt}",
    "section": "cards to tfrmt",
    "text": "cards to tfrmt\nFinally, we can do any other necessary manipulations like relabeling or adding order variables before passing to tfrmt().\n\nard_demog_display &lt;- ard_demog_display |&gt; \n  dplyr::mutate(label = dplyr::case_when(\n    stat_name %in% c(\"p25\",\"p75\") ~ \"[Q1, Q3]\", # put these on 1 line\n    TRUE ~ label\n  ),\n  # relabel\n  stat_variable = dplyr::case_match(\n    stat_variable,\n    \"AGE\" ~ \"Age (years)\",\n    \"AGEGR1\" ~ \"Age Group\",\n    \"SEX\" ~ \"Sex\"\n  ) ) |&gt; \n  dplyr::select(-c(context, stat_label, variable_level)) |&gt;  # drop unneeded vars\n  # make order vars\n  dplyr::mutate(ord1 = as.numeric(\n    factor(stat_variable, \n           levels = c(\"Age (years)\", \"Age Group\", \"Sex\"))),\n    ord2 = as.numeric(\n      factor(label, levels = c(\"18-64\",\"&gt;64\"))))\n\nprint_to_gt(tfrmt_demog, ard_demog_display)|&gt; \n  gt_style_slides()|&gt; \n  gt::tab_options(\n    table.font.size = 15\n  )\n\n\n\n\n\n\n\n\n\n\n\n\n\nDemographic Table\n\n\nSafety Population\n\n\n\nPlaceboN = 86\nActiveN = 1681\nOverallN = 254\n\n\n\n\nAge (years)\n\n\n\n\n\n\n\n\n  Median\n  76.0        \n  77.0        \n77.0\n\n\n  [Q1, Q3]\n[69.0, 82.0]  \n[71.0, 81.0]  \n[70.0, 81.0]\n\n\nAge Group\n\n\n\n\n\n\n\n\n  18-64\n    14 (16.3%)\n    19 (11.3%)\n33 (13.0%)\n\n\n  &gt;64\n    72 (83.7%)\n   149 (88.7%)\n221 (87.0%)\n\n\nSex\n\n\n\n\n\n\n\n\n  F\n    53 (61.6%)\n    90 (53.6%)\n143 (56.3%)\n\n\n  M\n    33 (38.4%)\n    78 (46.4%)\n111 (43.7%)\n\n\n\n1 Pooled High and Low Dose"
  },
  {
    "objectID": "slides/05-tables-tfrmt/tfrmt.html#exercise-together",
    "href": "slides/05-tables-tfrmt/tfrmt.html#exercise-together",
    "title": "A quick tour of the many uses of {tfrmt}",
    "section": "Exercise 🏃‍➡️ (Together!)",
    "text": "Exercise 🏃‍➡️ (Together!)\n\nOpen R file exercises/05-tables-tfrmt.R\nCreate and modify the AE table as described\n\n\n\n\n−+\n08:00"
  },
  {
    "objectID": "slides/04-ARD/intro_to_ards.html",
    "href": "slides/04-ARD/intro_to_ards.html",
    "title": "Analysis Results Standard",
    "section": "",
    "text": "Emerging standard for prospectively encoding statistical analysis reporting pipeline in a machine-readable format.\nLogical model that describes analysis results and associated metadata.\nPrimary objectives:\n\nLeverage analysis results metadata to drive automation of results\nSupport storage, access, processing, traceability and reproducibility of results\n\n\n\n\n\n\nLearn more at https://www.cdisc.org/events/webinar/analysis-results-standard-public-review\n\n\n\n\nExample ARS Flow\n\n\n\n\n\n\nThe ARS provides a metadata-driven infrastructure for analysis\n\n\n\n\nExample ARS Flow\n\n\n\n\n\n\nThe ARS provides a metadata-driven infrastructure for analysis\n{cards} serves as the engine for the analysis\n\n\n\n\n\n\nEncodes statistical analysis outcomes in a machine-readable format.\nThe ARD model specifies how statistical results are saved into a structured format.\nThe ARD can be used to to subsequently create tables and figures.\nThe ARD does not describe the layout of the results\n\n\n\n\n\n\nAfter the initial creation of an ARD, the results can later be re-used again and again for subsequent reporting needs.\n\n\n\n\n\n\n\n\n\n\n\nRethinking QC\n\nQC can be focused on the raw value, not the formatted display\n\nYou don’t have to waste time trying to match formatting to match QC\nBut…QC will be more sensitive to floating point\n\n\nFlexible data file types\n\nARD can be saved as a dataset (rds, xpt, etc) or json file"
  },
  {
    "objectID": "slides/04-ARD/intro_to_ards.html#analysis-results-standard-ars-1",
    "href": "slides/04-ARD/intro_to_ards.html#analysis-results-standard-ars-1",
    "title": "Analysis Results Standard",
    "section": "",
    "text": "Emerging standard for prospectively encoding statistical analysis reporting pipeline in a machine-readable format.\nLogical model that describes analysis results and associated metadata.\nPrimary objectives:\n\nLeverage analysis results metadata to drive automation of results\nSupport storage, access, processing, traceability and reproducibility of results\n\n\n\n\n\n\nLearn more at https://www.cdisc.org/events/webinar/analysis-results-standard-public-review"
  },
  {
    "objectID": "slides/04-ARD/intro_to_ards.html#analysis-results-standard-ars-2",
    "href": "slides/04-ARD/intro_to_ards.html#analysis-results-standard-ars-2",
    "title": "Analysis Results Standard",
    "section": "",
    "text": "Example ARS Flow\n\n\n\n\n\n\nThe ARS provides a metadata-driven infrastructure for analysis"
  },
  {
    "objectID": "slides/04-ARD/intro_to_ards.html#analysis-results-standard-ars-3",
    "href": "slides/04-ARD/intro_to_ards.html#analysis-results-standard-ars-3",
    "title": "Analysis Results Standard",
    "section": "",
    "text": "Example ARS Flow\n\n\n\n\n\n\nThe ARS provides a metadata-driven infrastructure for analysis\n{cards} serves as the engine for the analysis"
  },
  {
    "objectID": "slides/04-ARD/intro_to_ards.html#analysis-results-data-ard",
    "href": "slides/04-ARD/intro_to_ards.html#analysis-results-data-ard",
    "title": "Analysis Results Standard",
    "section": "",
    "text": "Encodes statistical analysis outcomes in a machine-readable format.\nThe ARD model specifies how statistical results are saved into a structured format.\nThe ARD can be used to to subsequently create tables and figures.\nThe ARD does not describe the layout of the results"
  },
  {
    "objectID": "slides/04-ARD/intro_to_ards.html#analysis-results-data-ard-1",
    "href": "slides/04-ARD/intro_to_ards.html#analysis-results-data-ard-1",
    "title": "Analysis Results Standard",
    "section": "",
    "text": "After the initial creation of an ARD, the results can later be re-used again and again for subsequent reporting needs."
  },
  {
    "objectID": "slides/04-ARD/intro_to_ards.html#a-few-notes-about-ards",
    "href": "slides/04-ARD/intro_to_ards.html#a-few-notes-about-ards",
    "title": "Analysis Results Standard",
    "section": "",
    "text": "Rethinking QC\n\nQC can be focused on the raw value, not the formatted display\n\nYou don’t have to waste time trying to match formatting to match QC\nBut…QC will be more sensitive to floating point\n\n\nFlexible data file types\n\nARD can be saved as a dataset (rds, xpt, etc) or json file"
  },
  {
    "objectID": "slides/04-ARD/cards.html",
    "href": "slides/04-ARD/cards.html",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "Part of the Pharmaverse\nCollaboration between Roche, GSK, Novartis, Eli Lilly, Pfizer\nContains a variety of utilities for making ARDs\nCan be used within the ARS workflow and separately\n36k downloads per month 🤯\n\n\n\n\n\nlibrary(cards)\n\n# create ARD with default summary statistics\npharmaverseadam::adsl |&gt; \n  ard_summary(\n    variables = AGE\n  )\n\n{cards} data frame: 8 x 8\n\n\n  variable context stat_name stat_label   stat fmt_fun\n1      AGE summary         N          N    306       0\n2      AGE summary      mean       Mean 75.088       1\n3      AGE summary        sd         SD  8.494       1\n4      AGE summary    median     Median     77       1\n5      AGE summary       p25         Q1     70       1\n6      AGE summary       p75         Q3     81       1\n7      AGE summary       min        Min     50       1\n8      AGE summary       max        Max     89       1\n\n\nℹ 2 more variables: warning, error\n\n\n\n\n\n\n\nby: summary statistics are calculated by all combinations of the by variables, including unobserved factor levels\n\n\n\npharmaverseadam::adsl |&gt; \n  ard_summary(\n    variables = AGE,\n    by = ARM         # stats by treatment arm\n  ) \n\n{cards} data frame: 32 x 10\n\n\n   group1 group1_level variable stat_name stat_label   stat\n1     ARM      Placebo      AGE         N          N     86\n2     ARM      Placebo      AGE      mean       Mean 75.209\n3     ARM      Placebo      AGE        sd         SD   8.59\n4     ARM      Placebo      AGE    median     Median     76\n5     ARM      Placebo      AGE       p25         Q1     69\n6     ARM      Placebo      AGE       p75         Q3     82\n7     ARM      Placebo      AGE       min        Min     52\n8     ARM      Placebo      AGE       max        Max     89\n9     ARM    Screen F…      AGE         N          N     52\n10    ARM    Screen F…      AGE      mean       Mean 75.096\n\n\nℹ 22 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fun, warning, error\n\n\n\n\n\n\n\nstatistic: specify univariate summary statistics. Accepts any function, base R, from a package, or user-defined.\n\n\n\ncv &lt;- function(x)  sd(x, na.rm = TRUE)/mean(x, na.rm = TRUE)\n\npharmaverseadam::adsl |&gt; \n  ard_summary(  \n    variables = AGE,\n    by = ARM,\n    statistic = ~ list(cv = cv) # customize statistics\n  )\n\n{cards} data frame: 4 x 10\n\n\n  group1 group1_level variable stat_name stat_label  stat\n1    ARM      Placebo      AGE        cv         cv 0.114\n2    ARM    Screen F…      AGE        cv         cv 0.129\n3    ARM    Xanomeli…      AGE        cv         cv 0.106\n4    ARM    Xanomeli…      AGE        cv         cv  0.11\n\n\nℹ 4 more variables: context, fmt_fun, warning, error\n\n\n\n\n\n\nCustomize the statistics returned for each variable\n\n\npharmaverseadam::adsl |&gt; \n  dplyr::mutate(AGE2 = AGE) |&gt; \n  ard_summary(\n    variables = c(AGE, AGE2),\n    by = ARM,\n    statistic = list(AGE = list(cv = cv),\n                     AGE2 = continuous_summary_fns(c(\"mean\",\"median\")))\n  )\n\n{cards} data frame: 12 x 10\n\n\n   group1 group1_level variable stat_name stat_label   stat\n1     ARM      Placebo      AGE        cv         cv  0.114\n2     ARM      Placebo     AGE2      mean       Mean 75.209\n3     ARM      Placebo     AGE2    median     Median     76\n4     ARM    Screen F…      AGE        cv         cv  0.129\n5     ARM    Screen F…     AGE2      mean       Mean 75.096\n6     ARM    Screen F…     AGE2    median     Median     76\n7     ARM    Xanomeli…      AGE        cv         cv  0.106\n8     ARM    Xanomeli…     AGE2      mean       Mean 74.381\n9     ARM    Xanomeli…     AGE2    median     Median     76\n10    ARM    Xanomeli…      AGE        cv         cv   0.11\n11    ARM    Xanomeli…     AGE2      mean       Mean 75.667\n12    ARM    Xanomeli…     AGE2    median     Median   77.5\n\n\nℹ 4 more variables: context, fmt_fun, warning, error\n\n\n\n\n\n\nOverride the default formatting functions, method 1:\n\n\npharmaverseadam::adsl |&gt; \n  ard_summary(\n    variables = AGE,\n    by = ARM,                               \n    fmt_fun = ~list(mean = 0)                \n  ) |&gt; \n  apply_fmt_fun() # add a character column of rounded results\n\n{cards} data frame: 32 x 11\n\n\n   group1 group1_level variable stat_name stat_label   stat stat_fmt\n1     ARM      Placebo      AGE         N          N     86       86\n2     ARM      Placebo      AGE      mean       Mean 75.209       75\n3     ARM      Placebo      AGE        sd         SD   8.59      8.6\n4     ARM      Placebo      AGE    median     Median     76     76.0\n5     ARM      Placebo      AGE       p25         Q1     69     69.0\n6     ARM      Placebo      AGE       p75         Q3     82     82.0\n7     ARM      Placebo      AGE       min        Min     52     52.0\n8     ARM      Placebo      AGE       max        Max     89     89.0\n9     ARM    Screen F…      AGE         N          N     52       52\n10    ARM    Screen F…      AGE      mean       Mean 75.096       75\n\n\nℹ 22 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fun, warning, error\n\n\n\n\n\n\nOverride the default formatting functions, method 2:\n\n\npharmaverseadam::adsl |&gt; \n  ard_summary(\n    variables = AGE,\n    by = ARM,                               \n  ) |&gt; \n  update_ard_fmt_fun(stat_names = \"mean\", fmt_fun = 0) |&gt; \n  apply_fmt_fun() \n\n{cards} data frame: 32 x 11\n\n\n   group1 group1_level variable stat_name stat_label   stat stat_fmt\n1     ARM      Placebo      AGE         N          N     86       86\n2     ARM      Placebo      AGE      mean       Mean 75.209       75\n3     ARM      Placebo      AGE        sd         SD   8.59      8.6\n4     ARM      Placebo      AGE    median     Median     76     76.0\n5     ARM      Placebo      AGE       p25         Q1     69     69.0\n6     ARM      Placebo      AGE       p75         Q3     82     82.0\n7     ARM      Placebo      AGE       min        Min     52     52.0\n8     ARM      Placebo      AGE       max        Max     89     89.0\n9     ARM    Screen F…      AGE         N          N     52       52\n10    ARM    Screen F…      AGE      mean       Mean 75.096       75\n\n\nℹ 22 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fun, warning, error\n\n\n\n\n\n\n\nincludes n, %, N by default\n\n\n\npharmaverseadam::adsl |&gt; \n  ard_tabulate(\n    by = ARM,\n    variables = AGEGR1\n  ) \n\n{cards} data frame: 24 x 11\n\n\n   group1 group1_level variable variable_level stat_name stat_label  stat\n1     ARM      Placebo   AGEGR1            &gt;64         n          n    72\n2     ARM      Placebo   AGEGR1            &gt;64         N          N    86\n3     ARM      Placebo   AGEGR1            &gt;64         p          % 0.837\n4     ARM      Placebo   AGEGR1          18-64         n          n    14\n5     ARM      Placebo   AGEGR1          18-64         N          N    86\n6     ARM      Placebo   AGEGR1          18-64         p          % 0.163\n7     ARM    Screen F…   AGEGR1            &gt;64         n          n    43\n8     ARM    Screen F…   AGEGR1            &gt;64         N          N    52\n9     ARM    Screen F…   AGEGR1            &gt;64         p          % 0.827\n10    ARM    Screen F…   AGEGR1          18-64         n          n     9\n\n\nℹ 14 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fun, warning, error\n\n\n\nAny unobserved levels of the variables will be present in the resulting ARD.\n\n\n\n\n\nard_hierarchical(): similar to ard_tabulate(), but built for nested tabulations, e.g. AE terms within SOC\nard_mvsummary(): similar to ard_summary(), for multivariate summaries. The function accepts other arguments like the full and subsetted (within the by groups) data sets.\nard_missing(): tabulates rates of missingness\n\nThe results from all these functions are entirely compatible with one another, and can be stacked into a single data frame. 🥞\n\n\n\nIn addition to exporting functions to prepare summaries, {cards} exports many utilities for wrangling ARDs and creating new ARDs.\nConstructing: bind_ard(), tidy_as_ard(), nest_for_ard(), check_ard_structure(), and many more\nWrangling: get_ard_statistics(), replace_null_statistic(), etc.\n\n\n\n\n\ndata and .by are shared by all ard_* calls\nAdditional Options .overall, .missing, .attributes, and .total_n provide even more results\nBy default, summaries of the .by variable are included\n\n\n\npharmaverseadam::adsl |&gt; \n  ard_stack( \n    .by = ARM,      \n    ard_summary(variables = AGE, statistic = ~ continuous_summary_fns(c(\"mean\",\"sd\"))), \n    ard_tabulate(variables = AGEGR1, statistic = ~ \"p\")\n  )  \n\n{cards} data frame: 28 x 11\n\n\n   group1 group1_level variable variable_level stat_name stat_label   stat\n1     ARM      Placebo      AGE                     mean       Mean 75.209\n2     ARM      Placebo      AGE                       sd         SD   8.59\n3     ARM      Placebo   AGEGR1            &gt;64         p          %  0.837\n4     ARM      Placebo   AGEGR1          18-64         p          %  0.163\n5     ARM    Screen F…      AGE                     mean       Mean 75.096\n6     ARM    Screen F…      AGE                       sd         SD    9.7\n7     ARM    Screen F…   AGEGR1            &gt;64         p          %  0.827\n8     ARM    Screen F…   AGEGR1          18-64         p          %  0.173\n9     ARM    Xanomeli…      AGE                     mean       Mean 74.381\n10    ARM    Xanomeli…      AGE                       sd         SD  7.886\n\n\nℹ 18 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fun, warning, error\n\n\n\n\n\n\nOpen exercises/04-ARD-partA.R\nCompute summaries for a demography table that includes AGE, SEX, and RACE.\n\n\n\n\nFollowing hierarchical summary functions aid in nested tabulations (e.g. AE terms within SOC):\n\nard_hierarchical(): calculating nested subject-level rates\nard_hierarchical_count(): calculating nested event-level counts\n\n\n\n\n\nThis function specializes in calculating subject-level rates.\n\nRates computed on lowest level variables, nested within others\nid helps to check that no duplicate rows exist within the c(id, variables) columns\ndenominator dictates the denominator for the rates\n\n\n\nard_hierarchical(\n  data = adae |&gt; dplyr::slice_tail(n = 1L, by = c(USUBJID, ARM, AESOC, AEDECOD)),\n  variables = c(AESOC, AEDECOD),\n  by = TRT01A,\n  id = USUBJID,\n  denominator = ADSL\n)\n\n{cards} data frame: 81 x 13\n\n\n   group1 group1_level group2 group2_level variable variable_level stat_name\n1  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         n\n2  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         N\n3  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         p\n4  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      HIATUS H…         n\n5  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      HIATUS H…         N\n6  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      HIATUS H…         p\n7  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD       VOMITING         n\n8  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD       VOMITING         N\n9  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD       VOMITING         p\n10 TRT01A      Placebo  AESOC    GENERAL …  AEDECOD      APPLICAT…         n\n   stat_label  stat\n1           n     9\n2           N    86\n3           % 0.105\n4           n     1\n5           N    86\n6           % 0.012\n7           n     3\n8           N    86\n9           % 0.035\n10          n     3\n\n\nℹ 71 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fun, warning, error\n\n\n\n\n\n\nThis function specializes in calculating event-level frequencies.\n\n\nard_hierarchical_count(\n  data = adae,\n  variables = c(AESOC, AEDECOD),\n  by = TRT01A\n)\n\n{cards} data frame: 27 x 13\n\n\n   group1 group1_level group2 group2_level variable variable_level stat_name\n1  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         n\n2  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      HIATUS H…         n\n3  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD       VOMITING         n\n4  TRT01A      Placebo  AESOC    GENERAL …  AEDECOD      APPLICAT…         n\n5  TRT01A      Placebo  AESOC    GENERAL …  AEDECOD      APPLICAT…         n\n6  TRT01A      Placebo  AESOC    GENERAL …  AEDECOD        FATIGUE         n\n7  TRT01A      Placebo  AESOC    SKIN AND…  AEDECOD       ERYTHEMA         n\n8  TRT01A      Placebo  AESOC    SKIN AND…  AEDECOD       PRURITUS         n\n9  TRT01A      Placebo  AESOC    SKIN AND…  AEDECOD      PRURITUS…         n\n10 TRT01A    Xanomeli…  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         n\n   stat_label stat\n1           n   10\n2           n    2\n3           n    3\n4           n    3\n5           n   10\n6           n    2\n7           n   13\n8           n   11\n9           n    0\n10          n    3\n\n\nℹ 17 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fun, warning, error\n\n\n\n\n\n\nDisplays for hierarchical data typically report on each level of the hierarchy (Any AE Overall, by System Organ Class, by Preferred Term)\nThis can mean several calls to the ard_hierarchical_* functions\nFurther, subject-level summaries require a different subset of the data each time. For example, to calculate Overall rates, we need to subset to 1 record per subject in ADAE.\n\n\n\nIs there an easier way?\n\n\n\n\n\n\n\nard_hierarchical stacking functions simplify this multi-step process into a single step\nThe id argument is used to subset the data along the way\n\n\n\nard_stack_hierarchical(\n  data = adae,\n  variables = c(AESOC, AEDECOD),\n  by = TRT01A,\n  id = USUBJID,\n  denominator = pharmaverseadam::adsl\n)\n\n\n\n{cards} data frame: 12 x 13\n\n\n   group1 group1_level group2 group2_level variable variable_level stat_name\n1  TRT01A      Placebo   &lt;NA&gt;                 AESOC      GASTROIN…         n\n2  TRT01A      Placebo   &lt;NA&gt;                 AESOC      GASTROIN…         N\n3  TRT01A      Placebo   &lt;NA&gt;                 AESOC      GASTROIN…         p\n4  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         n\n5  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         N\n6  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         p\n7  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      HIATUS H…         n\n8  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      HIATUS H…         N\n9  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      HIATUS H…         p\n10 TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD       VOMITING         n\n11 TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD       VOMITING         N\n12 TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD       VOMITING         p\n   stat_label  stat\n1           n    12\n2           N    86\n3           %  0.14\n4           n     9\n5           N    86\n6           % 0.105\n7           n     1\n8           N    86\n9           % 0.012\n10          n     3\n11          N    86\n12          % 0.035\n\n\nℹ 4 more variables: context, fmt_fun, warning, error\n\n\n\n\n\n\n\nBelow is the stacking function for event-level summaries, aligned with ard_hierarchical_count()\n\n\n\nard_stack_hierarchical_count(\n  data = adae,\n  variables = c(AESOC, AEDECOD),\n  by = TRT01A, \n  denominator = pharmaverseadam::adsl\n)\n\n\n\n{cards} data frame: 4 x 13\n\n\n  group1 group1_level group2 group2_level variable variable_level stat_name\n1 TRT01A      Placebo   &lt;NA&gt;                 AESOC      GASTROIN…         n\n2 TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         n\n3 TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      HIATUS H…         n\n4 TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD       VOMITING         n\n  stat_label stat\n1          n   15\n2          n   10\n3          n    2\n4          n    3\n\n\nℹ 4 more variables: context, fmt_fun, warning, error\n\n\n\n\n\n\nOpen exercises/04-ARD-partB.R\nCompute the nested AE tabulations as described\n\n\n\n\n−+\n08:00\n\n\n\n\n\n\n\nExtension of the {cards} package, providing additional functions to create Analysis Results Datasets (ARDs)\nThe {cardx} package exports many ard_*() function for statistical methods.\n\n\n\n\n\n\n\n\n\n\nExports ARD frameworks for statistical analyses from many packages\n\n\n  - {stats}\n  - {car}\n  - {effectsize}\n  - {emmeans}\n  - {geepack}\n  - {lme4}\n  - {parameters}\n  - {smd}\n  - {survey}\n  - {survival}\n\n\nThis list is growing (rather quickly) 🌱\n\n\n\n\n\n\nWe see the results like the mean difference, the confidence interval, and p-value as expected.\nAnd we also see the function’s inputs, which is incredibly useful for re-use, e.g. we know the we did not use equal variances.\n\n\n\npharmaverseadam::adsl |&gt; \n  dplyr::filter(ARM %in% c(\"Xanomeline High Dose\", \"Xanomeline Low Dose\")) |&gt;\n  cardx::ard_stats_t_test(by = ARM, variables = AGE)\n\n{cards} data frame: 14 x 9\n\n\n   group1 variable   context   stat_name stat_label      stat\n1     ARM      AGE stats_t_…    estimate  Mean Dif…    -1.286\n2     ARM      AGE stats_t_…   estimate1  Group 1 …    74.381\n3     ARM      AGE stats_t_…   estimate2  Group 2 …    75.667\n4     ARM      AGE stats_t_…   statistic  t Statis…     -1.03\n5     ARM      AGE stats_t_…     p.value    p-value     0.304\n6     ARM      AGE stats_t_…   parameter  Degrees …   165.595\n7     ARM      AGE stats_t_…    conf.low  CI Lower…     -3.75\n8     ARM      AGE stats_t_…   conf.high  CI Upper…     1.179\n9     ARM      AGE stats_t_…      method     method Welch Tw…\n10    ARM      AGE stats_t_… alternative  alternat… two.sided\n11    ARM      AGE stats_t_…          mu    H0 Mean         0\n12    ARM      AGE stats_t_…      paired  Paired t…     FALSE\n13    ARM      AGE stats_t_…   var.equal  Equal Va…     FALSE\n14    ARM      AGE stats_t_…  conf.level  CI Confi…      0.95\n\n\nℹ 3 more variables: fmt_fun, warning, error\n\n\n\n\n\n\nWhat to do if a method you need is not implemented?\nIt’s simple to wrap existing frameworks to customize.\nOne-sample t-test example utilizing cards::ard_continuous().\n\n\npharmaverseadam::adsl |&gt; \n  dplyr::filter(ARM %in% c(\"Xanomeline High Dose\", \"Xanomeline Low Dose\")) |&gt;\n  cards::ard_summary(\n    variables = AGE,\n    statistic = everything() ~ list(t_test = \\(x) t.test(x) |&gt; broom::tidy())\n  ) |&gt; \n  dplyr::mutate(context = \"t_test_one_sample\")\n\n{cards} data frame: 8 x 8\n\n\n  variable   context   stat_name stat_label      stat fmt_fun\n1      AGE t_test_o…    estimate   estimate    75.024       1\n2      AGE t_test_o…   statistic  statistic     120.2       1\n3      AGE t_test_o…     p.value    p.value         0       1\n4      AGE t_test_o…   parameter  parameter       167       1\n5      AGE t_test_o…    conf.low   conf.low    73.792       1\n6      AGE t_test_o…   conf.high  conf.high    76.256       1\n7      AGE t_test_o…      method     method One Samp…    &lt;fn&gt;\n8      AGE t_test_o… alternative  alternat… two.sided    &lt;fn&gt;\n\n\nℹ 2 more variables: warning, error\n\n\n\n\n\n\nHow to modify if we need a two-sample test, or more generally accessing other columns in the data frame.\n\n\npharmaverseadam::adsl |&gt; \n  dplyr::filter(ARM %in% c(\"Xanomeline High Dose\", \"Xanomeline Low Dose\")) |&gt;\n  cards::ard_mvsummary(\n    variables = AGE,\n    statistic = \n      ~ list(t_test = \\(x, data, ...) t.test(x ~ data$ARM) |&gt; broom::tidy())\n  ) |&gt; \n  dplyr::mutate(group1 = \"ARM\", context = \"t_test_two_sample\") |&gt; \n  cards::tidy_ard_column_order()\n\n{cards} data frame: 10 x 9\n\n\n   group1 variable   context   stat_name stat_label      stat\n1     ARM      AGE t_test_t…    estimate   estimate    -1.286\n2     ARM      AGE t_test_t…   estimate1  estimate1    74.381\n3     ARM      AGE t_test_t…   estimate2  estimate2    75.667\n4     ARM      AGE t_test_t…   statistic  statistic     -1.03\n5     ARM      AGE t_test_t…     p.value    p.value     0.304\n6     ARM      AGE t_test_t…   parameter  parameter   165.595\n7     ARM      AGE t_test_t…    conf.low   conf.low     -3.75\n8     ARM      AGE t_test_t…   conf.high  conf.high     1.179\n9     ARM      AGE t_test_t…      method     method Welch Tw…\n10    ARM      AGE t_test_t… alternative  alternat… two.sided\n\n\nℹ 3 more variables: fmt_fun, warning, error\n\n\n\n\n\n\nIncludes functionality to summarize nearly every type of regression model in the R ecosystem:\n\n\nbetareg::betareg(), biglm::bigglm(), brms::brm(), cmprsk::crr(), fixest::feglm(), fixest::femlm(), fixest::feNmlm(), fixest::feols(), gam::gam(), geepack::geeglm(), glmmTMB::glmmTMB(), glmtoolbox::glmgee(), lavaan::lavaan(), lfe::felm(), lme4::glmer.nb(), lme4::glmer(), lme4::lmer(), logitr::logitr(), MASS::glm.nb(), MASS::polr(), mgcv::gam(), mice::mira, mmrm::mmrm(), multgee::nomLORgee(), multgee::ordLORgee(), nnet::multinom(), ordinal::clm(), ordinal::clmm(), parsnip::model_fit, plm::plm(), pscl::hurdle(), pscl::zeroinfl(), rstanarm::stan_glm(), stats::aov(), stats::glm(), stats::lm(), stats::nls(), survey::svycoxph(), survey::svyglm(), survey::svyolr(), survival::cch(), survival::clogit(), survival::coxph(), survival::survreg(), svyVGAM::svy_vglm(), tidycmprsk::crr(), VGAM::vgam(), VGAM::vglm() (and more)\n\n\n\n\nThe cardx::ard_regression() does a lot for us in the background.\n\nIdentifies the variable from the regression terms (i.e. groups levels of the same variable)\nIdentifies reference groups from categorical covariates\nFinds variable labels from the source data frames\nKnows the total N of the model, the number of events, and can do the same for each level of categorical variables\nContextually aware of slopes, odds ratios, hazard ratios, and incidence rate ratios\nAnd much much more.\n\n\nlm(AGE ~ ARM, data = cards::ADSL) |&gt;\n  cardx::ard_regression(add_estimate_to_reference_rows = TRUE)\n\n{cards} data frame: 43 x 9\n\n\n   variable variable_level   context      stat_name stat_label      stat\n1       ARM        Placebo regressi…           term       term ARMPlace…\n2       ARM        Placebo regressi…      var_label      Label Descript…\n3       ARM        Placebo regressi…      var_class      Class character\n4       ARM        Placebo regressi…       var_type       Type categori…\n5       ARM        Placebo regressi…    var_nlevels   N Levels         3\n6       ARM        Placebo regressi…      contrasts  contrasts contr.tr…\n7       ARM        Placebo regressi… contrasts_type  Contrast… treatment\n8       ARM        Placebo regressi…  reference_row  referenc…      TRUE\n9       ARM        Placebo regressi…          label  Level La…   Placebo\n10      ARM        Placebo regressi…          n_obs     N Obs.        86\n\n\nℹ 33 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 3 more variables: fmt_fun, warning, error\n\n\n\n\n\nWhat happens when statistics are un-calculable?\n\nard_gone_wrong &lt;- \n  cards::ADSL |&gt; \n  cards::ard_summary(\n    by = ARM,\n    variable = AGEGR1,\n    statistic = ~list(kurtosis = \\(x) e1071::kurtosis(x))\n  ) |&gt; \n  cards::replace_null_statistic()\nard_gone_wrong\n\n{cards} data frame: 3 x 10\n\n\n  group1 group1_level variable stat_name stat_label stat   warning     error\n1    ARM      Placebo   AGEGR1  kurtosis   kurtosis   NA argument… non-nume…\n2    ARM    Xanomeli…   AGEGR1  kurtosis   kurtosis   NA argument… non-nume…\n3    ARM    Xanomeli…   AGEGR1  kurtosis   kurtosis   NA argument… non-nume…\n\n\nℹ 2 more variables: context, fmt_fun\n\n\n\ncards::print_ard_conditions(ard_gone_wrong)\n\n\n\n\nWhere is the statistic? AGEGR1 is character\nEven when there are errors or warnings, we still get the ARD with the expected structure returned.\n\nTHIS IS BIG! There are MANY circumstances, when you are designing TLGs early in a study when you do not have all the data required to calculate every statistic.\nThis allows you to design everything up-front.\n\nWe can also report these warnings and errors back to users. &lt;!CLICK!&gt;"
  },
  {
    "objectID": "slides/04-ARD/cards.html#cards-introduction",
    "href": "slides/04-ARD/cards.html#cards-introduction",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "Part of the Pharmaverse\nCollaboration between Roche, GSK, Novartis, Eli Lilly, Pfizer\nContains a variety of utilities for making ARDs\nCan be used within the ARS workflow and separately\n36k downloads per month 🤯"
  },
  {
    "objectID": "slides/04-ARD/cards.html#cards-ard_summary",
    "href": "slides/04-ARD/cards.html#cards-ard_summary",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "library(cards)\n\n# create ARD with default summary statistics\npharmaverseadam::adsl |&gt; \n  ard_summary(\n    variables = AGE\n  )\n\n{cards} data frame: 8 x 8\n\n\n  variable context stat_name stat_label   stat fmt_fun\n1      AGE summary         N          N    306       0\n2      AGE summary      mean       Mean 75.088       1\n3      AGE summary        sd         SD  8.494       1\n4      AGE summary    median     Median     77       1\n5      AGE summary       p25         Q1     70       1\n6      AGE summary       p75         Q3     81       1\n7      AGE summary       min        Min     50       1\n8      AGE summary       max        Max     89       1\n\n\nℹ 2 more variables: warning, error"
  },
  {
    "objectID": "slides/04-ARD/cards.html#cards-ard_summary-by-variable",
    "href": "slides/04-ARD/cards.html#cards-ard_summary-by-variable",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "by: summary statistics are calculated by all combinations of the by variables, including unobserved factor levels\n\n\n\npharmaverseadam::adsl |&gt; \n  ard_summary(\n    variables = AGE,\n    by = ARM         # stats by treatment arm\n  ) \n\n{cards} data frame: 32 x 10\n\n\n   group1 group1_level variable stat_name stat_label   stat\n1     ARM      Placebo      AGE         N          N     86\n2     ARM      Placebo      AGE      mean       Mean 75.209\n3     ARM      Placebo      AGE        sd         SD   8.59\n4     ARM      Placebo      AGE    median     Median     76\n5     ARM      Placebo      AGE       p25         Q1     69\n6     ARM      Placebo      AGE       p75         Q3     82\n7     ARM      Placebo      AGE       min        Min     52\n8     ARM      Placebo      AGE       max        Max     89\n9     ARM    Screen F…      AGE         N          N     52\n10    ARM    Screen F…      AGE      mean       Mean 75.096\n\n\nℹ 22 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fun, warning, error"
  },
  {
    "objectID": "slides/04-ARD/cards.html#cards-ard_summary-statistics",
    "href": "slides/04-ARD/cards.html#cards-ard_summary-statistics",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "statistic: specify univariate summary statistics. Accepts any function, base R, from a package, or user-defined.\n\n\n\ncv &lt;- function(x)  sd(x, na.rm = TRUE)/mean(x, na.rm = TRUE)\n\npharmaverseadam::adsl |&gt; \n  ard_summary(  \n    variables = AGE,\n    by = ARM,\n    statistic = ~ list(cv = cv) # customize statistics\n  )\n\n{cards} data frame: 4 x 10\n\n\n  group1 group1_level variable stat_name stat_label  stat\n1    ARM      Placebo      AGE        cv         cv 0.114\n2    ARM    Screen F…      AGE        cv         cv 0.129\n3    ARM    Xanomeli…      AGE        cv         cv 0.106\n4    ARM    Xanomeli…      AGE        cv         cv  0.11\n\n\nℹ 4 more variables: context, fmt_fun, warning, error"
  },
  {
    "objectID": "slides/04-ARD/cards.html#cards-ard_summary-statistics-1",
    "href": "slides/04-ARD/cards.html#cards-ard_summary-statistics-1",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "Customize the statistics returned for each variable\n\n\npharmaverseadam::adsl |&gt; \n  dplyr::mutate(AGE2 = AGE) |&gt; \n  ard_summary(\n    variables = c(AGE, AGE2),\n    by = ARM,\n    statistic = list(AGE = list(cv = cv),\n                     AGE2 = continuous_summary_fns(c(\"mean\",\"median\")))\n  )\n\n{cards} data frame: 12 x 10\n\n\n   group1 group1_level variable stat_name stat_label   stat\n1     ARM      Placebo      AGE        cv         cv  0.114\n2     ARM      Placebo     AGE2      mean       Mean 75.209\n3     ARM      Placebo     AGE2    median     Median     76\n4     ARM    Screen F…      AGE        cv         cv  0.129\n5     ARM    Screen F…     AGE2      mean       Mean 75.096\n6     ARM    Screen F…     AGE2    median     Median     76\n7     ARM    Xanomeli…      AGE        cv         cv  0.106\n8     ARM    Xanomeli…     AGE2      mean       Mean 74.381\n9     ARM    Xanomeli…     AGE2    median     Median     76\n10    ARM    Xanomeli…      AGE        cv         cv   0.11\n11    ARM    Xanomeli…     AGE2      mean       Mean 75.667\n12    ARM    Xanomeli…     AGE2    median     Median   77.5\n\n\nℹ 4 more variables: context, fmt_fun, warning, error"
  },
  {
    "objectID": "slides/04-ARD/cards.html#cards-ard_summary-fmt_fun",
    "href": "slides/04-ARD/cards.html#cards-ard_summary-fmt_fun",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "Override the default formatting functions, method 1:\n\n\npharmaverseadam::adsl |&gt; \n  ard_summary(\n    variables = AGE,\n    by = ARM,                               \n    fmt_fun = ~list(mean = 0)                \n  ) |&gt; \n  apply_fmt_fun() # add a character column of rounded results\n\n{cards} data frame: 32 x 11\n\n\n   group1 group1_level variable stat_name stat_label   stat stat_fmt\n1     ARM      Placebo      AGE         N          N     86       86\n2     ARM      Placebo      AGE      mean       Mean 75.209       75\n3     ARM      Placebo      AGE        sd         SD   8.59      8.6\n4     ARM      Placebo      AGE    median     Median     76     76.0\n5     ARM      Placebo      AGE       p25         Q1     69     69.0\n6     ARM      Placebo      AGE       p75         Q3     82     82.0\n7     ARM      Placebo      AGE       min        Min     52     52.0\n8     ARM      Placebo      AGE       max        Max     89     89.0\n9     ARM    Screen F…      AGE         N          N     52       52\n10    ARM    Screen F…      AGE      mean       Mean 75.096       75\n\n\nℹ 22 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fun, warning, error"
  },
  {
    "objectID": "slides/04-ARD/cards.html#cards-ard_summary-fmt_fun-1",
    "href": "slides/04-ARD/cards.html#cards-ard_summary-fmt_fun-1",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "Override the default formatting functions, method 2:\n\n\npharmaverseadam::adsl |&gt; \n  ard_summary(\n    variables = AGE,\n    by = ARM,                               \n  ) |&gt; \n  update_ard_fmt_fun(stat_names = \"mean\", fmt_fun = 0) |&gt; \n  apply_fmt_fun() \n\n{cards} data frame: 32 x 11\n\n\n   group1 group1_level variable stat_name stat_label   stat stat_fmt\n1     ARM      Placebo      AGE         N          N     86       86\n2     ARM      Placebo      AGE      mean       Mean 75.209       75\n3     ARM      Placebo      AGE        sd         SD   8.59      8.6\n4     ARM      Placebo      AGE    median     Median     76     76.0\n5     ARM      Placebo      AGE       p25         Q1     69     69.0\n6     ARM      Placebo      AGE       p75         Q3     82     82.0\n7     ARM      Placebo      AGE       min        Min     52     52.0\n8     ARM      Placebo      AGE       max        Max     89     89.0\n9     ARM    Screen F…      AGE         N          N     52       52\n10    ARM    Screen F…      AGE      mean       Mean 75.096       75\n\n\nℹ 22 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fun, warning, error"
  },
  {
    "objectID": "slides/04-ARD/cards.html#cards-ard_tabulate",
    "href": "slides/04-ARD/cards.html#cards-ard_tabulate",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "includes n, %, N by default\n\n\n\npharmaverseadam::adsl |&gt; \n  ard_tabulate(\n    by = ARM,\n    variables = AGEGR1\n  ) \n\n{cards} data frame: 24 x 11\n\n\n   group1 group1_level variable variable_level stat_name stat_label  stat\n1     ARM      Placebo   AGEGR1            &gt;64         n          n    72\n2     ARM      Placebo   AGEGR1            &gt;64         N          N    86\n3     ARM      Placebo   AGEGR1            &gt;64         p          % 0.837\n4     ARM      Placebo   AGEGR1          18-64         n          n    14\n5     ARM      Placebo   AGEGR1          18-64         N          N    86\n6     ARM      Placebo   AGEGR1          18-64         p          % 0.163\n7     ARM    Screen F…   AGEGR1            &gt;64         n          n    43\n8     ARM    Screen F…   AGEGR1            &gt;64         N          N    52\n9     ARM    Screen F…   AGEGR1            &gt;64         p          % 0.827\n10    ARM    Screen F…   AGEGR1          18-64         n          n     9\n\n\nℹ 14 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fun, warning, error\n\n\n\nAny unobserved levels of the variables will be present in the resulting ARD."
  },
  {
    "objectID": "slides/04-ARD/cards.html#cards-other-summary-functions",
    "href": "slides/04-ARD/cards.html#cards-other-summary-functions",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "ard_hierarchical(): similar to ard_tabulate(), but built for nested tabulations, e.g. AE terms within SOC\nard_mvsummary(): similar to ard_summary(), for multivariate summaries. The function accepts other arguments like the full and subsetted (within the by groups) data sets.\nard_missing(): tabulates rates of missingness\n\nThe results from all these functions are entirely compatible with one another, and can be stacked into a single data frame. 🥞"
  },
  {
    "objectID": "slides/04-ARD/cards.html#cards-other-functions",
    "href": "slides/04-ARD/cards.html#cards-other-functions",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "In addition to exporting functions to prepare summaries, {cards} exports many utilities for wrangling ARDs and creating new ARDs.\nConstructing: bind_ard(), tidy_as_ard(), nest_for_ard(), check_ard_structure(), and many more\nWrangling: get_ard_statistics(), replace_null_statistic(), etc."
  },
  {
    "objectID": "slides/04-ARD/cards.html#cards-stacking-utilities",
    "href": "slides/04-ARD/cards.html#cards-stacking-utilities",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "data and .by are shared by all ard_* calls\nAdditional Options .overall, .missing, .attributes, and .total_n provide even more results\nBy default, summaries of the .by variable are included\n\n\n\npharmaverseadam::adsl |&gt; \n  ard_stack( \n    .by = ARM,      \n    ard_summary(variables = AGE, statistic = ~ continuous_summary_fns(c(\"mean\",\"sd\"))), \n    ard_tabulate(variables = AGEGR1, statistic = ~ \"p\")\n  )  \n\n{cards} data frame: 28 x 11\n\n\n   group1 group1_level variable variable_level stat_name stat_label   stat\n1     ARM      Placebo      AGE                     mean       Mean 75.209\n2     ARM      Placebo      AGE                       sd         SD   8.59\n3     ARM      Placebo   AGEGR1            &gt;64         p          %  0.837\n4     ARM      Placebo   AGEGR1          18-64         p          %  0.163\n5     ARM    Screen F…      AGE                     mean       Mean 75.096\n6     ARM    Screen F…      AGE                       sd         SD    9.7\n7     ARM    Screen F…   AGEGR1            &gt;64         p          %  0.827\n8     ARM    Screen F…   AGEGR1          18-64         p          %  0.173\n9     ARM    Xanomeli…      AGE                     mean       Mean 74.381\n10    ARM    Xanomeli…      AGE                       sd         SD  7.886\n\n\nℹ 18 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fun, warning, error"
  },
  {
    "objectID": "slides/04-ARD/cards.html#exercise-together",
    "href": "slides/04-ARD/cards.html#exercise-together",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "Open exercises/04-ARD-partA.R\nCompute summaries for a demography table that includes AGE, SEX, and RACE."
  },
  {
    "objectID": "slides/04-ARD/cards.html#cards-hierarchical-summary-functions",
    "href": "slides/04-ARD/cards.html#cards-hierarchical-summary-functions",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "Following hierarchical summary functions aid in nested tabulations (e.g. AE terms within SOC):\n\nard_hierarchical(): calculating nested subject-level rates\nard_hierarchical_count(): calculating nested event-level counts"
  },
  {
    "objectID": "slides/04-ARD/cards.html#cards-ard_hierarchical",
    "href": "slides/04-ARD/cards.html#cards-ard_hierarchical",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "This function specializes in calculating subject-level rates.\n\nRates computed on lowest level variables, nested within others\nid helps to check that no duplicate rows exist within the c(id, variables) columns\ndenominator dictates the denominator for the rates\n\n\n\nard_hierarchical(\n  data = adae |&gt; dplyr::slice_tail(n = 1L, by = c(USUBJID, ARM, AESOC, AEDECOD)),\n  variables = c(AESOC, AEDECOD),\n  by = TRT01A,\n  id = USUBJID,\n  denominator = ADSL\n)\n\n{cards} data frame: 81 x 13\n\n\n   group1 group1_level group2 group2_level variable variable_level stat_name\n1  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         n\n2  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         N\n3  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         p\n4  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      HIATUS H…         n\n5  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      HIATUS H…         N\n6  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      HIATUS H…         p\n7  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD       VOMITING         n\n8  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD       VOMITING         N\n9  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD       VOMITING         p\n10 TRT01A      Placebo  AESOC    GENERAL …  AEDECOD      APPLICAT…         n\n   stat_label  stat\n1           n     9\n2           N    86\n3           % 0.105\n4           n     1\n5           N    86\n6           % 0.012\n7           n     3\n8           N    86\n9           % 0.035\n10          n     3\n\n\nℹ 71 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fun, warning, error"
  },
  {
    "objectID": "slides/04-ARD/cards.html#cards-ard_hierarchical_count",
    "href": "slides/04-ARD/cards.html#cards-ard_hierarchical_count",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "This function specializes in calculating event-level frequencies.\n\n\nard_hierarchical_count(\n  data = adae,\n  variables = c(AESOC, AEDECOD),\n  by = TRT01A\n)\n\n{cards} data frame: 27 x 13\n\n\n   group1 group1_level group2 group2_level variable variable_level stat_name\n1  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         n\n2  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      HIATUS H…         n\n3  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD       VOMITING         n\n4  TRT01A      Placebo  AESOC    GENERAL …  AEDECOD      APPLICAT…         n\n5  TRT01A      Placebo  AESOC    GENERAL …  AEDECOD      APPLICAT…         n\n6  TRT01A      Placebo  AESOC    GENERAL …  AEDECOD        FATIGUE         n\n7  TRT01A      Placebo  AESOC    SKIN AND…  AEDECOD       ERYTHEMA         n\n8  TRT01A      Placebo  AESOC    SKIN AND…  AEDECOD       PRURITUS         n\n9  TRT01A      Placebo  AESOC    SKIN AND…  AEDECOD      PRURITUS…         n\n10 TRT01A    Xanomeli…  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         n\n   stat_label stat\n1           n   10\n2           n    2\n3           n    3\n4           n    3\n5           n   10\n6           n    2\n7           n   13\n8           n   11\n9           n    0\n10          n    3\n\n\nℹ 17 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fun, warning, error"
  },
  {
    "objectID": "slides/04-ARD/cards.html#hierarchical-summaries-many-ways",
    "href": "slides/04-ARD/cards.html#hierarchical-summaries-many-ways",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "Displays for hierarchical data typically report on each level of the hierarchy (Any AE Overall, by System Organ Class, by Preferred Term)\nThis can mean several calls to the ard_hierarchical_* functions\nFurther, subject-level summaries require a different subset of the data each time. For example, to calculate Overall rates, we need to subset to 1 record per subject in ADAE.\n\n\n\nIs there an easier way?"
  },
  {
    "objectID": "slides/04-ARD/cards.html#cards-stacking-function-for-ard_hierarchical",
    "href": "slides/04-ARD/cards.html#cards-stacking-function-for-ard_hierarchical",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "ard_hierarchical stacking functions simplify this multi-step process into a single step\nThe id argument is used to subset the data along the way\n\n\n\nard_stack_hierarchical(\n  data = adae,\n  variables = c(AESOC, AEDECOD),\n  by = TRT01A,\n  id = USUBJID,\n  denominator = pharmaverseadam::adsl\n)\n\n\n\n{cards} data frame: 12 x 13\n\n\n   group1 group1_level group2 group2_level variable variable_level stat_name\n1  TRT01A      Placebo   &lt;NA&gt;                 AESOC      GASTROIN…         n\n2  TRT01A      Placebo   &lt;NA&gt;                 AESOC      GASTROIN…         N\n3  TRT01A      Placebo   &lt;NA&gt;                 AESOC      GASTROIN…         p\n4  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         n\n5  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         N\n6  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         p\n7  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      HIATUS H…         n\n8  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      HIATUS H…         N\n9  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      HIATUS H…         p\n10 TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD       VOMITING         n\n11 TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD       VOMITING         N\n12 TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD       VOMITING         p\n   stat_label  stat\n1           n    12\n2           N    86\n3           %  0.14\n4           n     9\n5           N    86\n6           % 0.105\n7           n     1\n8           N    86\n9           % 0.012\n10          n     3\n11          N    86\n12          % 0.035\n\n\nℹ 4 more variables: context, fmt_fun, warning, error"
  },
  {
    "objectID": "slides/04-ARD/cards.html#cards-stacking-function-for-ard_hierarchical_count",
    "href": "slides/04-ARD/cards.html#cards-stacking-function-for-ard_hierarchical_count",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "Below is the stacking function for event-level summaries, aligned with ard_hierarchical_count()\n\n\n\nard_stack_hierarchical_count(\n  data = adae,\n  variables = c(AESOC, AEDECOD),\n  by = TRT01A, \n  denominator = pharmaverseadam::adsl\n)\n\n\n\n{cards} data frame: 4 x 13\n\n\n  group1 group1_level group2 group2_level variable variable_level stat_name\n1 TRT01A      Placebo   &lt;NA&gt;                 AESOC      GASTROIN…         n\n2 TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         n\n3 TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      HIATUS H…         n\n4 TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD       VOMITING         n\n  stat_label stat\n1          n   15\n2          n   10\n3          n    2\n4          n    3\n\n\nℹ 4 more variables: context, fmt_fun, warning, error"
  },
  {
    "objectID": "slides/04-ARD/cards.html#exercise",
    "href": "slides/04-ARD/cards.html#exercise",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "Open exercises/04-ARD-partB.R\nCompute the nested AE tabulations as described\n\n\n\n\n−+\n08:00"
  },
  {
    "objectID": "slides/04-ARD/cards.html#cardx",
    "href": "slides/04-ARD/cards.html#cardx",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "Extension of the {cards} package, providing additional functions to create Analysis Results Datasets (ARDs)\nThe {cardx} package exports many ard_*() function for statistical methods."
  },
  {
    "objectID": "slides/04-ARD/cards.html#cardx-1",
    "href": "slides/04-ARD/cards.html#cardx-1",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "Exports ARD frameworks for statistical analyses from many packages\n\n\n  - {stats}\n  - {car}\n  - {effectsize}\n  - {emmeans}\n  - {geepack}\n  - {lme4}\n  - {parameters}\n  - {smd}\n  - {survey}\n  - {survival}\n\n\nThis list is growing (rather quickly) 🌱"
  },
  {
    "objectID": "slides/04-ARD/cards.html#cardx-t-test-example",
    "href": "slides/04-ARD/cards.html#cardx-t-test-example",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "We see the results like the mean difference, the confidence interval, and p-value as expected.\nAnd we also see the function’s inputs, which is incredibly useful for re-use, e.g. we know the we did not use equal variances.\n\n\n\npharmaverseadam::adsl |&gt; \n  dplyr::filter(ARM %in% c(\"Xanomeline High Dose\", \"Xanomeline Low Dose\")) |&gt;\n  cardx::ard_stats_t_test(by = ARM, variables = AGE)\n\n{cards} data frame: 14 x 9\n\n\n   group1 variable   context   stat_name stat_label      stat\n1     ARM      AGE stats_t_…    estimate  Mean Dif…    -1.286\n2     ARM      AGE stats_t_…   estimate1  Group 1 …    74.381\n3     ARM      AGE stats_t_…   estimate2  Group 2 …    75.667\n4     ARM      AGE stats_t_…   statistic  t Statis…     -1.03\n5     ARM      AGE stats_t_…     p.value    p-value     0.304\n6     ARM      AGE stats_t_…   parameter  Degrees …   165.595\n7     ARM      AGE stats_t_…    conf.low  CI Lower…     -3.75\n8     ARM      AGE stats_t_…   conf.high  CI Upper…     1.179\n9     ARM      AGE stats_t_…      method     method Welch Tw…\n10    ARM      AGE stats_t_… alternative  alternat… two.sided\n11    ARM      AGE stats_t_…          mu    H0 Mean         0\n12    ARM      AGE stats_t_…      paired  Paired t…     FALSE\n13    ARM      AGE stats_t_…   var.equal  Equal Va…     FALSE\n14    ARM      AGE stats_t_…  conf.level  CI Confi…      0.95\n\n\nℹ 3 more variables: fmt_fun, warning, error"
  },
  {
    "objectID": "slides/04-ARD/cards.html#cardx-t-test-example-1",
    "href": "slides/04-ARD/cards.html#cardx-t-test-example-1",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "What to do if a method you need is not implemented?\nIt’s simple to wrap existing frameworks to customize.\nOne-sample t-test example utilizing cards::ard_continuous().\n\n\npharmaverseadam::adsl |&gt; \n  dplyr::filter(ARM %in% c(\"Xanomeline High Dose\", \"Xanomeline Low Dose\")) |&gt;\n  cards::ard_summary(\n    variables = AGE,\n    statistic = everything() ~ list(t_test = \\(x) t.test(x) |&gt; broom::tidy())\n  ) |&gt; \n  dplyr::mutate(context = \"t_test_one_sample\")\n\n{cards} data frame: 8 x 8\n\n\n  variable   context   stat_name stat_label      stat fmt_fun\n1      AGE t_test_o…    estimate   estimate    75.024       1\n2      AGE t_test_o…   statistic  statistic     120.2       1\n3      AGE t_test_o…     p.value    p.value         0       1\n4      AGE t_test_o…   parameter  parameter       167       1\n5      AGE t_test_o…    conf.low   conf.low    73.792       1\n6      AGE t_test_o…   conf.high  conf.high    76.256       1\n7      AGE t_test_o…      method     method One Samp…    &lt;fn&gt;\n8      AGE t_test_o… alternative  alternat… two.sided    &lt;fn&gt;\n\n\nℹ 2 more variables: warning, error"
  },
  {
    "objectID": "slides/04-ARD/cards.html#cardx-t-test-example-2",
    "href": "slides/04-ARD/cards.html#cardx-t-test-example-2",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "How to modify if we need a two-sample test, or more generally accessing other columns in the data frame.\n\n\npharmaverseadam::adsl |&gt; \n  dplyr::filter(ARM %in% c(\"Xanomeline High Dose\", \"Xanomeline Low Dose\")) |&gt;\n  cards::ard_mvsummary(\n    variables = AGE,\n    statistic = \n      ~ list(t_test = \\(x, data, ...) t.test(x ~ data$ARM) |&gt; broom::tidy())\n  ) |&gt; \n  dplyr::mutate(group1 = \"ARM\", context = \"t_test_two_sample\") |&gt; \n  cards::tidy_ard_column_order()\n\n{cards} data frame: 10 x 9\n\n\n   group1 variable   context   stat_name stat_label      stat\n1     ARM      AGE t_test_t…    estimate   estimate    -1.286\n2     ARM      AGE t_test_t…   estimate1  estimate1    74.381\n3     ARM      AGE t_test_t…   estimate2  estimate2    75.667\n4     ARM      AGE t_test_t…   statistic  statistic     -1.03\n5     ARM      AGE t_test_t…     p.value    p.value     0.304\n6     ARM      AGE t_test_t…   parameter  parameter   165.595\n7     ARM      AGE t_test_t…    conf.low   conf.low     -3.75\n8     ARM      AGE t_test_t…   conf.high  conf.high     1.179\n9     ARM      AGE t_test_t…      method     method Welch Tw…\n10    ARM      AGE t_test_t… alternative  alternat… two.sided\n\n\nℹ 3 more variables: fmt_fun, warning, error"
  },
  {
    "objectID": "slides/04-ARD/cards.html#cardx-regression",
    "href": "slides/04-ARD/cards.html#cardx-regression",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "Includes functionality to summarize nearly every type of regression model in the R ecosystem:\n\n\nbetareg::betareg(), biglm::bigglm(), brms::brm(), cmprsk::crr(), fixest::feglm(), fixest::femlm(), fixest::feNmlm(), fixest::feols(), gam::gam(), geepack::geeglm(), glmmTMB::glmmTMB(), glmtoolbox::glmgee(), lavaan::lavaan(), lfe::felm(), lme4::glmer.nb(), lme4::glmer(), lme4::lmer(), logitr::logitr(), MASS::glm.nb(), MASS::polr(), mgcv::gam(), mice::mira, mmrm::mmrm(), multgee::nomLORgee(), multgee::ordLORgee(), nnet::multinom(), ordinal::clm(), ordinal::clmm(), parsnip::model_fit, plm::plm(), pscl::hurdle(), pscl::zeroinfl(), rstanarm::stan_glm(), stats::aov(), stats::glm(), stats::lm(), stats::nls(), survey::svycoxph(), survey::svyglm(), survey::svyolr(), survival::cch(), survival::clogit(), survival::coxph(), survival::survreg(), svyVGAM::svy_vglm(), tidycmprsk::crr(), VGAM::vgam(), VGAM::vglm() (and more)"
  },
  {
    "objectID": "slides/04-ARD/cards.html#cardx-regression-1",
    "href": "slides/04-ARD/cards.html#cardx-regression-1",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "The cardx::ard_regression() does a lot for us in the background.\n\nIdentifies the variable from the regression terms (i.e. groups levels of the same variable)\nIdentifies reference groups from categorical covariates\nFinds variable labels from the source data frames\nKnows the total N of the model, the number of events, and can do the same for each level of categorical variables\nContextually aware of slopes, odds ratios, hazard ratios, and incidence rate ratios\nAnd much much more.\n\n\nlm(AGE ~ ARM, data = cards::ADSL) |&gt;\n  cardx::ard_regression(add_estimate_to_reference_rows = TRUE)\n\n{cards} data frame: 43 x 9\n\n\n   variable variable_level   context      stat_name stat_label      stat\n1       ARM        Placebo regressi…           term       term ARMPlace…\n2       ARM        Placebo regressi…      var_label      Label Descript…\n3       ARM        Placebo regressi…      var_class      Class character\n4       ARM        Placebo regressi…       var_type       Type categori…\n5       ARM        Placebo regressi…    var_nlevels   N Levels         3\n6       ARM        Placebo regressi…      contrasts  contrasts contr.tr…\n7       ARM        Placebo regressi… contrasts_type  Contrast… treatment\n8       ARM        Placebo regressi…  reference_row  referenc…      TRUE\n9       ARM        Placebo regressi…          label  Level La…   Placebo\n10      ARM        Placebo regressi…          n_obs     N Obs.        86\n\n\nℹ 33 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 3 more variables: fmt_fun, warning, error"
  },
  {
    "objectID": "slides/04-ARD/cards.html#when-things-go-wrong",
    "href": "slides/04-ARD/cards.html#when-things-go-wrong",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "What happens when statistics are un-calculable?\n\nard_gone_wrong &lt;- \n  cards::ADSL |&gt; \n  cards::ard_summary(\n    by = ARM,\n    variable = AGEGR1,\n    statistic = ~list(kurtosis = \\(x) e1071::kurtosis(x))\n  ) |&gt; \n  cards::replace_null_statistic()\nard_gone_wrong\n\n{cards} data frame: 3 x 10\n\n\n  group1 group1_level variable stat_name stat_label stat   warning     error\n1    ARM      Placebo   AGEGR1  kurtosis   kurtosis   NA argument… non-nume…\n2    ARM    Xanomeli…   AGEGR1  kurtosis   kurtosis   NA argument… non-nume…\n3    ARM    Xanomeli…   AGEGR1  kurtosis   kurtosis   NA argument… non-nume…\n\n\nℹ 2 more variables: context, fmt_fun\n\n\n\ncards::print_ard_conditions(ard_gone_wrong)\n\n\n\n\nWhere is the statistic? AGEGR1 is character\nEven when there are errors or warnings, we still get the ARD with the expected structure returned.\n\nTHIS IS BIG! There are MANY circumstances, when you are designing TLGs early in a study when you do not have all the data required to calculate every statistic.\nThis allows you to design everything up-front.\n\nWe can also report these warnings and errors back to users. &lt;!CLICK!&gt;"
  },
  {
    "objectID": "slides/03-ADaM/admiral.html",
    "href": "slides/03-ADaM/admiral.html",
    "title": "Set the Stage",
    "section": "",
    "text": "By the end of this ADaM section you will have:\n\nGained an understanding of how to use admiral, metatools/metacore, and xportr packages to create ADaMs\nSeen code executed to create ADaMs: ADSL and ADVS.\nChecked in on our fav participant - Barb"
  },
  {
    "objectID": "slides/03-ADaM/admiral.html#objectives",
    "href": "slides/03-ADaM/admiral.html#objectives",
    "title": "Set the Stage",
    "section": "",
    "text": "By the end of this ADaM section you will have:\n\nGained an understanding of how to use admiral, metatools/metacore, and xportr packages to create ADaMs\nSeen code executed to create ADaMs: ADSL and ADVS.\nChecked in on our fav participant - Barb"
  },
  {
    "objectID": "slides/03-ADaM/admiral.html#assumptions",
    "href": "slides/03-ADaM/admiral.html#assumptions",
    "title": "Set the Stage",
    "section": "Assumptions",
    "text": "Assumptions\n\n\nBasic knowledge of CDISC Standards (ADaM and SDTM Domains)\nCheck out the ADaM IG and other documents for CDISC\n\nThese are great but tome-like!!\n\nCheck out admiral and admiraldiscovery for CDISC implementation\n\nI always like to code immedialtely to understand a process!\n\n🦺 But even lacking CDSIC knowledge, we still think you will gain some great learnings today! 🦺"
  },
  {
    "objectID": "slides/03-ADaM/admiral.html#play-by-play",
    "href": "slides/03-ADaM/admiral.html#play-by-play",
    "title": "Set the Stage",
    "section": "Play by Play",
    "text": "Play by Play\n\n\n🕙11:00 - 11:15 Set the Stage: Overview of datasets, specs, processes, packages, functions\n🕥11:15 - 11:45 Subject-level dataset: ADSL\n🕚11:45 - 11:50 Check in on Barb / Quick Q\n🕦11:50 - 12:25 Basic Data Structure: ADVS\n🕚12:25 - 12:30 Check in on Barb / Quick Q\n🕚12:30 Lunch!"
  },
  {
    "objectID": "slides/03-ADaM/admiral.html#set-the-stage-1",
    "href": "slides/03-ADaM/admiral.html#set-the-stage-1",
    "title": "Set the Stage",
    "section": "Set the Stage",
    "text": "Set the Stage\n\n\nprocesses\nData\nSpecs\npharmaverse packages\nfunctions"
  },
  {
    "objectID": "slides/03-ADaM/admiral.html#how-we-will-proceed-today-1",
    "href": "slides/03-ADaM/admiral.html#how-we-will-proceed-today-1",
    "title": "Set the Stage",
    "section": "How we will proceed today?",
    "text": "How we will proceed today?\n\n\nI will walk you through certain parts of the ADSL and ADVS R sripts\n\nDiscussion on certain function and function arguments from scripts\nWill pull up full function for more discussion.\n\n\nImportant to move along quickly:\n\nCan discuss issues/questions in the break.\nCode should run out of the box - but have to wait to diagnose."
  },
  {
    "objectID": "slides/03-ADaM/admiral.html#adsl---subject-level-dataset-dpi-needs-fix",
    "href": "slides/03-ADaM/admiral.html#adsl---subject-level-dataset-dpi-needs-fix",
    "title": "Set the Stage",
    "section": "ADSL - Subject Level Dataset (dpi / needs fix)",
    "text": "ADSL - Subject Level Dataset (dpi / needs fix)\n\n\n\n\nADSL - Subject Level Dataset, i.e each subject has a record. Focus on adding variables."
  },
  {
    "objectID": "slides/03-ADaM/admiral.html#advs---subject-level-dataset-dpi-needs-fix",
    "href": "slides/03-ADaM/admiral.html#advs---subject-level-dataset-dpi-needs-fix",
    "title": "Set the Stage",
    "section": "ADVS - Subject Level Dataset (dpi / needs fix)",
    "text": "ADVS - Subject Level Dataset (dpi / needs fix)\n\n\n\n\nADVS - Basic Data Structure (BDS) Dataset. Focus on adding records."
  },
  {
    "objectID": "slides/03-ADaM/admiral.html#spec-details",
    "href": "slides/03-ADaM/admiral.html#spec-details",
    "title": "Set the Stage",
    "section": "Spec-details",
    "text": "Spec-details\n\nGives specifics on how we derive variables in the ADaMs (extreme traceability)\nNot fit for purpose - just a helpful guide\nWhat is in the the Specs:\n\nTwo datasets, dataset labels and variable keys\nVariables - labels, lengths, types, linked to method\nCodelists!!\nNo VLMs"
  },
  {
    "objectID": "slides/03-ADaM/admiral.html#the-core-pharmaverse-packages",
    "href": "slides/03-ADaM/admiral.html#the-core-pharmaverse-packages",
    "title": "Set the Stage",
    "section": "The core pharmaverse packages",
    "text": "The core pharmaverse packages\n \nFocus on applying information from our Specs to the ADaMs\n\nFocus on deriving variables and records driven by our Specs\n\nFocus on preparing the dataset as an xpt file to be sent to regulatory agencies."
  },
  {
    "objectID": "slides/03-ADaM/admiral.html#pharmaverse-plays-nice",
    "href": "slides/03-ADaM/admiral.html#pharmaverse-plays-nice",
    "title": "Set the Stage",
    "section": "pharmaverse plays nice!",
    "text": "pharmaverse plays nice!\n\n\nThe ADaM code presented today utilizes all the previously mentioned packages, but also makes use of tidyverse and base R code.\nIf a function isn’t meeting your needs or looks too cumbersome, then that is okay!\nThese packages are all modular and play well with others!"
  },
  {
    "objectID": "slides/03-ADaM/admiral.html#admiral",
    "href": "slides/03-ADaM/admiral.html#admiral",
    "title": "Set the Stage",
    "section": "admiral",
    "text": "admiral\n\n\n\n\n\n\n\n\nPackage\nFunction\nPurpose\n\n\n\n\nadmiral\nderive_vars_merged()\nleft_join on steroids\n\n\nadmiral\nderive_param_computed()\nCore function for wrappers used in ADVS\n\n\nadmiral\nderive_vars_dy()\nCreate the relative study day\n\n\nadmiral\nderive_vars_dtm()\nTake a ---DTC variable and turn it into a ---DTM variable\n\n\nadmiral\nderive_vars_duration()\nDuration between timepoints\n\n\nadmiral\nrestrict_derivation()\nHOF:\n\n\nadmiral\nderive_var_extreme_flag()\n…\n\n\n\nMost functions in admiral follow these conventions:\n\n\nvar_ or _vars_ functions add variable(s) to ADaMs\n_param_ functions add records to ADaMS\nOther not following this convention typically do more advanced stuff…"
  },
  {
    "objectID": "slides/03-ADaM/admiral.html#metatools-and-xportr",
    "href": "slides/03-ADaM/admiral.html#metatools-and-xportr",
    "title": "Set the Stage",
    "section": "metatools and xportr",
    "text": "metatools and xportr\n\n\n\n\n\n\n\n\nPackage\nFunction\nPurpose\n\n\n\n\nmetacore\nspec_to_metacore()\nCreates a “special” object from your specs\n\n\nmetatools\ncombine_supp()\nJoin Parent and Supplementary Datasets\n\n\nmetatools\ncreate_var_from_codelist()\nNumeric Vars from Specs!\n\n\nmetatools\ndrop_unspec_vars()\nEasily drop variables not in Spec\n\n\nxportr\nxportr_label()\nApply labels from Spec\n\n\nxportr\nxportr_write()\nWrite out an xpt file\n\n\n\n\nMost functions from these packages are about applying metadata from specs to your dataset.\nxportr follows a standard naming convention."
  },
  {
    "objectID": "slides/03-ADaM/admiral.html#the-big-picture-of-adsl",
    "href": "slides/03-ADaM/admiral.html#the-big-picture-of-adsl",
    "title": "Set the Stage",
    "section": "The Big Picture of ADSL",
    "text": "The Big Picture of ADSL\n\nWe have an ADSL script:\n\nUsing pharmaversesdtm data: dm, suppdm, ex, ae, vs, etc\nUses the ADSL section of our spec file\nCreating a single record for each subject"
  },
  {
    "objectID": "slides/03-ADaM/admiral.html#reading-in-our-spec-for-adsl-lines",
    "href": "slides/03-ADaM/admiral.html#reading-in-our-spec-for-adsl-lines",
    "title": "Set the Stage",
    "section": "Reading in our spec for ADSL (Lines: )",
    "text": "Reading in our spec for ADSL (Lines: )\nspec_to_metacore(\n  path = \"slides/03-ADaM/metadata/posit_specs.xlsx\",\n  where_sep_sheet = FALSE,\n  quiet = TRUE\n) %&gt;%\n  select_dataset(\"ADVS\")"
  },
  {
    "objectID": "slides/03-ADaM/admiral.html#combine-parent-and-supplementary-data-lines",
    "href": "slides/03-ADaM/admiral.html#combine-parent-and-supplementary-data-lines",
    "title": "Set the Stage",
    "section": "Combine Parent and Supplementary Data (Lines: )",
    "text": "Combine Parent and Supplementary Data (Lines: )\ndm_suppdm &lt;- combine_supp(dm, suppdm)\n\nOne line of code to join two datasets!\nCollecting non-standard data and linking to parent\nFunction is from {metatools}\nMaybe a dm record linked to suppdm record here??"
  },
  {
    "objectID": "slides/03-ADaM/admiral.html#lets-turn-a---dtc-to-a-dtm-variable-lines",
    "href": "slides/03-ADaM/admiral.html#lets-turn-a---dtc-to-a-dtm-variable-lines",
    "title": "Set the Stage",
    "section": "Let’s turn a --DTC to a *DTM variable (Lines: )",
    "text": "Let’s turn a --DTC to a *DTM variable (Lines: )\nderive_vars_dtm(\n  dtc = EXSTDTC,\n  new_vars_prefix = \"EXST\",\n  time_imputation = \"last\",\n  flag_imputation = \"time\"\n)"
  },
  {
    "objectID": "slides/03-ADaM/admiral.html#woahthere-is-more",
    "href": "slides/03-ADaM/admiral.html#woahthere-is-more",
    "title": "Set the Stage",
    "section": "Woah…there is more!!",
    "text": "Woah…there is more!!\n\nderive_vars_dtm(\n  dataset,\n  new_vars_prefix,\n  dtc,\n  highest_imputation = \"h\",\n  date_imputation = \"first\",\n  time_imputation = \"first\",\n  flag_imputation = \"auto\",\n  min_dates = NULL,\n  max_dates = NULL,\n  preserve = FALSE,\n  ignore_seconds_flag = FALSE\n)"
  },
  {
    "objectID": "slides/03-ADaM/admiral.html#lets-get-a-merge-lines",
    "href": "slides/03-ADaM/admiral.html#lets-get-a-merge-lines",
    "title": "Set the Stage",
    "section": "Let’s get a merge (Lines: )",
    "text": "Let’s get a merge (Lines: )\nderive_vars_merged(\n  dataset_add = ex_ext,\n  by_vars = exprs(STUDYID, USUBJID),\n  order = exprs(EXSTDTM, EXSEQ),\n  new_vars = exprs(TRTSDTM = EXSTDTM, TRTSTMF = EXSTTMF),\n  filter_add = (EXDOSE &gt; 0 |\n    (EXDOSE == 0 &\n      str_detect(EXTRT, \"PLACEBO\"))) &\n    !is.na(EXSTDTM),\n  mode = \"first\",\n)"
  },
  {
    "objectID": "slides/03-ADaM/admiral.html#whoa-way-more-options",
    "href": "slides/03-ADaM/admiral.html#whoa-way-more-options",
    "title": "Set the Stage",
    "section": "Whoa!!! Way more options!!",
    "text": "Whoa!!! Way more options!!\n\nderive_vars_merged(\n  dataset,\n  dataset_add,\n  by_vars,\n  order = NULL,\n  new_vars = NULL,\n  filter_add = NULL,\n  mode = NULL,\n  exist_flag = NULL,\n  true_value = \"Y\",\n  false_value = NA_character_,\n  missing_values = NULL,\n  check_type = \"warning\",\n  duplicate_msg = NULL,\n  relationship = NULL\n)"
  },
  {
    "objectID": "slides/03-ADaM/admiral.html#lets-derive-a-duration-variable-lines",
    "href": "slides/03-ADaM/admiral.html#lets-derive-a-duration-variable-lines",
    "title": "Set the Stage",
    "section": "Let’s derive a Duration Variable (Lines: )",
    "text": "Let’s derive a Duration Variable (Lines: )\nderive_vars_duration(\n    new_var = DTHADY,\n    start_date = TRTSDT,\n    end_date = DTHDT\n  )"
  },
  {
    "objectID": "slides/03-ADaM/admiral.html#ohhh-there-is-more",
    "href": "slides/03-ADaM/admiral.html#ohhh-there-is-more",
    "title": "Set the Stage",
    "section": "Ohhh there is more!!",
    "text": "Ohhh there is more!!\n\nderive_vars_duration(\n  dataset,\n  new_var,\n  new_var_unit = NULL,\n  start_date,\n  end_date,\n  in_unit = \"days\",\n  out_unit = \"DAYS\",\n  floor_in = TRUE,\n  add_one = TRUE,\n  trunc_out = FALSE,\n  type = \"duration\"\n)"
  },
  {
    "objectID": "slides/03-ADaM/admiral.html#lets-apply-control-terms-code-lists-lines",
    "href": "slides/03-ADaM/admiral.html#lets-apply-control-terms-code-lists-lines",
    "title": "Set the Stage",
    "section": "Let’s apply Control Terms / Code Lists (Lines: )",
    "text": "Let’s apply Control Terms / Code Lists (Lines: )\nadsl16 %&gt;%\n  create_var_from_codelist(metacore, input_var = AGEGR1, out_var = AGEGR1N) %&gt;%\n  create_var_from_codelist(metacore, input_var = RACE, out_var = RACEN) %&gt;%\n  create_var_from_codelist(metacore, input_var = RACEGR1, out_var = RACEGR1N) %&gt;%\n  create_var_from_codelist(metacore, input_var = REGION1, out_var = REGION1N) %&gt;%\n  create_var_from_codelist(metacore, input_var = TRT01P, out_var = TRT01PN) %&gt;%\n  create_var_from_codelist(metacore, input_var = TRT01A, out_var = TRT01AN)"
  },
  {
    "objectID": "slides/03-ADaM/admiral.html#more-details",
    "href": "slides/03-ADaM/admiral.html#more-details",
    "title": "Set the Stage",
    "section": "More details",
    "text": "More details\n\ncreate_var_from_codelist(\n  data,\n  metacore,\n  input_var,\n  out_var,\n  codelist = NULL,\n  decode_to_code = TRUE,\n  strict = TRUE\n)"
  },
  {
    "objectID": "slides/03-ADaM/admiral.html#check-in-on-barb",
    "href": "slides/03-ADaM/admiral.html#check-in-on-barb",
    "title": "Set the Stage",
    "section": "Check in on Barb",
    "text": "Check in on Barb"
  },
  {
    "objectID": "slides/03-ADaM/admiral.html#check-in-question",
    "href": "slides/03-ADaM/admiral.html#check-in-question",
    "title": "Set the Stage",
    "section": "Check-in Question",
    "text": "Check-in Question\nWhich admiral function can be used to turn a ---DTC variable into a *DTM variable\n\n\nderive_vars_dtc()\nderive_var_trtdurd()\nderive_vars_dtm()\nderive_vars_exsdtc()\n\n\nCorrect Answer: c) derive_vars_dtm()"
  },
  {
    "objectID": "slides/03-ADaM/admiral.html#the-big-picture-of-advs",
    "href": "slides/03-ADaM/admiral.html#the-big-picture-of-advs",
    "title": "Set the Stage",
    "section": "The Big Picture of ADVS",
    "text": "The Big Picture of ADVS\n\nWe have an ADVS script:\n\nUsing pharmaversesdtm data: …\nUses the ADVS section of our spec file\nCreating a multiple records for each subject\nADSL information included\nLot’s of functions are repeated within the ADVS script used in ADSL script"
  },
  {
    "objectID": "slides/03-ADaM/admiral.html#lets-talk-about-lookup-tables-lines",
    "href": "slides/03-ADaM/admiral.html#lets-talk-about-lookup-tables-lines",
    "title": "Set the Stage",
    "section": "Let’s talk about lookup tables (Lines: )",
    "text": "Let’s talk about lookup tables (Lines: )\n  derive_vars_merged_lookup(\n    dataset_add = param_lookup,\n    new_vars = exprs(PARAMCD),\n    by_vars = exprs(VSTESTCD),\n    print_not_mapped = TRUE \n  )"
  },
  {
    "objectID": "slides/03-ADaM/admiral.html#a-fuller-look",
    "href": "slides/03-ADaM/admiral.html#a-fuller-look",
    "title": "Set the Stage",
    "section": "A Fuller Look!",
    "text": "A Fuller Look!\n\nderive_vars_merged_lookup(\n  dataset,\n  dataset_add,\n  by_vars,\n  order = NULL,\n  new_vars = NULL,\n  mode = NULL,\n  filter_add = NULL,\n  check_type = \"warning\",\n  duplicate_msg = NULL,\n  print_not_mapped = TRUE\n)"
  },
  {
    "objectID": "slides/03-ADaM/admiral.html#lets-add-more-records-for-each-subject-lines",
    "href": "slides/03-ADaM/admiral.html#lets-add-more-records-for-each-subject-lines",
    "title": "Set the Stage",
    "section": "Let’s add more records for each subject (Lines: )",
    "text": "Let’s add more records for each subject (Lines: )\nderive_param_computed(\n  by_vars = exprs(STUDYID, USUBJID, VISIT, VISITNUM, ADT, ADY, VSTPT, VSTPTNUM),\n  parameters = \"WEIGHT\",\n  set_values_to = exprs(\n    AVAL = AVAL.WEIGHT / (AVAL.HEIGHT / 100)^2,\n    PARAMCD = \"BMI\",\n    PARAM = \"Body Mass Index (kg/m^2)\",\n    AVALU = \"kg/m^2\"\n  ),\n  constant_parameters = c(\"HEIGHT\"),\n  constant_by_vars = exprs(USUBJID)\n)"
  },
  {
    "objectID": "slides/03-ADaM/admiral.html#only-two-arguments-not-used",
    "href": "slides/03-ADaM/admiral.html#only-two-arguments-not-used",
    "title": "Set the Stage",
    "section": "Only two arguments not used!",
    "text": "Only two arguments not used!\n\nderive_param_computed(\n  dataset = NULL,\n  dataset_add = NULL,\n  by_vars,\n  parameters,\n  set_values_to,\n  filter = NULL,\n  constant_by_vars = NULL,\n  constant_parameters = NULL,\n  keep_nas = FALSE\n)\n:::\n\n## Let't derive DTYPE summary records\n\n```{.r code-line-numbers=\"1|2|3|4|5|6|7|8|9|10\"}\nderive_summary_records(\n    dataset_add = advs_2, \n    by_vars = exprs(STUDYID, USUBJID, !!!adsl_vars, PARAMCD, AVISITN, AVISIT, ADT, ADY, AVALU),\n    filter_add = !is.na(AVAL),\n    set_values_to = exprs(\n      AVAL = mean(AVAL),\n      DTYPE = \"AVERAGE\"\n  )\n)\n\n\n## Let's restrict!\n\n```{.r code-line-numbers=\"1|2|3|4|5|6|7|8|9|10\"}\nrestrict_derivation(\n  derivation = derive_var_extreme_flag,\n  args = params(\n    by_vars = exprs(STUDYID, USUBJID, BASETYPE, PARAMCD),\n    order = exprs(ADT, VISITNUM, VSSEQ),\n    new_var = ABLFL,\n    mode = \"last\", # Determines of the first or last observation is flagged\n    # Below arguments are default values and not necessary to add in our case\n    true_value = \"Y\"\n  ),\n  filter = (!is.na(AVAL) &\n    ADT &lt;= TRTSDT & !is.na(BASETYPE) & is.na(DTYPE))\n)\n\nLet’s get that data read for regulatory agencies\nadvs &lt;- advs_final %&gt;%\n  drop_unspec_vars(metacore) %&gt;% # Drop unspecified variables from specs\n  check_variables(metacore, dataset_name = \"ADVS\") %&gt;% # Check all variables specified are present and no more\n  order_cols(metacore) %&gt;% # Orders the columns according to the spec\n  sort_by_key(metacore) %&gt;% # Sorts the rows by the sort keys\n  xportr_type(metacore) %&gt;%\n  xportr_length(metacore) %&gt;%\n  xportr_label(metacore) %&gt;%\n  xportr_format(metacore, domain = \"ADVS\") %&gt;%\n  xportr_df_label(metacore, domain = \"ADVS\") %&gt;%\n  xportr_write(\"datasets/advs.xpt\", metadata = metacore, domain = \"ADVS\")\n\n\nADVS Quiz\n\nCheck-in\nHave a look to {admiraldiscovery}: Which admiral wrapper function could be used to derive “BSA” parameter at any time point?\n\n\n\n\nadmiral::derive_param_bsa()\n\n\nadmiral::compute_bsa()\n\n\n\n\n\n\nCorrect answer:\na) the wrapper function admiral::derive_param_bsa()\n\n\n\n\nWe could also use (\"admiral::derive_param_computed()\")\n\n\n\n\nQuestions and Resources\n\n\nadmiraldiscovery\npharmaverse examples\npgkdown sites for xportr, metatools, metacore and admiral\nExtension packages for admiral: admiralophtha, admiralonco, admiralpeds\n\n\n\n\nClosing Thoughts\n\n\nOnly able to show a small number of pharmaverse packages and functions today, but please delve deeper to explore the full breadth\nIf you’d like to contribute to pharmaverse, check out options at pharmaverse.org\nFinally, be sure to join our community on Slack!\n\n\n\n\nPacakges and Session Information\n\nsessionInfo()\n\nR version 4.5.1 (2025-06-13)\nPlatform: x86_64-pc-linux-gnu\nRunning under: Ubuntu 24.04.3 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 \nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.26.so;  LAPACK version 3.12.0\n\nlocale:\n [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8       \n [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8   \n [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C          \n[10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C   \n\ntime zone: UTC\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices datasets  utils     methods   base     \n\nother attached packages:\n[1] countdown_0.4.0 glue_1.8.0     \n\nloaded via a namespace (and not attached):\n [1] htmlwidgets_1.6.4 compiler_4.5.1    fastmap_1.2.0     cli_3.6.5        \n [5] htmltools_0.5.8.1 tools_4.5.1       yaml_2.3.10       rmarkdown_2.29   \n [9] knitr_1.50        jsonlite_2.0.0    xfun_0.52         digest_0.6.37    \n[13] rlang_1.1.6       renv_1.1.5        evaluate_1.0.4   \n\n\n\n\n\n\n\nR/Pharma ADaM Workshop Starting at 10:02 US EST"
  },
  {
    "objectID": "slides/03-ADaM/admiral.html#lets-get-that-data-read-for-regulatory-agencies",
    "href": "slides/03-ADaM/admiral.html#lets-get-that-data-read-for-regulatory-agencies",
    "title": "Set the Stage",
    "section": "Let’s get that data read for regulatory agencies",
    "text": "Let’s get that data read for regulatory agencies\nadvs &lt;- advs_final %&gt;%\n  drop_unspec_vars(metacore) %&gt;% # Drop unspecified variables from specs\n  check_variables(metacore, dataset_name = \"ADVS\") %&gt;% # Check all variables specified are present and no more\n  order_cols(metacore) %&gt;% # Orders the columns according to the spec\n  sort_by_key(metacore) %&gt;% # Sorts the rows by the sort keys\n  xportr_type(metacore) %&gt;%\n  xportr_length(metacore) %&gt;%\n  xportr_label(metacore) %&gt;%\n  xportr_format(metacore, domain = \"ADVS\") %&gt;%\n  xportr_df_label(metacore, domain = \"ADVS\") %&gt;%\n  xportr_write(\"datasets/advs.xpt\", metadata = metacore, domain = \"ADVS\")"
  },
  {
    "objectID": "slides/03-ADaM/admiral.html#check-in",
    "href": "slides/03-ADaM/admiral.html#check-in",
    "title": "Set the Stage",
    "section": "Check-in",
    "text": "Check-in\nHave a look to {admiraldiscovery}: Which admiral wrapper function could be used to derive “BSA” parameter at any time point?\n\n\n\n\nadmiral::derive_param_bsa()\n\n\nadmiral::compute_bsa()\n\n\n\n\n\n\nCorrect answer:\na) the wrapper function admiral::derive_param_bsa()\n\n\n\n\nWe could also use (\"admiral::derive_param_computed()\")"
  },
  {
    "objectID": "slides/03-ADaM/admiral.html#questions-and-resources",
    "href": "slides/03-ADaM/admiral.html#questions-and-resources",
    "title": "Set the Stage",
    "section": "Questions and Resources",
    "text": "Questions and Resources\n\n\nadmiraldiscovery\npharmaverse examples\npgkdown sites for xportr, metatools, metacore and admiral\nExtension packages for admiral: admiralophtha, admiralonco, admiralpeds"
  },
  {
    "objectID": "slides/03-ADaM/admiral.html#closing-thoughts",
    "href": "slides/03-ADaM/admiral.html#closing-thoughts",
    "title": "Set the Stage",
    "section": "Closing Thoughts",
    "text": "Closing Thoughts\n\n\nOnly able to show a small number of pharmaverse packages and functions today, but please delve deeper to explore the full breadth\nIf you’d like to contribute to pharmaverse, check out options at pharmaverse.org\nFinally, be sure to join our community on Slack!"
  },
  {
    "objectID": "slides/03-ADaM/admiral.html#pacakges-and-session-information",
    "href": "slides/03-ADaM/admiral.html#pacakges-and-session-information",
    "title": "Set the Stage",
    "section": "Pacakges and Session Information",
    "text": "Pacakges and Session Information\n\nsessionInfo()\n\nR version 4.5.1 (2025-06-13)\nPlatform: x86_64-pc-linux-gnu\nRunning under: Ubuntu 24.04.3 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 \nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.26.so;  LAPACK version 3.12.0\n\nlocale:\n [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8       \n [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8   \n [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C          \n[10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C   \n\ntime zone: UTC\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices datasets  utils     methods   base     \n\nother attached packages:\n[1] countdown_0.4.0 glue_1.8.0     \n\nloaded via a namespace (and not attached):\n [1] htmlwidgets_1.6.4 compiler_4.5.1    fastmap_1.2.0     cli_3.6.5        \n [5] htmltools_0.5.8.1 tools_4.5.1       yaml_2.3.10       rmarkdown_2.29   \n [9] knitr_1.50        jsonlite_2.0.0    xfun_0.52         digest_0.6.37    \n[13] rlang_1.1.6       renv_1.1.5        evaluate_1.0.4"
  },
  {
    "objectID": "slides/03-ADaM/admiral.html#rpharma-adam-workshop-starting-at-1002-us-est",
    "href": "slides/03-ADaM/admiral.html#rpharma-adam-workshop-starting-at-1002-us-est",
    "title": "Set the Stage",
    "section": "R/Pharma ADaM Workshop Starting at 10:02 US EST",
    "text": "R/Pharma ADaM Workshop Starting at 10:02 US EST"
  },
  {
    "objectID": "slides/01-intro/index.html#instructors",
    "href": "slides/01-intro/index.html#instructors",
    "title": "End-to-End Submissionsin R with the Pharmaverse",
    "section": "Instructors",
    "text": "Instructors\n\n\n\n\n\n\nWho are we?\nWhat do we do?\nWhy are we here?"
  },
  {
    "objectID": "slides/01-intro/index.html#workshop-outline",
    "href": "slides/01-intro/index.html#workshop-outline",
    "title": "End-to-End Submissionsin R with the Pharmaverse",
    "section": "Workshop outline",
    "text": "Workshop outline"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "End-to-End Submissions in R with the Pharmaverse",
    "section": "",
    "text": "🗓️ September 16, 2025 09:00 - 17:00\n🏨 Hyatt Regency Atlanta, Room TBA\n📝 Workshop Registration",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "index.html#description",
    "href": "index.html#description",
    "title": "End-to-End Submissions in R with the Pharmaverse",
    "section": "Description",
    "text": "Description\n\nOver the past 5 years, the pharmaverse was created and has blossomed into a booming community of organizations and package developers aimed at supporting R development with focus on the clinical reporting pipeline. Even within a world as standardized as regulatory submissions, organizations still tend to have sometimes vastly different requirements within their own processes.\nIn this workshop, we’ll give a high level overview of the scope and tools available within the pharmaverse for the clinical pipeline, including tools for ADaM data set curation, creating Analysis Results Data Sets, and TLGs. To help attendees understand how there are different paradigms and pathways through the pharmaverse, we’ll take a tour through two to three different strategies available to support table, listing, and figure creation. Attendees of this workshop will walk away with an understanding of how the pharmaverse can help their organization and where they can look to learn more about the right tools to support their needs.",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "index.html#schedule",
    "href": "index.html#schedule",
    "title": "End-to-End Submissions in R with the Pharmaverse",
    "section": "Schedule",
    "text": "Schedule\n\n\n\n\n\n\n\n\nTime\nActivity\n\n\n\n\n09:00 - 9:30\nIntroduction + Overview\n\n\n09:30 - 10:30\nSDTM\n\n\n10:30 - 11:00\nCoffee Break\n\n\n11:00 - 12:30\nADaMs with {admiral} and friends\n\n\n12:30 - 13:30\nLunch\n\n\n13:30 - 14:15\nAnalysis Results Datasets\n\n\n14:15 - 15:00\nCreate Tables with {tfrmt}\n\n\n15:00 - 15:30\nCoffee Break\n\n\n15:30 - 16:15\nCreate Tables with {gtsummary}\n\n\n16:15 - 17:00\nOther Topics Overview + Wrap-up",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "index.html#pre-work",
    "href": "index.html#pre-work",
    "title": "End-to-End Submissions in R with the Pharmaverse",
    "section": "Pre-work",
    "text": "Pre-work\n\nBookmark this site. You’ll reference it throughout the workshop. \nSign up for a free Posit Cloud account.\nBring your laptop and charger to the workshop.",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "index.html#instructors",
    "href": "index.html#instructors",
    "title": "End-to-End Submissions in R with the Pharmaverse",
    "section": "Instructors",
    "text": "Instructors\n\nDaniel D. Sjoberg (he/him) is a Senior Principal Data Scientist at Genentech. Previously, he was a Lead Data Science Manager at the Prostate Cancer Clinical Trials Consortium, and a Senior Biostatistician at Memorial Sloan Kettering Cancer Center in New York City. He enjoys R package development, creating many packages available on CRAN, R-Universe, and GitHub. He’s a co-organizer of rainbowR (a community that supports, promotes and connects LGBTQ+ people who code in the R language) and of the R Medicine Conference. His research interests include adaptive methods in clinical trials, precision medicine, and predictive modeling. Daniel is the winner of the 2021 American Statistical Association (ASA) Innovation in Statistical Programming and Analytics award.\n   \n\nBecca Krouse is a data scientist in GSK’s Data Science Innovation and Engineering team where she focuses on enabling users across Biostatistics. A biostatistician by training, she has experience spanning 15 years in the field of clinical research and specializes in developing R-based tools.\n \nBen Straub is a Principal Programmer at GSK in the Immunology Therapeutic Area since 2018. He has led and helped with many initiatives around R Adoption activities within Clinical Programming since his start at GSK. He is also actively helping to develop and maintain an end-to-end R package pipeline (pharmaverse) that addresses all the needs of Clinical Reporting with many awesome companies and individuals. He is very excited for the future of using R and open source for Clinical Reporting.\n\nRammprasad Ganapathy (Ram) is a Principal Data Scientist at Roche/Genentech with over 15 years of experience in EDC clinical programming and statistical programming. He leads the OAK team and is the author of the R packages {roak} and its open-source counterpart, {sdtm.oak}. Ram and his team developed the R-based SDTM automation solution, OAK, taking it from a proof of concept to full-scale implementation.",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "license.html",
    "href": "license.html",
    "title": "License",
    "section": "",
    "text": "This work is licensed under a Creative Commons Attribution 4.0 International License.",
    "crumbs": [
      "License"
    ]
  },
  {
    "objectID": "slides/02-SDTM/index.html#rammprasad-ganapathy-ram",
    "href": "slides/02-SDTM/index.html#rammprasad-ganapathy-ram",
    "title": "CDISC SDTM (Study Data Tabulation Model) datasets in R",
    "section": "Rammprasad Ganapathy (Ram)",
    "text": "Rammprasad Ganapathy (Ram)\n\nPrincipal Data Scientist ar Roche/Genentech with over 15 years of experience in EDC and Statistical Programming.\nBased in San Francisco Bay area in CA.\nPassionate about developing R packages, creating innovative solutions, and automation.\nCreator of the roak package, which is a metadata-driven automation framework for SDTM programming.\nLed the OAK team and the roak product from the initial vision of metadata driven automation through PoC to Production.\nIt is now utilized to automate SDTM in more than 50 studies at Roche for regulatory reporting.\nCreator and one of the developers for sdtm.oak."
  },
  {
    "objectID": "slides/02-SDTM/index.html#objectives",
    "href": "slides/02-SDTM/index.html#objectives",
    "title": "CDISC SDTM (Study Data Tabulation Model) datasets in R",
    "section": "Objectives",
    "text": "Objectives\n\nBy the end of this workshop you will have:\n\nUpdated code for SDTM VS and DM using sdtm.oak.\nGained an understanding of how to use sdtm.oak.\nGained an understanding of how to use resources for building SDTM in R."
  },
  {
    "objectID": "slides/02-SDTM/index.html#assumptions",
    "href": "slides/02-SDTM/index.html#assumptions",
    "title": "CDISC SDTM (Study Data Tabulation Model) datasets in R",
    "section": "Assumptions",
    "text": "Assumptions\n\nBasic knowledge of CDISC Standards (SDTM Domains)\nBasic background in R and its packages\nBasic familiarity with RStudio IDE.\n%&gt;% chaining functions together"
  },
  {
    "objectID": "slides/02-SDTM/index.html#agenda",
    "href": "slides/02-SDTM/index.html#agenda",
    "title": "CDISC SDTM (Study Data Tabulation Model) datasets in R",
    "section": "Agenda",
    "text": "Agenda\n\n🕙 20 minutes Introduction to sdtm.oak\n🕥 20 minutes VS domain programming\n🕦 10 minutes DM domain programming\n🕦 10 minutes short exercise"
  },
  {
    "objectID": "slides/02-SDTM/index.html#about-the-package",
    "href": "slides/02-SDTM/index.html#about-the-package",
    "title": "CDISC SDTM (Study Data Tabulation Model) datasets in R",
    "section": "About the package",
    "text": "About the package\n\nSponsored by CDISC COSA, pharmaceutical companies, including Roche, Pfizer, GSK, Vertex, Atorus Research, Pattern Institute, Transition Technologies Science.\nPart of the pharmaverse Group of packages.\nInspired by the Roche’s roak package.\nAddresses a critical gap in the pharmaverse suite by enabling study programmers to create SDTM datasets in R, complementing the existing capabilities for ADaM, TLGs, eSubmission, etc."
  },
  {
    "objectID": "slides/02-SDTM/index.html#challenges-in-sdtm-programming",
    "href": "slides/02-SDTM/index.html#challenges-in-sdtm-programming",
    "title": "CDISC SDTM (Study Data Tabulation Model) datasets in R",
    "section": "Challenges in SDTM Programming",
    "text": "Challenges in SDTM Programming\n\nAlthough SDTM is simpler with less complex derivations compared to ADaM, it presents unique challenges. Unlike ADaM, which uses SDTM datasets as its source with a well-defined structure, SDTM relies on raw datasets as input.\nRaw Data structure - Different EDC systems produce data in different structures, different variable names, dataset names etc.\nVarying Data Collection standards - Although CDASH is available, the companies can still develop varying eCRFs using CDASH standards."
  },
  {
    "objectID": "slides/02-SDTM/index.html#sdtm.oak-v0.2",
    "href": "slides/02-SDTM/index.html#sdtm.oak-v0.2",
    "title": "CDISC SDTM (Study Data Tabulation Model) datasets in R",
    "section": "sdtm.oak v0.2",
    "text": "sdtm.oak v0.2\n\nv0.2 is avaiable on CRAN.\nEDC agnostic sdtm.oak is designed to be highly versatile, accommodating varying raw data structures from different EDC systems and external vendors.\nData standards agnostic It supports both CDISC-defined data collection standards (CDASH) and various proprietary data collection standards defined by pharmaceutical companies.\nProvides a framework for modular programming, making it a valuable addition to the pharmaverse ecosystem."
  },
  {
    "objectID": "slides/02-SDTM/index.html#key-concepts",
    "href": "slides/02-SDTM/index.html#key-concepts",
    "title": "CDISC SDTM (Study Data Tabulation Model) datasets in R",
    "section": "Key concepts",
    "text": "Key concepts\n\nThe SDTM mappings that transform the collected source data into the target SDTM data model are grouped into algorithms.\nThese mapping algorithms form the backbone of   sdtm.oak \nAlgorithms can be re-used across multiple SDTM domains.\nProgramming language agnostic This concept does not rely on a specific programming language for implementation.\nsdtm.oak has R functions to represent each algorithm"
  },
  {
    "objectID": "slides/02-SDTM/index.html#assign_no_ct",
    "href": "slides/02-SDTM/index.html#assign_no_ct",
    "title": "CDISC SDTM (Study Data Tabulation Model) datasets in R",
    "section": "assign_no_ct",
    "text": "assign_no_ct\n\n\n\n\n\n\n\n\nAlgorithm or Function\nDescription of the Algorithm\nExample SDTM mapping\n\n\n\n\n        assign_no_ct()  \nOne-to-one mapping between the raw source and a target SDTM variable that has no controlled terminology restrictions. Just a simple assignment statement.\nMH.MHTERM  AE.AETERM"
  },
  {
    "objectID": "slides/02-SDTM/index.html#assign_ct",
    "href": "slides/02-SDTM/index.html#assign_ct",
    "title": "CDISC SDTM (Study Data Tabulation Model) datasets in R",
    "section": "assign_ct",
    "text": "assign_ct\n\n\n\n\n\n\n\n\nAlgorithm or Function\nDescription of the Algorithm\nExample SDTM mapping\n\n\n\n\n        assign_ct()  \nOne-to-one mapping between the raw source and a target SDTM variable that is subject to controlled terminology restrictions. A simple assign statement and applying controlled terminology. This will be used only if the SDTM variable has an associated controlled terminology.\nVS.VSPOS  VS.VSLAT"
  },
  {
    "objectID": "slides/02-SDTM/index.html#assign_datetime",
    "href": "slides/02-SDTM/index.html#assign_datetime",
    "title": "CDISC SDTM (Study Data Tabulation Model) datasets in R",
    "section": "assign_datetime",
    "text": "assign_datetime\n\n\n\n\n\n\n\n\nAlgorithm or Function\nDescription of the Algorithm\nExample SDTM mapping\n\n\n\n\n        assign_datetime()  \nOne-to-one mapping between the raw source and a target that involves mapping a Date or time or datetime component. This mapping algorithm also takes care of handling unknown dates and converting them into. ISO8601 format.\nMH.MHSTDTC  AE.AEENDTC"
  },
  {
    "objectID": "slides/02-SDTM/index.html#hardcode_ct",
    "href": "slides/02-SDTM/index.html#hardcode_ct",
    "title": "CDISC SDTM (Study Data Tabulation Model) datasets in R",
    "section": "hardcode_ct",
    "text": "hardcode_ct\n\n\n\n\n\n\n\n\nAlgorithm or Function\nDescription of the Algorithm\nExample SDTM mapping\n\n\n\n\n        hardcode_ct()  \nMapping a hardcoded value to a target SDTM variable that is subject to terminology restrictions. This will be used only if the SDTM variable has an associated controlled terminology.\nMH.MHPRESP = ‘Y’  VS.VSORRESU = ‘mmHg’"
  },
  {
    "objectID": "slides/02-SDTM/index.html#hardcode_no_ct",
    "href": "slides/02-SDTM/index.html#hardcode_no_ct",
    "title": "CDISC SDTM (Study Data Tabulation Model) datasets in R",
    "section": "hardcode_no_ct",
    "text": "hardcode_no_ct\n\n\n\n\n\n\n\n\nAlgorithm or Function\nDescription of the Algorithm\nExample SDTM mapping\n\n\n\n\n        hardcode_no_ct()  \nMapping a hardcoded value to a target SDTM variable that has no terminology restrictions.\nCM.CMTRT = ‘FLUIDS’  VS.VSCAT = ‘VITAL SIGNS’"
  },
  {
    "objectID": "slides/02-SDTM/index.html#condition_add",
    "href": "slides/02-SDTM/index.html#condition_add",
    "title": "CDISC SDTM (Study Data Tabulation Model) datasets in R",
    "section": "condition_add",
    "text": "condition_add\n\n\n\n\n\n\n\n\nAlgorithm or Function\nDescription of the Algorithm\nExample SDTM mapping\n\n\n\n\n        condition_add()  \nAlgorithm that is used to filter the source data and/or target domain based on a condition. The mapping will be applied only if the condition is met. This algorithm has to be used in conjunction with other algorithms, that is if the condition is met perform the mapping using algorithms like assign_ct, assign_no_ct, hardcode_ct, hardcode_no_ct, assign_datetime.\nIf MDPRIOR == 1 then CM.CMSTRTPT = ‘BEFORE’. VS.VSMETHOD when VSTESTCD = ‘TEMP’"
  },
  {
    "objectID": "slides/02-SDTM/index.html#oak_cal_ref_dates",
    "href": "slides/02-SDTM/index.html#oak_cal_ref_dates",
    "title": "CDISC SDTM (Study Data Tabulation Model) datasets in R",
    "section": "oak_cal_ref_dates",
    "text": "oak_cal_ref_dates\n\n\n\n\n\n\n\n\nAlgorithm or Function\nDescription of the Algorithm\nExample SDTM mapping\n\n\n\n\n        oak_cal_ref_dates()  \nDerivation of Reference dates in the DM domain\nDM.RFSTDTC  DM.RFPENDTC"
  },
  {
    "objectID": "slides/02-SDTM/index.html#reusable-algorithms",
    "href": "slides/02-SDTM/index.html#reusable-algorithms",
    "title": "CDISC SDTM (Study Data Tabulation Model) datasets in R",
    "section": "Reusable Algorithms",
    "text": "Reusable Algorithms"
  },
  {
    "objectID": "slides/02-SDTM/index.html#algorithms-compared-to-dplyr",
    "href": "slides/02-SDTM/index.html#algorithms-compared-to-dplyr",
    "title": "CDISC SDTM (Study Data Tabulation Model) datasets in R",
    "section": "Algorithms compared to dplyr",
    "text": "Algorithms compared to dplyr\n\nsdtm.oak algorithms enhances dplyr functions\n\nAllowing users to perform multiple actions within a single function call.\nApplying if_else condtions, Controlled Terminology in a single function call by providing a simple approach compared to case_when statements.\nMapping an SDTM variable only if the source contains data, which is particularly useful when hardcoding.\nHandling unknown dates, as well as date and time collected in separate or the same raw variables.\nAdding qualifiers to topic variables using oak id variables.\n\nWhile all these can be achieved using dplyr, the algorithms in sdtm.oak provide a more elegant and efficient approach."
  },
  {
    "objectID": "slides/02-SDTM/index.html#programming-concepts",
    "href": "slides/02-SDTM/index.html#programming-concepts",
    "title": "CDISC SDTM (Study Data Tabulation Model) datasets in R",
    "section": "Programming concepts",
    "text": "Programming concepts\n\nIs very close to the key SDTM concepts.\nProvide a straightforward way to do step-by-step SDTM programming in R, that is, mapping topic variable and its qualifiers.\nProgramming steps are generic across SDTM domain classes like Events, Interventions, Findings"
  },
  {
    "objectID": "slides/02-SDTM/index.html#sdtm-concept",
    "href": "slides/02-SDTM/index.html#sdtm-concept",
    "title": "CDISC SDTM (Study Data Tabulation Model) datasets in R",
    "section": "SDTM Concept",
    "text": "SDTM Concept\n\nsdtm concept"
  },
  {
    "objectID": "slides/02-SDTM/index.html#programming-steps",
    "href": "slides/02-SDTM/index.html#programming-steps",
    "title": "CDISC SDTM (Study Data Tabulation Model) datasets in R",
    "section": "Programming steps",
    "text": "Programming steps\n\nRead Raw datasets\nCreate id vars in the raw dataset\nRead study controlled terminology\nMap Topic Variable\nMap Rest of the variables\nRepeat Map topic and Map rest for every topic variable\nCreate SDTM derived variables\nAdd Lables and Attributes"
  },
  {
    "objectID": "slides/02-SDTM/index.html#oak-id-vars",
    "href": "slides/02-SDTM/index.html#oak-id-vars",
    "title": "CDISC SDTM (Study Data Tabulation Model) datasets in R",
    "section": "oak id vars",
    "text": "oak id vars\n\nRaw data can be in long format, where each piece of collected data is represented as a column.\nIn SDTM mappings, transposing may be necessary to create multiple records from a single row in a raw dataset (e.g., HEIGHT and WEIGHT in the VS domain).\nAlternatively, a single row in an SDTM domain can be created from one row of the raw dataset (e.g., AETERM from the adverse events raw dataset).\nQualifiers need to be mapped to their corresponding topic variables.\nThe OAK ID variables are a combination of patient number, row number of the raw dataset, and raw source name.\nThese id variables provide key linkage between the SDTM datasets and the raw datasets during programming."
  },
  {
    "objectID": "slides/02-SDTM/index.html#how-we-will-code-today",
    "href": "slides/02-SDTM/index.html#how-we-will-code-today",
    "title": "CDISC SDTM (Study Data Tabulation Model) datasets in R",
    "section": "How we will “code” today",
    "text": "How we will “code” today\n\nWe will walk you through coding VS and DM\n\nDiscussion on each function and function arguments\nOccasional Check-in Poll\n\nImportant to move along quickly\n\nFull scripts are available in demo folder"
  },
  {
    "objectID": "slides/02-SDTM/index.html#review-specs",
    "href": "slides/02-SDTM/index.html#review-specs",
    "title": "CDISC SDTM (Study Data Tabulation Model) datasets in R",
    "section": "Review specs",
    "text": "Review specs\nReview aCRF\n\nAdverseEvent_aCRF"
  },
  {
    "objectID": "slides/02-SDTM/index.html#code-walkthrough",
    "href": "slides/02-SDTM/index.html#code-walkthrough",
    "title": "CDISC SDTM (Study Data Tabulation Model) datasets in R",
    "section": "Code Walkthrough",
    "text": "Code Walkthrough\nRun the code and explain to the users"
  },
  {
    "objectID": "slides/02-SDTM/index.html#recap",
    "href": "slides/02-SDTM/index.html#recap",
    "title": "CDISC SDTM (Study Data Tabulation Model) datasets in R",
    "section": "Recap",
    "text": "Recap\nDid we review the following in the code?\n\nFunction call for various Algorithms\nassign datetime function\nHow does condition_add work?\nSDTM derived variables"
  },
  {
    "objectID": "slides/02-SDTM/index.html#quiz---1",
    "href": "slides/02-SDTM/index.html#quiz---1",
    "title": "CDISC SDTM (Study Data Tabulation Model) datasets in R",
    "section": "Quiz - 1",
    "text": "Quiz - 1\nWhat function should be used for mapping for CMROUTE. The Route information is collected in a drop down list on the CRF.\n\n\n\n\n\n  assign_no_ct() \n\n\n  assign_ct() \n\n\n\n\n\n\n\n\nCorrect answer:\nb) As CMROUTE has a codelist associated we need to use   assign_ct()"
  },
  {
    "objectID": "slides/02-SDTM/index.html#review-specs-1",
    "href": "slides/02-SDTM/index.html#review-specs-1",
    "title": "CDISC SDTM (Study Data Tabulation Model) datasets in R",
    "section": "Review specs",
    "text": "Review specs\nReview aCRF\n\nDemographics_aCRF\nExposure_as_collected_aCRF\nSubject_Disposition_aCRF"
  },
  {
    "objectID": "slides/02-SDTM/index.html#reference-date-derivation",
    "href": "slides/02-SDTM/index.html#reference-date-derivation",
    "title": "CDISC SDTM (Study Data Tabulation Model) datasets in R",
    "section": "Reference date derivation",
    "text": "Reference date derivation\n\nDM domain has reference date variables like RFSTDTC, RFENDTC, RFICDTC, RFPENDTC.\nUsually the programming logic includes deriving this as a minimum or maximum date from the raw data across multiple eCRFs.\noak_cal_ref_dates function can help users derive these reference dates based on the metadata provided in a configuration file - ref_date_config_df.\nUsers have to prepare this additional metadata file to derive reference dates."
  },
  {
    "objectID": "slides/02-SDTM/index.html#reference-date-configuration-file",
    "href": "slides/02-SDTM/index.html#reference-date-configuration-file",
    "title": "CDISC SDTM (Study Data Tabulation Model) datasets in R",
    "section": "Reference date configuration file",
    "text": "Reference date configuration file\n\nAn intuitive way to let   sdtm.oak  know where to look for the reference dates.\nMultiple eCRFs or raw datasets and variables can be specified to derive a specific reference date. The columns in the file are\nraw_dataset_name : Name of the raw dataset.\ndate_var : Date variable name from the raw dataset.\ntime_var : Time variable name from the raw dataset.\ndformat : Format of the date collected in raw data.\ntformat: Format of the time collected in raw data.\nsdtm_var_name : Reference variable name."
  },
  {
    "objectID": "slides/02-SDTM/index.html#code-walkthrough-1",
    "href": "slides/02-SDTM/index.html#code-walkthrough-1",
    "title": "CDISC SDTM (Study Data Tabulation Model) datasets in R",
    "section": "Code Walkthrough",
    "text": "Code Walkthrough\nRun the code and explain to the users"
  },
  {
    "objectID": "slides/02-SDTM/index.html#recap-1",
    "href": "slides/02-SDTM/index.html#recap-1",
    "title": "CDISC SDTM (Study Data Tabulation Model) datasets in R",
    "section": "Recap",
    "text": "Recap\nDid we review the following in the code?\n\nMapping one topic variable and its qualifies at a time\nMapping qualifiers common to all topic variables\nUsage of oak_id_vars"
  },
  {
    "objectID": "slides/02-SDTM/index.html#quiz---2",
    "href": "slides/02-SDTM/index.html#quiz---2",
    "title": "CDISC SDTM (Study Data Tabulation Model) datasets in R",
    "section": "Quiz - 2",
    "text": "Quiz - 2\nWhen to use hardcode mapping algorithm?\n\n\n\n\n\nTo assign a collected value on the eCRF\n\n\nTo Hardcode a SDTM variable that has not directly collected on the eCRF.\n\n\n\n\n\n\n\n\nCorrect answer:\nb) To hardcode a value use hardcode algorithms. To assign a collected value use assign algorithms"
  },
  {
    "objectID": "slides/02-SDTM/index.html#get-involved",
    "href": "slides/02-SDTM/index.html#get-involved",
    "title": "CDISC SDTM (Study Data Tabulation Model) datasets in R",
    "section": "Get Involved",
    "text": "Get Involved\nPlease try the package and provide us with your feedback, or get involved in the development of new features. We can be reached through any of the following means:\nSlack: https://oakgarden.slack.com\nGitHub: https://github.com/pharmaverse/sdtm.oak\nCDISC Wiki: https://wiki.cdisc.org/display/oakgarden"
  },
  {
    "objectID": "slides/02-SDTM/index.html#learning-resources",
    "href": "slides/02-SDTM/index.html#learning-resources",
    "title": "CDISC SDTM (Study Data Tabulation Model) datasets in R",
    "section": "Learning Resources",
    "text": "Learning Resources\nsdtm.oak Documentation\nsdtm.oak Youtube Video\nsdtm.oak Pharmaverse Blog\nSDTM Programming in R with sdtm.oak"
  },
  {
    "objectID": "slides/02-SDTM/index.html#thank-you",
    "href": "slides/02-SDTM/index.html#thank-you",
    "title": "CDISC SDTM (Study Data Tabulation Model) datasets in R",
    "section": "Thank you",
    "text": "Thank you"
  },
  {
    "objectID": "slides/03-ADaM/index.html#objectives",
    "href": "slides/03-ADaM/index.html#objectives",
    "title": "ADaMs with {admiral} and friends",
    "section": "Objectives",
    "text": "Objectives\n\nBy the end of this ADaM section you will have:\n\nGained an understanding of how to use admiral, metatools/metacore, and xportr packages to create ADaMs\nSeen code executed to create ADaMs: ADSL and ADVS.\nChecked in on our fav participant - Barb"
  },
  {
    "objectID": "slides/03-ADaM/index.html#assumptions",
    "href": "slides/03-ADaM/index.html#assumptions",
    "title": "ADaMs with {admiral} and friends",
    "section": "Assumptions",
    "text": "Assumptions\n\nBasic knowledge of CDISC Standards (ADaM and SDTM Domains)\nCheck out the ADaM IG and other documents for CDISC\n\nThese are great but tome-like!!\n\nCheck out admiral and admiraldiscovery for CDISC implementation\n\nI always like to code immedialtely to understand a process!\n\n🦺 But even lacking CDSIC knowledge, we still think you will gain some great learnings today! 🦺"
  },
  {
    "objectID": "slides/03-ADaM/index.html#play-by-play",
    "href": "slides/03-ADaM/index.html#play-by-play",
    "title": "ADaMs with {admiral} and friends",
    "section": "Play by Play",
    "text": "Play by Play\n\n🕙11:00 - 11:15 Set the Stage: Overview of datasets, specs, processes, packages, functions\n🕥11:15 - 11:45 Subject-level dataset: ADSL\n🕚11:45 - 11:50 Check in on Barb / Quick Q\n🕦11:50 - 12:25 Basic Data Structure: ADVS\n🕚12:25 - 12:30 Check in on Barb / Quick Q\n🕚12:30 Lunch!"
  },
  {
    "objectID": "slides/03-ADaM/index.html#set-the-stage-1",
    "href": "slides/03-ADaM/index.html#set-the-stage-1",
    "title": "ADaMs with {admiral} and friends",
    "section": "Set the Stage",
    "text": "Set the Stage\n\nprocesses\nData\nSpecs\npharmaverse packages\nfunctions"
  },
  {
    "objectID": "slides/03-ADaM/index.html#how-we-will-proceed-today-1",
    "href": "slides/03-ADaM/index.html#how-we-will-proceed-today-1",
    "title": "ADaMs with {admiral} and friends",
    "section": "How we will proceed today?",
    "text": "How we will proceed today?\n\nI will walk you through certain parts of the ADSL and ADVS R sripts\n\nDiscussion on certain function and function arguments from scripts\nWill pull up full function for more discussion.\n\n\nImportant to move along quickly:\n\nCan discuss issues/questions in the break.\nCode should run out of the box - but have to wait to diagnose."
  },
  {
    "objectID": "slides/03-ADaM/index.html#adsl---subject-level-dataset-dpi-needs-fix",
    "href": "slides/03-ADaM/index.html#adsl---subject-level-dataset-dpi-needs-fix",
    "title": "ADaMs with {admiral} and friends",
    "section": "ADSL - Subject Level Dataset (dpi / needs fix)",
    "text": "ADSL - Subject Level Dataset (dpi / needs fix)\n\n\n\n\nADSL - Subject Level Dataset, i.e each subject has a record. Focus on adding variables."
  },
  {
    "objectID": "slides/03-ADaM/index.html#advs---subject-level-dataset-dpi-needs-fix",
    "href": "slides/03-ADaM/index.html#advs---subject-level-dataset-dpi-needs-fix",
    "title": "ADaMs with {admiral} and friends",
    "section": "ADVS - Subject Level Dataset (dpi / needs fix)",
    "text": "ADVS - Subject Level Dataset (dpi / needs fix)\n\n\n\n\nADVS - Basic Data Structure (BDS) Dataset. Focus on adding records."
  },
  {
    "objectID": "slides/03-ADaM/index.html#spec-details",
    "href": "slides/03-ADaM/index.html#spec-details",
    "title": "ADaMs with {admiral} and friends",
    "section": "Spec-details",
    "text": "Spec-details\n\nGives specifics on how we derive variables in the ADaMs (extreme traceability)\nNot fit for purpose - just a helpful guide\nWhat is in the the Specs:\n\nTwo datasets, dataset labels and variable keys\nVariables - labels, lengths, types, linked to method\nCodelists!!\nNo VLMs"
  },
  {
    "objectID": "slides/03-ADaM/index.html#the-core-pharmaverse-packages",
    "href": "slides/03-ADaM/index.html#the-core-pharmaverse-packages",
    "title": "ADaMs with {admiral} and friends",
    "section": "The core pharmaverse packages",
    "text": "The core pharmaverse packages\n \nFocus on applying information from our Specs to the ADaMs\n\nFocus on deriving variables and records driven by our Specs\n\nFocus on preparing the dataset as an xpt file to be sent to regulatory agencies."
  },
  {
    "objectID": "slides/03-ADaM/index.html#pharmaverse-plays-nice",
    "href": "slides/03-ADaM/index.html#pharmaverse-plays-nice",
    "title": "ADaMs with {admiral} and friends",
    "section": "pharmaverse plays nice!",
    "text": "pharmaverse plays nice!\n\nThe ADaM code presented today utilizes all the previously mentioned packages, but also makes use of tidyverse and base R code.\nIf a function isn’t meeting your needs or looks too cumbersome, then that is okay!\nThese packages are all modular and play well with others!"
  },
  {
    "objectID": "slides/03-ADaM/index.html#admiral",
    "href": "slides/03-ADaM/index.html#admiral",
    "title": "ADaMs with {admiral} and friends",
    "section": "admiral",
    "text": "admiral\n\n\n\n\n\n\n\n\nPackage\nFunction\nPurpose\n\n\n\n\nadmiral\nderive_vars_merged()\nleft_join on steroids\n\n\nadmiral\nderive_param_computed()\nCore function for wrappers used in ADVS\n\n\nadmiral\nderive_vars_dy()\nCreate the relative study day\n\n\nadmiral\nderive_vars_dtm()\nTake a ---DTC variable and turn it into a ---DTM variable\n\n\nadmiral\nderive_vars_duration()\nDuration between timepoints\n\n\nadmiral\nrestrict_derivation()\nHOF:\n\n\nadmiral\nderive_var_extreme_flag()\n…\n\n\n\nMost functions in admiral follow these conventions:\n\nvar_ or _vars_ functions add variable(s) to ADaMs\n_param_ functions add records to ADaMS\nOther not following this convention typically do more advanced stuff…"
  },
  {
    "objectID": "slides/03-ADaM/index.html#metatools-and-xportr",
    "href": "slides/03-ADaM/index.html#metatools-and-xportr",
    "title": "ADaMs with {admiral} and friends",
    "section": "metatools and xportr",
    "text": "metatools and xportr\n\n\n\n\n\n\n\n\nPackage\nFunction\nPurpose\n\n\n\n\nmetacore\nspec_to_metacore()\nCreates a “special” object from your specs\n\n\nmetatools\ncombine_supp()\nJoin Parent and Supplementary Datasets\n\n\nmetatools\ncreate_var_from_codelist()\nNumeric Vars from Specs!\n\n\nmetatools\ndrop_unspec_vars()\nEasily drop variables not in Spec\n\n\nxportr\nxportr_label()\nApply labels from Spec\n\n\nxportr\nxportr_write()\nWrite out an xpt file\n\n\n\n\nMost functions from these packages are about applying metadata from specs to your dataset.\nxportr follows a standard naming convention."
  },
  {
    "objectID": "slides/03-ADaM/index.html#the-big-picture-of-adsl",
    "href": "slides/03-ADaM/index.html#the-big-picture-of-adsl",
    "title": "ADaMs with {admiral} and friends",
    "section": "The Big Picture of ADSL",
    "text": "The Big Picture of ADSL\n\nWe have an ADSL script:\n\nUsing pharmaversesdtm data: dm, suppdm, ex, ae, vs, etc\nUses the ADSL section of our spec file\nCreating a single record for each subject"
  },
  {
    "objectID": "slides/03-ADaM/index.html#reading-in-our-spec-for-adsl-lines",
    "href": "slides/03-ADaM/index.html#reading-in-our-spec-for-adsl-lines",
    "title": "ADaMs with {admiral} and friends",
    "section": "Reading in our spec for ADSL (Lines: )",
    "text": "Reading in our spec for ADSL (Lines: )\nspec_to_metacore(\n  path = \"slides/03-ADaM/metadata/posit_specs.xlsx\",\n  where_sep_sheet = FALSE,\n  quiet = TRUE\n) %&gt;%\n  select_dataset(\"ADVS\")"
  },
  {
    "objectID": "slides/03-ADaM/index.html#combine-parent-and-supplementary-data-lines",
    "href": "slides/03-ADaM/index.html#combine-parent-and-supplementary-data-lines",
    "title": "ADaMs with {admiral} and friends",
    "section": "Combine Parent and Supplementary Data (Lines: )",
    "text": "Combine Parent and Supplementary Data (Lines: )\ndm_suppdm &lt;- combine_supp(dm, suppdm)\n\nOne line of code to join two datasets!\nCollecting non-standard data and linking to parent\nFunction is from {metatools}\nMaybe a dm record linked to suppdm record here??"
  },
  {
    "objectID": "slides/03-ADaM/index.html#lets-turn-a---dtc-to-a-dtm-variable-lines",
    "href": "slides/03-ADaM/index.html#lets-turn-a---dtc-to-a-dtm-variable-lines",
    "title": "ADaMs with {admiral} and friends",
    "section": "Let’s turn a --DTC to a *DTM variable (Lines: )",
    "text": "Let’s turn a --DTC to a *DTM variable (Lines: )\nderive_vars_dtm(\n  dtc = EXSTDTC,\n  new_vars_prefix = \"EXST\",\n  time_imputation = \"last\",\n  flag_imputation = \"time\"\n)"
  },
  {
    "objectID": "slides/03-ADaM/index.html#woahthere-is-more",
    "href": "slides/03-ADaM/index.html#woahthere-is-more",
    "title": "ADaMs with {admiral} and friends",
    "section": "Woah…there is more!!",
    "text": "Woah…there is more!!\n\nderive_vars_dtm(\n  dataset,\n  new_vars_prefix,\n  dtc,\n  highest_imputation = \"h\",\n  date_imputation = \"first\",\n  time_imputation = \"first\",\n  flag_imputation = \"auto\",\n  min_dates = NULL,\n  max_dates = NULL,\n  preserve = FALSE,\n  ignore_seconds_flag = FALSE\n)"
  },
  {
    "objectID": "slides/03-ADaM/index.html#lets-get-a-merge-lines",
    "href": "slides/03-ADaM/index.html#lets-get-a-merge-lines",
    "title": "ADaMs with {admiral} and friends",
    "section": "Let’s get a merge (Lines: )",
    "text": "Let’s get a merge (Lines: )\nderive_vars_merged(\n  dataset_add = ex_ext,\n  by_vars = exprs(STUDYID, USUBJID),\n  order = exprs(EXSTDTM, EXSEQ),\n  new_vars = exprs(TRTSDTM = EXSTDTM, TRTSTMF = EXSTTMF),\n  filter_add = (EXDOSE &gt; 0 |\n    (EXDOSE == 0 &\n      str_detect(EXTRT, \"PLACEBO\"))) &\n    !is.na(EXSTDTM),\n  mode = \"first\",\n)"
  },
  {
    "objectID": "slides/03-ADaM/index.html#whoa-way-more-options",
    "href": "slides/03-ADaM/index.html#whoa-way-more-options",
    "title": "ADaMs with {admiral} and friends",
    "section": "Whoa!!! Way more options!!",
    "text": "Whoa!!! Way more options!!\n\nderive_vars_merged(\n  dataset,\n  dataset_add,\n  by_vars,\n  order = NULL,\n  new_vars = NULL,\n  filter_add = NULL,\n  mode = NULL,\n  exist_flag = NULL,\n  true_value = \"Y\",\n  false_value = NA_character_,\n  missing_values = NULL,\n  check_type = \"warning\",\n  duplicate_msg = NULL,\n  relationship = NULL\n)"
  },
  {
    "objectID": "slides/03-ADaM/index.html#lets-derive-a-duration-variable-lines",
    "href": "slides/03-ADaM/index.html#lets-derive-a-duration-variable-lines",
    "title": "ADaMs with {admiral} and friends",
    "section": "Let’s derive a Duration Variable (Lines: )",
    "text": "Let’s derive a Duration Variable (Lines: )\nderive_vars_duration(\n    new_var = DTHADY,\n    start_date = TRTSDT,\n    end_date = DTHDT\n  )"
  },
  {
    "objectID": "slides/03-ADaM/index.html#ohhh-there-is-more",
    "href": "slides/03-ADaM/index.html#ohhh-there-is-more",
    "title": "ADaMs with {admiral} and friends",
    "section": "Ohhh there is more!!",
    "text": "Ohhh there is more!!\n\nderive_vars_duration(\n  dataset,\n  new_var,\n  new_var_unit = NULL,\n  start_date,\n  end_date,\n  in_unit = \"days\",\n  out_unit = \"DAYS\",\n  floor_in = TRUE,\n  add_one = TRUE,\n  trunc_out = FALSE,\n  type = \"duration\"\n)"
  },
  {
    "objectID": "slides/03-ADaM/index.html#lets-apply-control-terms-code-lists-lines",
    "href": "slides/03-ADaM/index.html#lets-apply-control-terms-code-lists-lines",
    "title": "ADaMs with {admiral} and friends",
    "section": "Let’s apply Control Terms / Code Lists (Lines: )",
    "text": "Let’s apply Control Terms / Code Lists (Lines: )\nadsl16 %&gt;%\n  create_var_from_codelist(metacore, input_var = AGEGR1, out_var = AGEGR1N) %&gt;%\n  create_var_from_codelist(metacore, input_var = RACE, out_var = RACEN) %&gt;%\n  create_var_from_codelist(metacore, input_var = RACEGR1, out_var = RACEGR1N) %&gt;%\n  create_var_from_codelist(metacore, input_var = REGION1, out_var = REGION1N) %&gt;%\n  create_var_from_codelist(metacore, input_var = TRT01P, out_var = TRT01PN) %&gt;%\n  create_var_from_codelist(metacore, input_var = TRT01A, out_var = TRT01AN)"
  },
  {
    "objectID": "slides/03-ADaM/index.html#more-details",
    "href": "slides/03-ADaM/index.html#more-details",
    "title": "ADaMs with {admiral} and friends",
    "section": "More details",
    "text": "More details\n\ncreate_var_from_codelist(\n  data,\n  metacore,\n  input_var,\n  out_var,\n  codelist = NULL,\n  decode_to_code = TRUE,\n  strict = TRUE\n)"
  },
  {
    "objectID": "slides/03-ADaM/index.html#check-in-on-barb",
    "href": "slides/03-ADaM/index.html#check-in-on-barb",
    "title": "ADaMs with {admiral} and friends",
    "section": "Check in on Barb",
    "text": "Check in on Barb"
  },
  {
    "objectID": "slides/03-ADaM/index.html#check-in-question",
    "href": "slides/03-ADaM/index.html#check-in-question",
    "title": "ADaMs with {admiral} and friends",
    "section": "Check-in Question",
    "text": "Check-in Question\nWhich admiral function can be used to turn a ---DTC variable into a *DTM variable\n\nderive_vars_dtc()\nderive_var_trtdurd()\nderive_vars_dtm()\nderive_vars_exsdtc()\n\n\nCorrect Answer: c) derive_vars_dtm()"
  },
  {
    "objectID": "slides/03-ADaM/index.html#the-big-picture-of-advs",
    "href": "slides/03-ADaM/index.html#the-big-picture-of-advs",
    "title": "ADaMs with {admiral} and friends",
    "section": "The Big Picture of ADVS",
    "text": "The Big Picture of ADVS\n\nWe have an ADVS script:\n\nUsing pharmaversesdtm data: …\nUses the ADVS section of our spec file\nCreating a multiple records for each subject\nADSL information included\nLot’s of functions are repeated within the ADVS script used in ADSL script"
  },
  {
    "objectID": "slides/03-ADaM/index.html#lets-talk-about-lookup-tables-lines",
    "href": "slides/03-ADaM/index.html#lets-talk-about-lookup-tables-lines",
    "title": "ADaMs with {admiral} and friends",
    "section": "Let’s talk about lookup tables (Lines: )",
    "text": "Let’s talk about lookup tables (Lines: )\n  derive_vars_merged_lookup(\n    dataset_add = param_lookup,\n    new_vars = exprs(PARAMCD),\n    by_vars = exprs(VSTESTCD),\n    print_not_mapped = TRUE \n  )"
  },
  {
    "objectID": "slides/03-ADaM/index.html#a-fuller-look",
    "href": "slides/03-ADaM/index.html#a-fuller-look",
    "title": "ADaMs with {admiral} and friends",
    "section": "A Fuller Look!",
    "text": "A Fuller Look!\n\nderive_vars_merged_lookup(\n  dataset,\n  dataset_add,\n  by_vars,\n  order = NULL,\n  new_vars = NULL,\n  mode = NULL,\n  filter_add = NULL,\n  check_type = \"warning\",\n  duplicate_msg = NULL,\n  print_not_mapped = TRUE\n)"
  },
  {
    "objectID": "slides/03-ADaM/index.html#lets-add-more-records-for-each-subject-lines",
    "href": "slides/03-ADaM/index.html#lets-add-more-records-for-each-subject-lines",
    "title": "ADaMs with {admiral} and friends",
    "section": "Let’s add more records for each subject (Lines: )",
    "text": "Let’s add more records for each subject (Lines: )\nderive_param_computed(\n  by_vars = exprs(STUDYID, USUBJID, VISIT, VISITNUM, ADT, ADY, VSTPT, VSTPTNUM),\n  parameters = \"WEIGHT\",\n  set_values_to = exprs(\n    AVAL = AVAL.WEIGHT / (AVAL.HEIGHT / 100)^2,\n    PARAMCD = \"BMI\",\n    PARAM = \"Body Mass Index (kg/m^2)\",\n    AVALU = \"kg/m^2\"\n  ),\n  constant_parameters = c(\"HEIGHT\"),\n  constant_by_vars = exprs(USUBJID)\n)"
  },
  {
    "objectID": "slides/03-ADaM/index.html#only-two-arguments-not-used",
    "href": "slides/03-ADaM/index.html#only-two-arguments-not-used",
    "title": "ADaMs with {admiral} and friends",
    "section": "Only two arguments not used!",
    "text": "Only two arguments not used!\n\nderive_param_computed(\n  dataset = NULL,\n  dataset_add = NULL,\n  by_vars,\n  parameters,\n  set_values_to,\n  filter = NULL,\n  constant_by_vars = NULL,\n  constant_parameters = NULL,\n  keep_nas = FALSE\n)\n:::\n\n## Let't derive DTYPE summary records\n\n```{.r code-line-numbers=\"1|2|3|4|5|6|7|8|9|10\"}\nderive_summary_records(\n    dataset_add = advs_2, \n    by_vars = exprs(STUDYID, USUBJID, !!!adsl_vars, PARAMCD, AVISITN, AVISIT, ADT, ADY, AVALU),\n    filter_add = !is.na(AVAL),\n    set_values_to = exprs(\n      AVAL = mean(AVAL),\n      DTYPE = \"AVERAGE\"\n  )\n)\n\n\n## Let's restrict!\n\n```{.r code-line-numbers=\"1|2|3|4|5|6|7|8|9|10\"}\nrestrict_derivation(\n  derivation = derive_var_extreme_flag,\n  args = params(\n    by_vars = exprs(STUDYID, USUBJID, BASETYPE, PARAMCD),\n    order = exprs(ADT, VISITNUM, VSSEQ),\n    new_var = ABLFL,\n    mode = \"last\", # Determines of the first or last observation is flagged\n    # Below arguments are default values and not necessary to add in our case\n    true_value = \"Y\"\n  ),\n  filter = (!is.na(AVAL) &\n    ADT &lt;= TRTSDT & !is.na(BASETYPE) & is.na(DTYPE))\n)\n\nLet’s get that data read for regulatory agencies\nadvs &lt;- advs_final %&gt;%\n  drop_unspec_vars(metacore) %&gt;% # Drop unspecified variables from specs\n  check_variables(metacore, dataset_name = \"ADVS\") %&gt;% # Check all variables specified are present and no more\n  order_cols(metacore) %&gt;% # Orders the columns according to the spec\n  sort_by_key(metacore) %&gt;% # Sorts the rows by the sort keys\n  xportr_type(metacore) %&gt;%\n  xportr_length(metacore) %&gt;%\n  xportr_label(metacore) %&gt;%\n  xportr_format(metacore, domain = \"ADVS\") %&gt;%\n  xportr_df_label(metacore, domain = \"ADVS\") %&gt;%\n  xportr_write(\"datasets/advs.xpt\", metadata = metacore, domain = \"ADVS\")\n\n\nADVS Quiz\n\n\n\nCheck-in\nHave a look to {admiraldiscovery}: Which admiral wrapper function could be used to derive “BSA” parameter at any time point?\n\n\n\n\n\nadmiral::derive_param_bsa()\n\n\nadmiral::compute_bsa()\n\n\n\n\n\n\n\n\nCorrect answer:\na) the wrapper function admiral::derive_param_bsa()\n\n\n\n\n\n\nWe could also use (\"admiral::derive_param_computed()\")\n\n\n\n\n\nQuestions and Resources\n\n\n\nadmiraldiscovery\npharmaverse examples\npgkdown sites for xportr, metatools, metacore and admiral\nExtension packages for admiral: admiralophtha, admiralonco, admiralpeds\n\n\n\n\n\nClosing Thoughts\n\n\n\nOnly able to show a small number of pharmaverse packages and functions today, but please delve deeper to explore the full breadth\nIf you’d like to contribute to pharmaverse, check out options at pharmaverse.org\nFinally, be sure to join our community on Slack!\n\n\n\n\n\nPacakges and Session Information\n\nsessionInfo()\n\nR version 4.5.1 (2025-06-13)\nPlatform: x86_64-pc-linux-gnu\nRunning under: Ubuntu 24.04.3 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 \nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.26.so;  LAPACK version 3.12.0\n\nlocale:\n [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8       \n [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8   \n [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C          \n[10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C   \n\ntime zone: UTC\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices datasets  utils     methods   base     \n\nother attached packages:\n[1] countdown_0.4.0 glue_1.8.0     \n\nloaded via a namespace (and not attached):\n [1] compiler_4.5.1    fastmap_1.2.0     cli_3.6.5         htmltools_0.5.8.1\n [5] tools_4.5.1       yaml_2.3.10       rmarkdown_2.29    knitr_1.50       \n [9] jsonlite_2.0.0    xfun_0.52         digest_0.6.37     rlang_1.1.6      \n[13] renv_1.1.5        evaluate_1.0.4   \n\n\n\n\n\n\n\nR/Pharma ADaM Workshop Starting at 10:02 US EST"
  },
  {
    "objectID": "slides/03-ADaM/index.html#lets-get-that-data-read-for-regulatory-agencies",
    "href": "slides/03-ADaM/index.html#lets-get-that-data-read-for-regulatory-agencies",
    "title": "ADaMs with {admiral} and friends",
    "section": "Let’s get that data read for regulatory agencies",
    "text": "Let’s get that data read for regulatory agencies\nadvs &lt;- advs_final %&gt;%\n  drop_unspec_vars(metacore) %&gt;% # Drop unspecified variables from specs\n  check_variables(metacore, dataset_name = \"ADVS\") %&gt;% # Check all variables specified are present and no more\n  order_cols(metacore) %&gt;% # Orders the columns according to the spec\n  sort_by_key(metacore) %&gt;% # Sorts the rows by the sort keys\n  xportr_type(metacore) %&gt;%\n  xportr_length(metacore) %&gt;%\n  xportr_label(metacore) %&gt;%\n  xportr_format(metacore, domain = \"ADVS\") %&gt;%\n  xportr_df_label(metacore, domain = \"ADVS\") %&gt;%\n  xportr_write(\"datasets/advs.xpt\", metadata = metacore, domain = \"ADVS\")"
  },
  {
    "objectID": "slides/03-ADaM/index.html#check-in",
    "href": "slides/03-ADaM/index.html#check-in",
    "title": "ADaMs with {admiral} and friends",
    "section": "Check-in",
    "text": "Check-in\nHave a look to {admiraldiscovery}: Which admiral wrapper function could be used to derive “BSA” parameter at any time point?\n\n\n\n\n\nadmiral::derive_param_bsa()\n\n\nadmiral::compute_bsa()\n\n\n\n\n\n\n\n\nCorrect answer:\na) the wrapper function admiral::derive_param_bsa()\n\n\n\n\n\n\nWe could also use (\"admiral::derive_param_computed()\")"
  },
  {
    "objectID": "slides/03-ADaM/index.html#questions-and-resources",
    "href": "slides/03-ADaM/index.html#questions-and-resources",
    "title": "ADaMs with {admiral} and friends",
    "section": "Questions and Resources",
    "text": "Questions and Resources\n\n\n\nadmiraldiscovery\npharmaverse examples\npgkdown sites for xportr, metatools, metacore and admiral\nExtension packages for admiral: admiralophtha, admiralonco, admiralpeds"
  },
  {
    "objectID": "slides/03-ADaM/index.html#closing-thoughts",
    "href": "slides/03-ADaM/index.html#closing-thoughts",
    "title": "ADaMs with {admiral} and friends",
    "section": "Closing Thoughts",
    "text": "Closing Thoughts\n\n\n\nOnly able to show a small number of pharmaverse packages and functions today, but please delve deeper to explore the full breadth\nIf you’d like to contribute to pharmaverse, check out options at pharmaverse.org\nFinally, be sure to join our community on Slack!"
  },
  {
    "objectID": "slides/03-ADaM/index.html#pacakges-and-session-information",
    "href": "slides/03-ADaM/index.html#pacakges-and-session-information",
    "title": "ADaMs with {admiral} and friends",
    "section": "Pacakges and Session Information",
    "text": "Pacakges and Session Information\n\nsessionInfo()\n\nR version 4.5.1 (2025-06-13)\nPlatform: x86_64-pc-linux-gnu\nRunning under: Ubuntu 24.04.3 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 \nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.26.so;  LAPACK version 3.12.0\n\nlocale:\n [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8       \n [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8   \n [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C          \n[10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C   \n\ntime zone: UTC\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices datasets  utils     methods   base     \n\nother attached packages:\n[1] countdown_0.4.0 glue_1.8.0     \n\nloaded via a namespace (and not attached):\n [1] compiler_4.5.1    fastmap_1.2.0     cli_3.6.5         htmltools_0.5.8.1\n [5] tools_4.5.1       yaml_2.3.10       rmarkdown_2.29    knitr_1.50       \n [9] jsonlite_2.0.0    xfun_0.52         digest_0.6.37     rlang_1.1.6      \n[13] renv_1.1.5        evaluate_1.0.4"
  },
  {
    "objectID": "slides/03-ADaM/index.html#rpharma-adam-workshop-starting-at-1002-us-est",
    "href": "slides/03-ADaM/index.html#rpharma-adam-workshop-starting-at-1002-us-est",
    "title": "ADaMs with {admiral} and friends",
    "section": "R/Pharma ADaM Workshop Starting at 10:02 US EST",
    "text": "R/Pharma ADaM Workshop Starting at 10:02 US EST"
  },
  {
    "objectID": "slides/04-ARD/index.html#analysis-results-standard-ars",
    "href": "slides/04-ARD/index.html#analysis-results-standard-ars",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "Analysis Results Standard (ARS)",
    "text": "Analysis Results Standard (ARS)"
  },
  {
    "objectID": "slides/04-ARD/index.html#analysis-results-standard-ars-1",
    "href": "slides/04-ARD/index.html#analysis-results-standard-ars-1",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "Analysis Results Standard (ARS)",
    "text": "Analysis Results Standard (ARS)\n\nEmerging standard for prospectively encoding statistical analysis reporting pipeline in a machine-readable format.\nLogical model that describes analysis results and associated metadata.\nPrimary objectives:\n\nLeverage analysis results metadata to drive automation of results\nSupport storage, access, processing, traceability and reproducibility of results\n\n\n\n\n\nLearn more at https://www.cdisc.org/events/webinar/analysis-results-standard-public-review"
  },
  {
    "objectID": "slides/04-ARD/index.html#analysis-results-standard-ars-2",
    "href": "slides/04-ARD/index.html#analysis-results-standard-ars-2",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "Analysis Results Standard (ARS)",
    "text": "Analysis Results Standard (ARS)\nExample ARS Flow\n\n\nThe ARS provides a metadata-driven infrastructure for analysis"
  },
  {
    "objectID": "slides/04-ARD/index.html#analysis-results-standard-ars-3",
    "href": "slides/04-ARD/index.html#analysis-results-standard-ars-3",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "Analysis Results Standard (ARS)",
    "text": "Analysis Results Standard (ARS)\nExample ARS Flow\n\n\nThe ARS provides a metadata-driven infrastructure for analysis\n{cards} serves as the engine for the analysis"
  },
  {
    "objectID": "slides/04-ARD/index.html#analysis-results-data-ard",
    "href": "slides/04-ARD/index.html#analysis-results-data-ard",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "Analysis Results Data (ARD)",
    "text": "Analysis Results Data (ARD)\n\nEncodes statistical analysis outcomes in a machine-readable format.\nThe ARD model specifies how statistical results are saved into a structured format.\nThe ARD can be used to to subsequently create tables and figures.\nThe ARD does not describe the layout of the results"
  },
  {
    "objectID": "slides/04-ARD/index.html#analysis-results-data-ard-1",
    "href": "slides/04-ARD/index.html#analysis-results-data-ard-1",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "Analysis Results Data (ARD)",
    "text": "Analysis Results Data (ARD)\n\nAfter the initial creation of an ARD, the results can later be re-used again and again for subsequent reporting needs."
  },
  {
    "objectID": "slides/04-ARD/index.html#a-few-notes-about-ards",
    "href": "slides/04-ARD/index.html#a-few-notes-about-ards",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "A few notes about ARDs",
    "text": "A few notes about ARDs\n\nRethinking QC\n\nQC can be focused on the raw value, not the formatted display\n\nYou don’t have to waste time trying to match formatting to match QC\nBut…QC will be more sensitive to floating point\n\n\nFlexible data file types\n\nARD can be saved as a dataset (rds, xpt, etc) or json file"
  },
  {
    "objectID": "slides/04-ARD/index.html#cards-introduction",
    "href": "slides/04-ARD/index.html#cards-introduction",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "{cards}: Introduction",
    "text": "{cards}: Introduction\n\nPart of the Pharmaverse\nCollaboration between Roche, GSK, Novartis, Eli Lilly, Pfizer\nContains a variety of utilities for making ARDs\nCan be used within the ARS workflow and separately\n36k downloads per month 🤯"
  },
  {
    "objectID": "slides/04-ARD/index.html#cards-ard_summary",
    "href": "slides/04-ARD/index.html#cards-ard_summary",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "{cards}: ard_summary()",
    "text": "{cards}: ard_summary()\n\nlibrary(cards)\n\n# create ARD with default summary statistics\npharmaverseadam::adsl |&gt; \n  ard_summary(\n    variables = AGE\n  )\n\n{cards} data frame: 8 x 8\n\n\n  variable context stat_name stat_label   stat fmt_fun\n1      AGE summary         N          N    306       0\n2      AGE summary      mean       Mean 75.088       1\n3      AGE summary        sd         SD  8.494       1\n4      AGE summary    median     Median     77       1\n5      AGE summary       p25         Q1     70       1\n6      AGE summary       p75         Q3     81       1\n7      AGE summary       min        Min     50       1\n8      AGE summary       max        Max     89       1\n\n\nℹ 2 more variables: warning, error"
  },
  {
    "objectID": "slides/04-ARD/index.html#cards-ard_summary-by-variable",
    "href": "slides/04-ARD/index.html#cards-ard_summary-by-variable",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "{cards}: ard_summary() by variable",
    "text": "{cards}: ard_summary() by variable\n\n\nby: summary statistics are calculated by all combinations of the by variables, including unobserved factor levels\n\n\n\npharmaverseadam::adsl |&gt; \n  ard_summary(\n    variables = AGE,\n    by = ARM         # stats by treatment arm\n  ) \n\n{cards} data frame: 32 x 10\n\n\n   group1 group1_level variable stat_name stat_label   stat\n1     ARM      Placebo      AGE         N          N     86\n2     ARM      Placebo      AGE      mean       Mean 75.209\n3     ARM      Placebo      AGE        sd         SD   8.59\n4     ARM      Placebo      AGE    median     Median     76\n5     ARM      Placebo      AGE       p25         Q1     69\n6     ARM      Placebo      AGE       p75         Q3     82\n7     ARM      Placebo      AGE       min        Min     52\n8     ARM      Placebo      AGE       max        Max     89\n9     ARM    Screen F…      AGE         N          N     52\n10    ARM    Screen F…      AGE      mean       Mean 75.096\n\n\nℹ 22 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fun, warning, error"
  },
  {
    "objectID": "slides/04-ARD/index.html#cards-ard_summary-statistics",
    "href": "slides/04-ARD/index.html#cards-ard_summary-statistics",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "{cards}: ard_summary() statistics",
    "text": "{cards}: ard_summary() statistics\n\n\nstatistic: specify univariate summary statistics. Accepts any function, base R, from a package, or user-defined.\n\n\n\ncv &lt;- function(x)  sd(x, na.rm = TRUE)/mean(x, na.rm = TRUE)\n\npharmaverseadam::adsl |&gt; \n  ard_summary(  \n    variables = AGE,\n    by = ARM,\n    statistic = ~ list(cv = cv) # customize statistics\n  )\n\n  group1 group1_level variable stat_name stat_label  stat\n1    ARM      Placebo      AGE        cv         cv 0.114\n2    ARM    Screen F…      AGE        cv         cv 0.129\n3    ARM    Xanomeli…      AGE        cv         cv 0.106\n4    ARM    Xanomeli…      AGE        cv         cv  0.11"
  },
  {
    "objectID": "slides/04-ARD/index.html#cards-ard_summary-statistics-1",
    "href": "slides/04-ARD/index.html#cards-ard_summary-statistics-1",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "{cards}: ard_summary() statistics",
    "text": "{cards}: ard_summary() statistics\n\nCustomize the statistics returned for each variable\n\n\npharmaverseadam::adsl |&gt; \n  dplyr::mutate(AGE2 = AGE) |&gt; \n  ard_summary(\n    variables = c(AGE, AGE2),\n    by = ARM,\n    statistic = list(AGE = list(cv = cv),\n                     AGE2 = continuous_summary_fns(c(\"mean\",\"median\")))\n  )\n\n   group1 group1_level variable stat_name stat_label   stat\n1     ARM      Placebo      AGE        cv         cv  0.114\n2     ARM      Placebo     AGE2      mean       Mean 75.209\n3     ARM      Placebo     AGE2    median     Median     76\n4     ARM    Screen F…      AGE        cv         cv  0.129\n5     ARM    Screen F…     AGE2      mean       Mean 75.096\n6     ARM    Screen F…     AGE2    median     Median     76\n7     ARM    Xanomeli…      AGE        cv         cv  0.106\n8     ARM    Xanomeli…     AGE2      mean       Mean 74.381\n9     ARM    Xanomeli…     AGE2    median     Median     76\n10    ARM    Xanomeli…      AGE        cv         cv   0.11\n11    ARM    Xanomeli…     AGE2      mean       Mean 75.667\n12    ARM    Xanomeli…     AGE2    median     Median   77.5"
  },
  {
    "objectID": "slides/04-ARD/index.html#cards-ard_summary-fmt_fun",
    "href": "slides/04-ARD/index.html#cards-ard_summary-fmt_fun",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "{cards}: ard_summary() fmt_fun",
    "text": "{cards}: ard_summary() fmt_fun\n\nOverride the default formatting functions, method 1:\n\n\npharmaverseadam::adsl |&gt; \n  ard_summary(\n    variables = AGE,\n    by = ARM,                               \n    fmt_fun = ~list(mean = 0)                \n  ) |&gt; \n  apply_fmt_fun() # add a character column of rounded results\n\n{cards} data frame: 32 x 11\n\n\n   group1 group1_level variable stat_name stat_label   stat stat_fmt\n1     ARM      Placebo      AGE         N          N     86       86\n2     ARM      Placebo      AGE      mean       Mean 75.209       75\n3     ARM      Placebo      AGE        sd         SD   8.59      8.6\n4     ARM      Placebo      AGE    median     Median     76     76.0\n5     ARM      Placebo      AGE       p25         Q1     69     69.0\n6     ARM      Placebo      AGE       p75         Q3     82     82.0\n7     ARM      Placebo      AGE       min        Min     52     52.0\n8     ARM      Placebo      AGE       max        Max     89     89.0\n9     ARM    Screen F…      AGE         N          N     52       52\n10    ARM    Screen F…      AGE      mean       Mean 75.096       75\n\n\nℹ 22 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fun, warning, error"
  },
  {
    "objectID": "slides/04-ARD/index.html#cards-ard_summary-fmt_fun-1",
    "href": "slides/04-ARD/index.html#cards-ard_summary-fmt_fun-1",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "{cards}: ard_summary() fmt_fun",
    "text": "{cards}: ard_summary() fmt_fun\n\nOverride the default formatting functions, method 2:\n\n\npharmaverseadam::adsl |&gt; \n  ard_summary(\n    variables = AGE,\n    by = ARM,                               \n  ) |&gt; \n  update_ard_fmt_fun(stat_names = \"mean\", fmt_fun = 0) |&gt; \n  apply_fmt_fun() \n\n{cards} data frame: 32 x 11\n\n\n   group1 group1_level variable stat_name stat_label   stat stat_fmt\n1     ARM      Placebo      AGE         N          N     86       86\n2     ARM      Placebo      AGE      mean       Mean 75.209       75\n3     ARM      Placebo      AGE        sd         SD   8.59      8.6\n4     ARM      Placebo      AGE    median     Median     76     76.0\n5     ARM      Placebo      AGE       p25         Q1     69     69.0\n6     ARM      Placebo      AGE       p75         Q3     82     82.0\n7     ARM      Placebo      AGE       min        Min     52     52.0\n8     ARM      Placebo      AGE       max        Max     89     89.0\n9     ARM    Screen F…      AGE         N          N     52       52\n10    ARM    Screen F…      AGE      mean       Mean 75.096       75\n\n\nℹ 22 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fun, warning, error"
  },
  {
    "objectID": "slides/04-ARD/index.html#cards-ard_tabulate",
    "href": "slides/04-ARD/index.html#cards-ard_tabulate",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "{cards}: ard_tabulate()",
    "text": "{cards}: ard_tabulate()\n\n\nincludes n, %, N by default\n\n\n\npharmaverseadam::adsl |&gt; \n  ard_tabulate(\n    by = ARM,\n    variables = AGEGR1\n  ) \n\n{cards} data frame: 24 x 11\n\n\n   group1 group1_level variable variable_level stat_name stat_label  stat\n1     ARM      Placebo   AGEGR1            &gt;64         n          n    72\n2     ARM      Placebo   AGEGR1            &gt;64         N          N    86\n3     ARM      Placebo   AGEGR1            &gt;64         p          % 0.837\n4     ARM      Placebo   AGEGR1          18-64         n          n    14\n5     ARM      Placebo   AGEGR1          18-64         N          N    86\n6     ARM      Placebo   AGEGR1          18-64         p          % 0.163\n7     ARM    Screen F…   AGEGR1            &gt;64         n          n    43\n8     ARM    Screen F…   AGEGR1            &gt;64         N          N    52\n9     ARM    Screen F…   AGEGR1            &gt;64         p          % 0.827\n10    ARM    Screen F…   AGEGR1          18-64         n          n     9\n\n\nℹ 14 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fun, warning, error\n\n\n\nAny unobserved levels of the variables will be present in the resulting ARD."
  },
  {
    "objectID": "slides/04-ARD/index.html#cards-other-summary-functions",
    "href": "slides/04-ARD/index.html#cards-other-summary-functions",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "{cards}: Other Summary Functions",
    "text": "{cards}: Other Summary Functions\n\nard_hierarchical(): similar to ard_tabulate(), but built for nested tabulations, e.g. AE terms within SOC\nard_mvsummary(): similar to ard_summary(), for multivariate summaries. The function accepts other arguments like the full and subsetted (within the by groups) data sets.\nard_missing(): tabulates rates of missingness\n\nThe results from all these functions are entirely compatible with one another, and can be stacked into a single data frame. 🥞"
  },
  {
    "objectID": "slides/04-ARD/index.html#cards-other-functions",
    "href": "slides/04-ARD/index.html#cards-other-functions",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "{cards}: Other Functions",
    "text": "{cards}: Other Functions\nIn addition to exporting functions to prepare summaries, {cards} exports many utilities for wrangling ARDs and creating new ARDs.\nConstructing: bind_ard(), tidy_as_ard(), nest_for_ard(), check_ard_structure(), and many more\nWrangling: get_ard_statistics(), replace_null_statistic(), etc."
  },
  {
    "objectID": "slides/04-ARD/index.html#cards-stacking-utilities",
    "href": "slides/04-ARD/index.html#cards-stacking-utilities",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "{cards}: Stacking utilities",
    "text": "{cards}: Stacking utilities\n\n\ndata and .by are shared by all ard_* calls\nAdditional Options .overall, .missing, .attributes, and .total_n provide even more results\nBy default, summaries of the .by variable are included\n\n\n\npharmaverseadam::adsl |&gt; \n  ard_stack( \n    .by = ARM,      \n    ard_summary(variables = AGE, statistic = ~ continuous_summary_fns(c(\"mean\",\"sd\"))), \n    ard_tabulate(variables = AGEGR1, statistic = ~ \"p\")\n  )  \n\n{cards} data frame: 28 x 11\n\n\n   group1 group1_level variable variable_level stat_name stat_label   stat\n1     ARM      Placebo      AGE                     mean       Mean 75.209\n2     ARM      Placebo      AGE                       sd         SD   8.59\n3     ARM      Placebo   AGEGR1            &gt;64         p          %  0.837\n4     ARM      Placebo   AGEGR1          18-64         p          %  0.163\n5     ARM    Screen F…      AGE                     mean       Mean 75.096\n6     ARM    Screen F…      AGE                       sd         SD    9.7\n7     ARM    Screen F…   AGEGR1            &gt;64         p          %  0.827\n8     ARM    Screen F…   AGEGR1          18-64         p          %  0.173\n9     ARM    Xanomeli…      AGE                     mean       Mean 74.381\n10    ARM    Xanomeli…      AGE                       sd         SD  7.886\n\n\nℹ 18 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fun, warning, error"
  },
  {
    "objectID": "slides/04-ARD/index.html#exercise-together",
    "href": "slides/04-ARD/index.html#exercise-together",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "Exercise 🏃‍➡️ (Together!)",
    "text": "Exercise 🏃‍➡️ (Together!)\n\nOpen exercises/04-ARD-partA.R\nCompute summaries for a demography table that includes AGE, SEX, and RACE."
  },
  {
    "objectID": "slides/04-ARD/index.html#cards-hierarchical-summary-functions",
    "href": "slides/04-ARD/index.html#cards-hierarchical-summary-functions",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "{cards}: Hierarchical Summary Functions",
    "text": "{cards}: Hierarchical Summary Functions\nFollowing hierarchical summary functions aid in nested tabulations (e.g. AE terms within SOC):\n\nard_hierarchical(): calculating nested subject-level rates\nard_hierarchical_count(): calculating nested event-level counts"
  },
  {
    "objectID": "slides/04-ARD/index.html#cards-ard_hierarchical",
    "href": "slides/04-ARD/index.html#cards-ard_hierarchical",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "{cards}: ard_hierarchical",
    "text": "{cards}: ard_hierarchical\n\nThis function specializes in calculating subject-level rates.\n\nRates computed on lowest level variables, nested within others\nid helps to check that no duplicate rows exist within the c(id, variables) columns\ndenominator dictates the denominator for the rates\n\n\n\nard_hierarchical(\n  data = adae |&gt; dplyr::slice_tail(n = 1L, by = c(USUBJID, ARM, AESOC, AEDECOD)),\n  variables = c(AESOC, AEDECOD),\n  by = TRT01A,\n  id = USUBJID,\n  denominator = ADSL\n)\n\n   group1 group1_level group2 group2_level variable variable_level stat_name\n1  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         n\n2  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         N\n3  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         p\n4  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      HIATUS H…         n\n5  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      HIATUS H…         N\n6  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      HIATUS H…         p\n7  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD       VOMITING         n\n8  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD       VOMITING         N\n9  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD       VOMITING         p\n10 TRT01A      Placebo  AESOC    GENERAL …  AEDECOD      APPLICAT…         n\n   stat_label  stat\n1           n     9\n2           N    86\n3           % 0.105\n4           n     1\n5           N    86\n6           % 0.012\n7           n     3\n8           N    86\n9           % 0.035\n10          n     3"
  },
  {
    "objectID": "slides/04-ARD/index.html#cards-ard_hierarchical_count",
    "href": "slides/04-ARD/index.html#cards-ard_hierarchical_count",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "{cards}: ard_hierarchical_count",
    "text": "{cards}: ard_hierarchical_count\n\nThis function specializes in calculating event-level frequencies.\n\n\nard_hierarchical_count(\n  data = adae,\n  variables = c(AESOC, AEDECOD),\n  by = TRT01A\n)\n\n   group1 group1_level group2 group2_level variable variable_level stat_name\n1  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         n\n2  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      HIATUS H…         n\n3  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD       VOMITING         n\n4  TRT01A      Placebo  AESOC    GENERAL …  AEDECOD      APPLICAT…         n\n5  TRT01A      Placebo  AESOC    GENERAL …  AEDECOD      APPLICAT…         n\n6  TRT01A      Placebo  AESOC    GENERAL …  AEDECOD        FATIGUE         n\n7  TRT01A      Placebo  AESOC    SKIN AND…  AEDECOD       ERYTHEMA         n\n8  TRT01A      Placebo  AESOC    SKIN AND…  AEDECOD       PRURITUS         n\n9  TRT01A      Placebo  AESOC    SKIN AND…  AEDECOD      PRURITUS…         n\n10 TRT01A    Xanomeli…  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         n\n   stat_label stat\n1           n   10\n2           n    2\n3           n    3\n4           n    3\n5           n   10\n6           n    2\n7           n   13\n8           n   11\n9           n    0\n10          n    3"
  },
  {
    "objectID": "slides/04-ARD/index.html#hierarchical-summaries-many-ways",
    "href": "slides/04-ARD/index.html#hierarchical-summaries-many-ways",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "Hierarchical summaries many ways",
    "text": "Hierarchical summaries many ways\n\nDisplays for hierarchical data typically report on each level of the hierarchy (Any AE Overall, by System Organ Class, by Preferred Term)\nThis can mean several calls to the ard_hierarchical_* functions\nFurther, subject-level summaries require a different subset of the data each time. For example, to calculate Overall rates, we need to subset to 1 record per subject in ADAE.\n\n\n\nIs there an easier way?"
  },
  {
    "objectID": "slides/04-ARD/index.html#cards-stacking-function-for-ard_hierarchical",
    "href": "slides/04-ARD/index.html#cards-stacking-function-for-ard_hierarchical",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "{cards}: Stacking function for ard_hierarchical()",
    "text": "{cards}: Stacking function for ard_hierarchical()\n\n\nard_hierarchical stacking functions simplify this multi-step process into a single step\nThe id argument is used to subset the data along the way\n\n\n\nard_stack_hierarchical(\n  data = adae,\n  variables = c(AESOC, AEDECOD),\n  by = TRT01A,\n  id = USUBJID,\n  denominator = pharmaverseadam::adsl\n)\n\n\n\n   group1 group1_level group2 group2_level variable variable_level stat_name\n1  TRT01A      Placebo   &lt;NA&gt;                 AESOC      GASTROIN…         n\n2  TRT01A      Placebo   &lt;NA&gt;                 AESOC      GASTROIN…         N\n3  TRT01A      Placebo   &lt;NA&gt;                 AESOC      GASTROIN…         p\n4  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         n\n5  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         N\n6  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         p\n7  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      HIATUS H…         n\n8  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      HIATUS H…         N\n9  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      HIATUS H…         p\n10 TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD       VOMITING         n\n11 TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD       VOMITING         N\n12 TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD       VOMITING         p\n   stat_label  stat\n1           n    12\n2           N    86\n3           %  0.14\n4           n     9\n5           N    86\n6           % 0.105\n7           n     1\n8           N    86\n9           % 0.012\n10          n     3\n11          N    86\n12          % 0.035"
  },
  {
    "objectID": "slides/04-ARD/index.html#cards-stacking-function-for-ard_hierarchical_count",
    "href": "slides/04-ARD/index.html#cards-stacking-function-for-ard_hierarchical_count",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "{cards}: Stacking function for ard_hierarchical_count()",
    "text": "{cards}: Stacking function for ard_hierarchical_count()\n\n\nBelow is the stacking function for event-level summaries, aligned with ard_hierarchical_count()\n\n\n\nard_stack_hierarchical_count(\n  data = adae,\n  variables = c(AESOC, AEDECOD),\n  by = TRT01A, \n  denominator = pharmaverseadam::adsl\n)\n\n\n\n  group1 group1_level group2 group2_level variable variable_level stat_name\n1 TRT01A      Placebo   &lt;NA&gt;                 AESOC      GASTROIN…         n\n2 TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         n\n3 TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      HIATUS H…         n\n4 TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD       VOMITING         n\n  stat_label stat\n1          n   15\n2          n   10\n3          n    2\n4          n    3"
  },
  {
    "objectID": "slides/04-ARD/index.html#exercise",
    "href": "slides/04-ARD/index.html#exercise",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "Exercise 🏃‍➡️",
    "text": "Exercise 🏃‍➡️\n\nOpen exercises/04-ARD-partB.R\nCompute the nested AE tabulations as described\n\n\n\n\n−+\n08:00"
  },
  {
    "objectID": "slides/04-ARD/index.html#cardx",
    "href": "slides/04-ARD/index.html#cardx",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "{cardx}",
    "text": "{cardx}\n\nExtension of the {cards} package, providing additional functions to create Analysis Results Datasets (ARDs)\nThe {cardx} package exports many ard_*() function for statistical methods."
  },
  {
    "objectID": "slides/04-ARD/index.html#cardx-1",
    "href": "slides/04-ARD/index.html#cardx-1",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "{cardx}",
    "text": "{cardx}\n\nExports ARD frameworks for statistical analyses from many packages\n\n\n  - {stats}\n  - {car}\n  - {effectsize}\n  - {emmeans}\n  - {geepack}\n  - {lme4}\n  - {parameters}\n  - {smd}\n  - {survey}\n  - {survival}\n\n\nThis list is growing (rather quickly) 🌱"
  },
  {
    "objectID": "slides/04-ARD/index.html#cardx-t-test-example",
    "href": "slides/04-ARD/index.html#cardx-t-test-example",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "{cardx} t-test Example",
    "text": "{cardx} t-test Example\n\n\nWe see the results like the mean difference, the confidence interval, and p-value as expected.\nAnd we also see the function’s inputs, which is incredibly useful for re-use, e.g. we know the we did not use equal variances.\n\n\n\npharmaverseadam::adsl |&gt; \n  dplyr::filter(ARM %in% c(\"Xanomeline High Dose\", \"Xanomeline Low Dose\")) |&gt;\n  cardx::ard_stats_t_test(by = ARM, variables = AGE)\n\n{cards} data frame: 14 x 9\n\n\n   group1 variable   context   stat_name stat_label      stat\n1     ARM      AGE stats_t_…    estimate  Mean Dif…    -1.286\n2     ARM      AGE stats_t_…   estimate1  Group 1 …    74.381\n3     ARM      AGE stats_t_…   estimate2  Group 2 …    75.667\n4     ARM      AGE stats_t_…   statistic  t Statis…     -1.03\n5     ARM      AGE stats_t_…     p.value    p-value     0.304\n6     ARM      AGE stats_t_…   parameter  Degrees …   165.595\n7     ARM      AGE stats_t_…    conf.low  CI Lower…     -3.75\n8     ARM      AGE stats_t_…   conf.high  CI Upper…     1.179\n9     ARM      AGE stats_t_…      method     method Welch Tw…\n10    ARM      AGE stats_t_… alternative  alternat… two.sided\n11    ARM      AGE stats_t_…          mu    H0 Mean         0\n12    ARM      AGE stats_t_…      paired  Paired t…     FALSE\n13    ARM      AGE stats_t_…   var.equal  Equal Va…     FALSE\n14    ARM      AGE stats_t_…  conf.level  CI Confi…      0.95\n\n\nℹ 3 more variables: fmt_fun, warning, error"
  },
  {
    "objectID": "slides/04-ARD/index.html#cardx-t-test-example-1",
    "href": "slides/04-ARD/index.html#cardx-t-test-example-1",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "{cardx} t-test Example",
    "text": "{cardx} t-test Example\n\nWhat to do if a method you need is not implemented?\nIt’s simple to wrap existing frameworks to customize.\nOne-sample t-test example utilizing cards::ard_continuous().\n\n\npharmaverseadam::adsl |&gt; \n  dplyr::filter(ARM %in% c(\"Xanomeline High Dose\", \"Xanomeline Low Dose\")) |&gt;\n  cards::ard_summary(\n    variables = AGE,\n    statistic = everything() ~ list(t_test = \\(x) t.test(x) |&gt; broom::tidy())\n  ) |&gt; \n  dplyr::mutate(context = \"t_test_one_sample\")\n\n{cards} data frame: 8 x 8\n\n\n  variable   context   stat_name stat_label      stat fmt_fun\n1      AGE t_test_o…    estimate   estimate    75.024       1\n2      AGE t_test_o…   statistic  statistic     120.2       1\n3      AGE t_test_o…     p.value    p.value         0       1\n4      AGE t_test_o…   parameter  parameter       167       1\n5      AGE t_test_o…    conf.low   conf.low    73.792       1\n6      AGE t_test_o…   conf.high  conf.high    76.256       1\n7      AGE t_test_o…      method     method One Samp…    &lt;fn&gt;\n8      AGE t_test_o… alternative  alternat… two.sided    &lt;fn&gt;\n\n\nℹ 2 more variables: warning, error"
  },
  {
    "objectID": "slides/04-ARD/index.html#cardx-t-test-example-2",
    "href": "slides/04-ARD/index.html#cardx-t-test-example-2",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "{cardx} t-test Example",
    "text": "{cardx} t-test Example\n\nHow to modify if we need a two-sample test, or more generally accessing other columns in the data frame.\n\n\npharmaverseadam::adsl |&gt; \n  dplyr::filter(ARM %in% c(\"Xanomeline High Dose\", \"Xanomeline Low Dose\")) |&gt;\n  cards::ard_mvsummary(\n    variables = AGE,\n    statistic = \n      ~ list(t_test = \\(x, data, ...) t.test(x ~ data$ARM) |&gt; broom::tidy())\n  ) |&gt; \n  dplyr::mutate(group1 = \"ARM\", context = \"t_test_two_sample\") |&gt; \n  cards::tidy_ard_column_order()\n\n{cards} data frame: 10 x 9\n\n\n   group1 variable   context   stat_name stat_label      stat\n1     ARM      AGE t_test_t…    estimate   estimate    -1.286\n2     ARM      AGE t_test_t…   estimate1  estimate1    74.381\n3     ARM      AGE t_test_t…   estimate2  estimate2    75.667\n4     ARM      AGE t_test_t…   statistic  statistic     -1.03\n5     ARM      AGE t_test_t…     p.value    p.value     0.304\n6     ARM      AGE t_test_t…   parameter  parameter   165.595\n7     ARM      AGE t_test_t…    conf.low   conf.low     -3.75\n8     ARM      AGE t_test_t…   conf.high  conf.high     1.179\n9     ARM      AGE t_test_t…      method     method Welch Tw…\n10    ARM      AGE t_test_t… alternative  alternat… two.sided\n\n\nℹ 3 more variables: fmt_fun, warning, error"
  },
  {
    "objectID": "slides/04-ARD/index.html#cardx-regression",
    "href": "slides/04-ARD/index.html#cardx-regression",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "{cardx} Regression",
    "text": "{cardx} Regression\n\nIncludes functionality to summarize nearly every type of regression model in the R ecosystem:\n\n\nbetareg::betareg(), biglm::bigglm(), brms::brm(), cmprsk::crr(), fixest::feglm(), fixest::femlm(), fixest::feNmlm(), fixest::feols(), gam::gam(), geepack::geeglm(), glmmTMB::glmmTMB(), glmtoolbox::glmgee(), lavaan::lavaan(), lfe::felm(), lme4::glmer.nb(), lme4::glmer(), lme4::lmer(), logitr::logitr(), MASS::glm.nb(), MASS::polr(), mgcv::gam(), mice::mira, mmrm::mmrm(), multgee::nomLORgee(), multgee::ordLORgee(), nnet::multinom(), ordinal::clm(), ordinal::clmm(), parsnip::model_fit, plm::plm(), pscl::hurdle(), pscl::zeroinfl(), rstanarm::stan_glm(), stats::aov(), stats::glm(), stats::lm(), stats::nls(), survey::svycoxph(), survey::svyglm(), survey::svyolr(), survival::cch(), survival::clogit(), survival::coxph(), survival::survreg(), svyVGAM::svy_vglm(), tidycmprsk::crr(), VGAM::vgam(), VGAM::vglm() (and more)"
  },
  {
    "objectID": "slides/04-ARD/index.html#cardx-regression-1",
    "href": "slides/04-ARD/index.html#cardx-regression-1",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "{cardx} Regression",
    "text": "{cardx} Regression\nThe cardx::ard_regression() does a lot for us in the background.\n\nIdentifies the variable from the regression terms (i.e. groups levels of the same variable)\nIdentifies reference groups from categorical covariates\nFinds variable labels from the source data frames\nKnows the total N of the model, the number of events, and can do the same for each level of categorical variables\nContextually aware of slopes, odds ratios, hazard ratios, and incidence rate ratios\nAnd much much more.\n\n\nlm(AGE ~ ARM, data = cards::ADSL) |&gt;\n  cardx::ard_regression(add_estimate_to_reference_rows = TRUE)\n\n   variable variable_level   context      stat_name stat_label      stat\n1       ARM        Placebo regressi…           term       term ARMPlace…\n2       ARM        Placebo regressi…      var_label      Label Descript…\n3       ARM        Placebo regressi…      var_class      Class character\n4       ARM        Placebo regressi…       var_type       Type categori…\n5       ARM        Placebo regressi…    var_nlevels   N Levels         3\n6       ARM        Placebo regressi…      contrasts  contrasts contr.tr…\n7       ARM        Placebo regressi… contrasts_type  Contrast… treatment\n8       ARM        Placebo regressi…  reference_row  referenc…      TRUE\n9       ARM        Placebo regressi…          label  Level La…   Placebo\n10      ARM        Placebo regressi…          n_obs     N Obs.        86"
  },
  {
    "objectID": "slides/04-ARD/index.html#when-things-go-wrong",
    "href": "slides/04-ARD/index.html#when-things-go-wrong",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "When things go wrong 😱",
    "text": "When things go wrong 😱\nWhat happens when statistics are un-calculable?\n\nard_gone_wrong &lt;- \n  cards::ADSL |&gt; \n  cards::ard_summary(\n    by = ARM,\n    variable = AGEGR1,\n    statistic = ~list(kurtosis = \\(x) e1071::kurtosis(x))\n  ) |&gt; \n  cards::replace_null_statistic()\nard_gone_wrong\n\n{cards} data frame: 3 x 10\n\n\n  group1 group1_level variable stat_name stat_label stat   warning     error\n1    ARM      Placebo   AGEGR1  kurtosis   kurtosis   NA argument… non-nume…\n2    ARM    Xanomeli…   AGEGR1  kurtosis   kurtosis   NA argument… non-nume…\n3    ARM    Xanomeli…   AGEGR1  kurtosis   kurtosis   NA argument… non-nume…\n\n\nℹ 2 more variables: context, fmt_fun\n\n\n\ncards::print_ard_conditions(ard_gone_wrong)\n\n\n\n\nWhere is the statistic? AGEGR1 is character\nEven when there are errors or warnings, we still get the ARD with the expected structure returned.\n\nTHIS IS BIG! There are MANY circumstances, when you are designing TLGs early in a study when you do not have all the data required to calculate every statistic.\nThis allows you to design everything up-front.\n\nWe can also report these warnings and errors back to users. &lt;!CLICK!&gt;"
  },
  {
    "objectID": "slides/05-tables-tfrmt/index.html#ard-first-tables-with-tfrmt",
    "href": "slides/05-tables-tfrmt/index.html#ard-first-tables-with-tfrmt",
    "title": "Tables in R using {tfrmt}",
    "section": "ARD-first Tables with {tfrmt}",
    "text": "ARD-first Tables with {tfrmt}\n\n\n\n\n\n\n\n\nMetadata-driven table formatting\nEasily create new and modify existing tables\nInput: ARD with raw, numeric values ({cards}!)\nOutput: Formatted table via {gt}"
  },
  {
    "objectID": "slides/05-tables-tfrmt/index.html#the-tfrmt-object",
    "href": "slides/05-tables-tfrmt/index.html#the-tfrmt-object",
    "title": "Tables in R using {tfrmt}",
    "section": "The {tfrmt} object",
    "text": "The {tfrmt} object\n\nPre-define the non-data components of your table\nPre-define how the data will be handled once added"
  },
  {
    "objectID": "slides/05-tables-tfrmt/index.html#use-1-study-planning-mocks",
    "href": "slides/05-tables-tfrmt/index.html#use-1-study-planning-mocks",
    "title": "Tables in R using {tfrmt}",
    "section": "Use #1: Study planning (mocks)",
    "text": "Use #1: Study planning (mocks)\n\n\nlibrary(tfrmt)\n\nprint_mock_gt(\n  tfrmt = tfrmt_demog, # tfrmt\n  .data = ard_demog_mock # sample ARD\n)|&gt; \n   gt_style_slides()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDemographics Table\n\n\n\nPlaceboN = xx\nLow DoseN = xx\nHigh DoseN = xx\n\n\n\n\nAge (y)     \n\n\n\n\n\n\n\n\n  Mean      \nxxx.x       \nxxx.x       \nxxx.x       \n\n\n  SD        \nxxx.xx      \nxxx.xx      \nxxx.xx      \n\n\n  Median    \nxxx.x       \nxxx.x       \nxxx.x       \n\n\n  Min       \nxxx.x       \nxxx.x       \nxxx.x       \n\n\n  Max       \nxxx.x       \nxxx.x       \nxxx.x       \n\n\n  &lt;65 yrs   \nxxx (xx.x %)\nxxx (xx.x %)\nxxx (xx.x %)\n\n\n  65-80 yrs \nxxx (xx.x %)\nxxx (xx.x %)\nxxx (xx.x %)\n\n\n  &gt;80 yrs   \nxxx (xx.x %)\nxxx (xx.x %)\nxxx (xx.x %)\n\n\nSex         \n\n\n\n\n\n\n\n\n  Male      \nxxx (xx.x %)\nxxx (xx.x %)\nxxx (xx.x %)\n\n\n  Female    \nxxx (xx.x %)\nxxx (xx.x %)\nxxx (xx.x %)\n\n\nBaseline BMI\n\n\n\n\n\n\n\n\n  Mean      \nxxx.x       \nxxx.x       \nxxx.x       \n\n\n  SD        \nxxx.xx      \nxxx.xx      \nxxx.xx      \n\n\n  Median    \nxxx.x       \nxxx.x       \nxxx.x       \n\n\n  Min       \nxxx.x       \nxxx.x       \nxxx.x       \n\n\n  Max       \nxxx.x       \nxxx.x       \nxxx.x       \n\n\n  &lt;25       \nxxx (xx.x %)\nxxx (xx.x %)\nxxx (xx.x %)\n\n\n  25-&lt;30    \nxxx (xx.x %)\nxxx (xx.x %)\nxxx (xx.x %)\n\n\n  &gt;=30      \nxxx (xx.x %)\nxxx (xx.x %)\nxxx (xx.x %)\n\n\n\n\n\n\n\n\nIf no data is supplied, {tfrmt} will generate some under the hood"
  },
  {
    "objectID": "slides/05-tables-tfrmt/index.html#use-2-final-analysis",
    "href": "slides/05-tables-tfrmt/index.html#use-2-final-analysis",
    "title": "Tables in R using {tfrmt}",
    "section": "Use #2: Final analysis",
    "text": "Use #2: Final analysis\n\n\nlibrary(tfrmt)\n\nprint_to_gt(\n  tfrmt = tfrmt_demog,\n  .data = ard_demog # true ARD\n)|&gt; \n   gt_style_slides()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDemographics Table\n\n\n\nPlaceboN = 86\nLow DoseN = 84\nHigh DoseN = 84\n\n\n\n\nAge (y)     \n\n\n\n\n\n\n\n\n  Mean      \n75.2       \n75.7       \n74.4       \n\n\n  SD        \n 8.59      \n 8.29      \n 7.89      \n\n\n  Median    \n76.0       \n77.5       \n76.0       \n\n\n  Min       \n52.0       \n51.0       \n56.0       \n\n\n  Max       \n89.0       \n88.0       \n88.0       \n\n\n  &lt;65 yrs   \n14 (16.3 %)\n 8 ( 9.5 %)\n11 (13.1 %)\n\n\n  65-80 yrs \n42 (48.8 %)\n47 (56.0 %)\n55 (65.5 %)\n\n\n  &gt;80 yrs   \n30 (34.9 %)\n29 (34.5 %)\n18 (21.4 %)\n\n\nSex         \n\n\n\n\n\n\n\n\n  Male      \n33 (38.4 %)\n34 (40.5 %)\n44 (52.4 %)\n\n\n  Female    \n53 (61.6 %)\n50 (59.5 %)\n40 (47.6 %)\n\n\nBaseline BMI\n\n\n\n\n\n\n\n\n  Mean      \n23.6       \n25.1       \n25.3       \n\n\n  SD        \n 3.67      \n 4.27      \n 4.16      \n\n\n  Median    \n23.4       \n24.3       \n24.8       \n\n\n  Min       \n15.1       \n17.7       \n13.7       \n\n\n  Max       \n33.3       \n40.1       \n34.5       \n\n\n  &lt;25       \n59 (68.6 %)\n47 (56.0 %)\n44 (52.4 %)\n\n\n  25-&lt;30    \n21 (24.4 %)\n27 (32.1 %)\n28 (33.3 %)\n\n\n  &gt;=30      \n 6 ( 7.0 %)\n10 (11.9 %)\n12 (14.3 %)\n\n\n\n\n\n\n\n\nFull reuse of the original {tfrmt} object = reduced rework!"
  },
  {
    "objectID": "slides/05-tables-tfrmt/index.html#use-3-repurposed-final-table",
    "href": "slides/05-tables-tfrmt/index.html#use-3-repurposed-final-table",
    "title": "Tables in R using {tfrmt}",
    "section": "Use #3: Repurposed final table",
    "text": "Use #3: Repurposed final table\n\n\nlibrary(tfrmt)\n\ntfrmt_demog |&gt; \n  layer_tfrmt(\n    tfrmt_demog_custom  \n  )|&gt; \n  print_to_gt( \n    .data = ard_demog\n  ) |&gt; \n  gt::grp_pull(1)|&gt; \n   gt_style_slides()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDemographics Table\n\n\nSafety Population\n\n\n\nHigh Dose(N = 84)\nLow Dose(N = 84)\nPlacebo(N = 86)\n\n\n\n\nAge (y)    \n\n\n\n\n\n\n\n\n  Mean     \n74.4       \n75.7       \n75.2       \n\n\n  SD       \n 7.89      \n 8.29      \n 8.59      \n\n\n  Median   \n76.0       \n77.5       \n76.0       \n\n\n  Min      \n56.0       \n51.0       \n52.0       \n\n\n  Max      \n88.0       \n88.0       \n89.0       \n\n\n           \n           \n           \n           \n\n\n  &lt;65 yrs  \n11 (13.1 %)\n 8 ( 9.5 %)\n14 (16.3 %)\n\n\n  65-80 yrs\n55 (65.5 %)\n47 (56.0 %)\n42 (48.8 %)\n\n\n  &gt;80 yrs  \n18 (21.4 %)\n29 (34.5 %)\n30 (34.9 %)\n\n\n           \n           \n           \n           \n\n\nSex        \n\n\n\n\n\n\n\n\n  Male     \n44 (52.4 %)\n34 (40.5 %)\n33 (38.4 %)\n\n\n  Female   \n40 (47.6 %)\n50 (59.5 %)\n53 (61.6 %)\n\n\n           \n           \n           \n           \n\n\n\nData collected at Screening Visit\n\n\n\n\n\n\n\n\n\nLayering allows for custom tweaks while preserving the original metadata"
  },
  {
    "objectID": "slides/05-tables-tfrmt/index.html#templates-the-possibilities",
    "href": "slides/05-tables-tfrmt/index.html#templates-the-possibilities",
    "title": "Tables in R using {tfrmt}",
    "section": "Templates: the possibilities",
    "text": "Templates: the possibilities\n\nOrganization standards can be capture as templates\n\n\n# create a template as a function\ntfrmt_demog_org &lt;- function(tfrmt_obj){\n  \n  tfrmt_demog_org &lt;- tfrmt( \n    # define standard formatting for org\n  )\n  \n  layer_tfrmt(x = tfrmt_obj, y = tfrmt_demog_ta)\n}\n\n# Make a standard table\ntfrmt_demog_org() |&gt;  \n  print_to_gt(\n    .data = ard_demog\n  )"
  },
  {
    "objectID": "slides/05-tables-tfrmt/index.html#templates-the-possibilities-1",
    "href": "slides/05-tables-tfrmt/index.html#templates-the-possibilities-1",
    "title": "Tables in R using {tfrmt}",
    "section": "Templates: the possibilities",
    "text": "Templates: the possibilities\n\nOrganization standards can be capture as templates\nWith layering, teams can customize only the bits that need changing\n\n\n# create a template as a function\ntfrmt_demog_ta &lt;- function(tfrmt_obj){\n  \n  tfrmt_demog_ta &lt;- tfrmt( \n    # define the formatting specific to the therapeutic area\n  )\n  \n  layer_tfrmt(x = tfrmt_obj, y = tfrmt_demog_ta)\n}\n\n# Layering multiple templates\ntfrmt_demog_org() |&gt; \n  tfrmt_demog_ta() |&gt;  \n  print_to_gt(\n    .data = ard_demog\n  )"
  },
  {
    "objectID": "slides/05-tables-tfrmt/index.html#templates-the-possibilities-2",
    "href": "slides/05-tables-tfrmt/index.html#templates-the-possibilities-2",
    "title": "Tables in R using {tfrmt}",
    "section": "Templates: the possibilities",
    "text": "Templates: the possibilities\n\nOrganization standards can be capture as templates\nWith layering, teams can customize only the bits that need changing\n\n\n# create a template as a function\ntfrmt_demog_study &lt;- function(tfrmt_obj){\n  \n  tfrmt_demog_study &lt;- tfrmt( \n    # define the formatting specific to the study\n  )\n  \n  layer_tfrmt(x = tfrmt_obj, y = tfrmt_demog_study)\n}\n\n# Layering multiple templates\ntfrmt_demog_org() |&gt; \n  tfrmt_demog_ta() |&gt;  \n  tfrmt_demog_study() |&gt; \n  print_to_gt(\n    .data = ard_demog\n  )"
  },
  {
    "objectID": "slides/05-tables-tfrmt/index.html#save-metadata-for-reuse",
    "href": "slides/05-tables-tfrmt/index.html#save-metadata-for-reuse",
    "title": "Tables in R using {tfrmt}",
    "section": "Save metadata for reuse",
    "text": "Save metadata for reuse\n\n\nlibrary(tfrmt)\n\ntfrmt_demog |&gt; \n  tfrmt_to_json()\n\n\n{\n  \"group\": [\"rowlbl1\", \"grp\"],\n  \"label\": [\"rowlbl2\"],\n  \"param\": [\"param\"],\n  \"value\": [\"value\"],\n  \"column\": [\"column\"],\n  \"title\": [\"Demographics Table\"],\n  \"body_plan\": [\n    {\n      \"group_val\": [\".default\"],\n      \"label_val\": [\".default\"],\n      \"param_val\": [\"n\", \"pct\"],\n      \"frmt_combine\": {\n        \"expression\": [\"{n} {pct}\"],\n        \"frmt_ls\": {\n          \"n\": {\n            \"frmt\": {\n              \"expression\": [\"xxx\"],\n              \"missing\": {},\n              \"scientific\": {},\n              \"transform\": {}\n            }\n          },\n          \"pct\": {\n            \"frmt_when\": {\n              \"frmt_ls\": {\n                \"==100\": [\"\"],\n                \"==0\": [\"\"],\n                \"TRUE\": {\n                  \"frmt\": {\n                    \"expression\": [\"(xx.x %)\"],\n                    \"missing\": {},\n                    \"scientific\": {},\n                    \"transform\": {}\n                  }\n                }\n              },\n              \"missing\": {}\n            }\n          }\n        },\n        \"missing\": {}\n      }\n    },\n    {\n      \"group_val\": [\".default\"],\n      \"label_val\": [\"n\"],\n      \"param_val\": [\".default\"],\n      \"frmt\": {\n        \"expression\": [\"xxx\"],\n        \"missing\": {},\n        \"scientific\": {},\n        \"transform\": {}\n      }\n    },\n    {\n      \"group_val\": [\".default\"],\n      \"label_val\": [\"Mean\", \"Median\", \"Min\", \"Max\"],\n      \"param_val\": [\".default\"],\n      \"frmt\": {\n        \"expression\": [\"xxx.x\"],\n        \"missing\": {},\n        \"scientific\": {},\n        \"transform\": {}\n      }\n    },\n    {\n      \"group_val\": [\".default\"],\n      \"label_val\": [\"SD\"],\n      \"param_val\": [\".default\"],\n      \"frmt\": {\n        \"expression\": [\"xxx.xx\"],\n        \"missing\": {},\n        \"scientific\": {},\n        \"transform\": {}\n      }\n    }\n  ],\n  \"col_style_plan\": [\n    {\n      \"cols\": [\n        [\"Placebo\"],\n        [\"Low Dose\"],\n        [\"High Dose\"]\n      ],\n      \"align\": [\".\", \",\", \" \"],\n      \"type\": [\"char\"],\n      \"width\": {}\n    },\n    {\n      \"cols\": [\n        [\"rowlbl1\"],\n        [\"rowlbl2\"]\n      ],\n      \"align\": [\"left\"],\n      \"type\": [\"char\"],\n      \"width\": {}\n    }\n  ],\n  \"col_plan\": {\n    \"col_plan\": {\n      \"dots\": [\n        [\"-grp\"],\n        [\"-starts_with(\\\"ord\\\")\"]\n      ],\n      \".drop\": [false]\n    }\n  },\n  \"sorting_cols\": [\"ord1\", \"ord2\"],\n  \"big_n\": {\n    \"param_val\": [\"bigN\"],\n    \"n_frmt\": {\n      \"expression\": [\"&lt;br&gt;N = xx\"],\n      \"missing\": {},\n      \"scientific\": {},\n      \"transform\": {}\n    },\n    \"by_page\": [false]\n  }\n} \n\n\n\nCreate a language-agnostic JSON file\nLoad JSON back into R and recreate the table with json_to_tfrmt()"
  },
  {
    "objectID": "slides/05-tables-tfrmt/index.html#saving-display",
    "href": "slides/05-tables-tfrmt/index.html#saving-display",
    "title": "Tables in R using {tfrmt}",
    "section": "Saving display",
    "text": "Saving display\n\ntfrmt::print_to_gt() creates a {gt} object under the hood\nYou can export the table to a variety of formats using gt::gt_save()"
  },
  {
    "objectID": "slides/05-tables-tfrmt/index.html#creating-a-tfrmt-table-step-by-step",
    "href": "slides/05-tables-tfrmt/index.html#creating-a-tfrmt-table-step-by-step",
    "title": "Tables in R using {tfrmt}",
    "section": "Creating a {tfrmt} table step-by-step",
    "text": "Creating a {tfrmt} table step-by-step\n\n\nhead(ard_demog)\n\n# A tibble: 6 × 7\n  TRT01A stat_variable stat_name    stat label     ord1  ord2\n  &lt;chr&gt;  &lt;chr&gt;         &lt;chr&gt;       &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt; &lt;dbl&gt;\n1 Active Age (years)   median     77     Median       1    NA\n2 Active Age (years)   p25        71     [Q1, Q3]     1    NA\n3 Active Age (years)   p75        81     [Q1, Q3]     1    NA\n4 Active Age Group     n         149     &gt;64          2     2\n5 Active Age Group     p           0.887 &gt;64          2     2\n6 Active Age Group     n          19     18-64        2     1\n\n\n\n\n\n\ntfrmt_demog &lt;- tfrmt(\n  group = stat_variable, \n  label = label, \n  column = TRT01A,\n  param = stat_name,\n  value = stat, \n  sorting_cols = c(ord1, ord2) \n)"
  },
  {
    "objectID": "slides/05-tables-tfrmt/index.html#ensure-placement-of-all-values-main",
    "href": "slides/05-tables-tfrmt/index.html#ensure-placement-of-all-values-main",
    "title": "Tables in R using {tfrmt}",
    "section": "Ensure placement of all values (Main)",
    "text": "Ensure placement of all values (Main)\n\n\ntfrmt_demog &lt;- tfrmt(\n  group = stat_variable, \n  label = label, \n  column = TRT01A,\n  param = stat_name,\n  value = stat, \n  sorting_cols = c(ord1, ord2) \n)\n\nprint_to_gt(\n  tfrmt = tfrmt_demog,\n  .data = ard_demog\n) |&gt; \n   gt_style_slides()\n\n\n\n\n\n\n\n\n\nord1\nord2\nActive\nPlacebo\nOverall\n\n\n\n\nMedian\n1\nNA\n77\n76\n77\n\n\n[Q1, Q3]\n1\nNA\n71, 81\n69, 82\n70, 81\n\n\n18-64\n2\n1\n19, 0.113095238095238\n14, 0.162790697674419\n33, 0.12992125984252\n\n\n&gt;64\n2\n2\n149, 0.886904761904762\n72, 0.837209302325581\n221, 0.87007874015748\n\n\nF\n3\nNA\n90, 0.535714285714286\n53, 0.616279069767442\n143, 0.562992125984252\n\n\nM\n3\nNA\n78, 0.464285714285714\n33, 0.383720930232558\n111, 0.437007874015748\n\n\nNA\nNA\nNA\n168\n86\n\n\n\nN\nNA\nNA\n\n\n254"
  },
  {
    "objectID": "slides/05-tables-tfrmt/index.html#ensure-placement-of-all-values-big-n",
    "href": "slides/05-tables-tfrmt/index.html#ensure-placement-of-all-values-big-n",
    "title": "Tables in R using {tfrmt}",
    "section": "Ensure placement of all values (Big N)",
    "text": "Ensure placement of all values (Big N)\n\n\ntfrmt_demog &lt;- tfrmt_demog |&gt;\n  tfrmt(\n    big_n = big_n_structure(\n      param_val = \"bigN\",\n      n_frmt = frmt(\"&lt;br&gt;N = xx\")\n      )\n  )\n\nprint_to_gt(\n  tfrmt = tfrmt_demog, \n  .data = ard_demog\n  )|&gt; \n   gt_style_slides()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nord1\nord2\nActiveN = 168\nPlaceboN = 86\nOverallN = 254\n\n\n\n\nAge (years)\n\n\n\n\n\n\n\n\n\n\n\n\n  Median\n1\nNA\n77\n76\n77\n\n\n  [Q1, Q3]\n1\nNA\n71, 81\n69, 82\n70, 81\n\n\nAge Group\n\n\n\n\n\n\n\n\n\n\n\n\n  18-64\n2\n1\n19, 0.113095238095238\n14, 0.162790697674419\n33, 0.12992125984252\n\n\n  &gt;64\n2\n2\n149, 0.886904761904762\n72, 0.837209302325581\n221, 0.87007874015748\n\n\nSex\n\n\n\n\n\n\n\n\n\n\n\n\n  F\n3\nNA\n90, 0.535714285714286\n53, 0.616279069767442\n143, 0.562992125984252\n\n\n  M\n3\nNA\n78, 0.464285714285714\n33, 0.383720930232558\n111, 0.437007874015748"
  },
  {
    "objectID": "slides/05-tables-tfrmt/index.html#select-and-reorder-columns",
    "href": "slides/05-tables-tfrmt/index.html#select-and-reorder-columns",
    "title": "Tables in R using {tfrmt}",
    "section": "Select and reorder columns",
    "text": "Select and reorder columns\n\n\ntfrmt_demog &lt;- tfrmt_demog |&gt;\n  tfrmt(\n    col_plan = col_plan(\n      Placebo,\n      Active,\n      - starts_with(\"ord\")\n    )\n  )\n\nprint_to_gt(\n  tfrmt = tfrmt_demog, \n  .data = ard_demog\n)|&gt; \n   gt_style_slides()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPlaceboN = 86\nActiveN = 168\nOverallN = 254\n\n\n\n\nAge (years)\n\n\n\n\n\n\n\n\n  Median\n76\n77\n77\n\n\n  [Q1, Q3]\n69, 82\n71, 81\n70, 81\n\n\nAge Group\n\n\n\n\n\n\n\n\n  18-64\n14, 0.162790697674419\n19, 0.113095238095238\n33, 0.12992125984252\n\n\n  &gt;64\n72, 0.837209302325581\n149, 0.886904761904762\n221, 0.87007874015748\n\n\nSex\n\n\n\n\n\n\n\n\n  F\n53, 0.616279069767442\n90, 0.535714285714286\n143, 0.562992125984252\n\n\n  M\n33, 0.383720930232558\n78, 0.464285714285714\n111, 0.437007874015748"
  },
  {
    "objectID": "slides/05-tables-tfrmt/index.html#format-the-data-values---basic",
    "href": "slides/05-tables-tfrmt/index.html#format-the-data-values---basic",
    "title": "Tables in R using {tfrmt}",
    "section": "Format the data values - Basic",
    "text": "Format the data values - Basic\n\n\ntfrmt_demog &lt;- tfrmt_demog |&gt;\n  tfrmt(\n    body_plan = body_plan(\n      frmt_structure(\n        group_val = \".default\", \n        label_val = \".default\", \n        frmt(\"x.xx\"))\n    )\n  )\n\nprint_to_gt(\n  tfrmt = tfrmt_demog, \n  .data = ard_demog\n) |&gt; \n   gt_style_slides()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPlaceboN = 86\nActiveN = 168\nOverallN = 254\n\n\n\n\nAge (years)\n\n\n\n\n\n\n\n\n  Median\n76.00\n77.00\n77.00\n\n\n  [Q1, Q3]\n69.00, 82.00\n71.00, 81.00\n70.00, 81.00\n\n\nAge Group\n\n\n\n\n\n\n\n\n  18-64\n14.00, 0.16\n19.00, 0.11\n33.00, 0.13\n\n\n  &gt;64\n72.00, 0.84\n149.00, 0.89\n221.00, 0.87\n\n\nSex\n\n\n\n\n\n\n\n\n  F\n53.00, 0.62\n90.00, 0.54\n143.00, 0.56\n\n\n  M\n33.00, 0.38\n78.00, 0.46\n111.00, 0.44"
  },
  {
    "objectID": "slides/05-tables-tfrmt/index.html#format-the-data-values---advanced",
    "href": "slides/05-tables-tfrmt/index.html#format-the-data-values---advanced",
    "title": "Tables in R using {tfrmt}",
    "section": "Format the data values - Advanced",
    "text": "Format the data values - Advanced\n\n\ntfrmt_demog &lt;- tfrmt_demog |&gt;\n  tfrmt(\n    body_plan = body_plan(\n      frmt_structure(\n        group_val = \".default\", \n        label_val = \".default\",\n        frmt_combine(\"{n} ({p}%)\",\n                     n = frmt(\"xx\"),\n                     p = frmt(\"xx.x\", transform = ~ . *100)\n                     \n        )\n      )\n    )\n  )\n\nprint_to_gt(\n  tfrmt = tfrmt_demog, \n  .data = ard_demog\n  ) |&gt; \n   gt_style_slides()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPlaceboN = 86\nActiveN = 168\nOverallN = 254\n\n\n\n\nAge (years)\n\n\n\n\n\n\n\n\n  Median\n76.00\n77.00\n77.00\n\n\n  [Q1, Q3]\n69.00, 82.00\n71.00, 81.00\n70.00, 81.00\n\n\nAge Group\n\n\n\n\n\n\n\n\n  18-64\n14 (16.3%)\n19 (11.3%)\n33 (13.0%)\n\n\n  &gt;64\n72 (83.7%)\n149 (88.7%)\n221 (87.0%)\n\n\nSex\n\n\n\n\n\n\n\n\n  F\n53 (61.6%)\n90 (53.6%)\n143 (56.3%)\n\n\n  M\n33 (38.4%)\n78 (46.4%)\n111 (43.7%)"
  },
  {
    "objectID": "slides/05-tables-tfrmt/index.html#format-the-data-values---advanced-1",
    "href": "slides/05-tables-tfrmt/index.html#format-the-data-values---advanced-1",
    "title": "Tables in R using {tfrmt}",
    "section": "Format the data values - Advanced",
    "text": "Format the data values - Advanced\n\n\ntfrmt_demog &lt;- tfrmt_demog |&gt;\n  tfrmt(\n    body_plan = body_plan(\n      \n      frmt_structure(\n        group_val = \".default\", \n        label_val = \"Median\",\n        frmt(\"xx.x\")\n      ),\n      \n      frmt_structure(\n        group_val = \".default\",\n        label_val = \".default\",\n        frmt_combine(\n          expression = \"[{p25}, {p75}]\",                \n          p25 = frmt(\"xx.x\"),                     \n          p75 = frmt(\"xx.x\")                      \n        )\n      )\n      \n    )\n  )\n  \nprint_to_gt(\n  tfrmt = tfrmt_demog, \n  .data = ard_demog\n  ) |&gt; \n   gt_style_slides()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPlaceboN = 86\nActiveN = 168\nOverallN = 254\n\n\n\n\nAge (years)\n\n\n\n\n\n\n\n\n  Median\n76.0\n77.0\n77.0\n\n\n  [Q1, Q3]\n[69.0, 82.0]\n[71.0, 81.0]\n[70.0, 81.0]\n\n\nAge Group\n\n\n\n\n\n\n\n\n  18-64\n14 (16.3%)\n19 (11.3%)\n33 (13.0%)\n\n\n  &gt;64\n72 (83.7%)\n149 (88.7%)\n221 (87.0%)\n\n\nSex\n\n\n\n\n\n\n\n\n  F\n53 (61.6%)\n90 (53.6%)\n143 (56.3%)\n\n\n  M\n33 (38.4%)\n78 (46.4%)\n111 (43.7%)"
  },
  {
    "objectID": "slides/05-tables-tfrmt/index.html#align-the-columns",
    "href": "slides/05-tables-tfrmt/index.html#align-the-columns",
    "title": "Tables in R using {tfrmt}",
    "section": "Align the columns",
    "text": "Align the columns\n\n\ntfrmt_demog &lt;- tfrmt_demog |&gt;\n  tfrmt(\n    col_style_plan = col_style_plan(\n      col_style_structure(\n        col = c(\"Placebo\", \n                \"Active\"),\n        align = \" \"\n      )\n    )\n  )\n  \nprint_to_gt(\n  tfrmt = tfrmt_demog, \n  .data = ard_demog\n  ) |&gt; \n   gt_style_slides()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPlaceboN = 86\nActiveN = 168\nOverallN = 254\n\n\n\n\nAge (years)\n\n\n\n\n\n\n\n\n  Median\n  76.0        \n  77.0        \n77.0\n\n\n  [Q1, Q3]\n[69.0, 82.0]  \n[71.0, 81.0]  \n[70.0, 81.0]\n\n\nAge Group\n\n\n\n\n\n\n\n\n  18-64\n    14 (16.3%)\n    19 (11.3%)\n33 (13.0%)\n\n\n  &gt;64\n    72 (83.7%)\n   149 (88.7%)\n221 (87.0%)\n\n\nSex\n\n\n\n\n\n\n\n\n  F\n    53 (61.6%)\n    90 (53.6%)\n143 (56.3%)\n\n\n  M\n    33 (38.4%)\n    78 (46.4%)\n111 (43.7%)"
  },
  {
    "objectID": "slides/05-tables-tfrmt/index.html#add-footnotes",
    "href": "slides/05-tables-tfrmt/index.html#add-footnotes",
    "title": "Tables in R using {tfrmt}",
    "section": "Add footnotes",
    "text": "Add footnotes\n\n\ntfrmt_demog &lt;- tfrmt_demog |&gt;\n  tfrmt(\n    footnote_plan = footnote_plan(\n      footnote_structure(\n        \"Pooled High and Low Dose\",\n        column_val = \"Active\"\n      )\n    )\n  )\n  \nprint_to_gt(\n  tfrmt = tfrmt_demog, \n  .data = ard_demog\n  ) |&gt; \n   gt_style_slides()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPlaceboN = 86\nActiveN = 1681\nOverallN = 254\n\n\n\n\nAge (years)\n\n\n\n\n\n\n\n\n  Median\n  76.0        \n  77.0        \n77.0\n\n\n  [Q1, Q3]\n[69.0, 82.0]  \n[71.0, 81.0]  \n[70.0, 81.0]\n\n\nAge Group\n\n\n\n\n\n\n\n\n  18-64\n    14 (16.3%)\n    19 (11.3%)\n33 (13.0%)\n\n\n  &gt;64\n    72 (83.7%)\n   149 (88.7%)\n221 (87.0%)\n\n\nSex\n\n\n\n\n\n\n\n\n  F\n    53 (61.6%)\n    90 (53.6%)\n143 (56.3%)\n\n\n  M\n    33 (38.4%)\n    78 (46.4%)\n111 (43.7%)\n\n\n\n1 Pooled High and Low Dose"
  },
  {
    "objectID": "slides/05-tables-tfrmt/index.html#add-titles",
    "href": "slides/05-tables-tfrmt/index.html#add-titles",
    "title": "Tables in R using {tfrmt}",
    "section": "Add titles",
    "text": "Add titles\n\n\ntfrmt_demog &lt;- tfrmt_demog |&gt;\n  tfrmt(\n    title = \"Demographic Table\",\n    subtitle = \"Safety Population\"\n  )\n  \nprint_to_gt(\n  tfrmt = tfrmt_demog, \n  .data = ard_demog\n  ) |&gt; \n   gt_style_slides()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDemographic Table\n\n\nSafety Population\n\n\n\nPlaceboN = 86\nActiveN = 1681\nOverallN = 254\n\n\n\n\nAge (years)\n\n\n\n\n\n\n\n\n  Median\n  76.0        \n  77.0        \n77.0\n\n\n  [Q1, Q3]\n[69.0, 82.0]  \n[71.0, 81.0]  \n[70.0, 81.0]\n\n\nAge Group\n\n\n\n\n\n\n\n\n  18-64\n    14 (16.3%)\n    19 (11.3%)\n33 (13.0%)\n\n\n  &gt;64\n    72 (83.7%)\n   149 (88.7%)\n221 (87.0%)\n\n\nSex\n\n\n\n\n\n\n\n\n  F\n    53 (61.6%)\n    90 (53.6%)\n143 (56.3%)\n\n\n  M\n    33 (38.4%)\n    78 (46.4%)\n111 (43.7%)\n\n\n\n1 Pooled High and Low Dose"
  },
  {
    "objectID": "slides/05-tables-tfrmt/index.html#other-features-include",
    "href": "slides/05-tables-tfrmt/index.html#other-features-include",
    "title": "Tables in R using {tfrmt}",
    "section": "Other features include:",
    "text": "Other features include:\n\nTransform values in the formatting\nRow group formatting\nPagination\nMulti-positional column alignment\nTemplating"
  },
  {
    "objectID": "slides/05-tables-tfrmt/index.html#cards-to-tfrmt---how-did-we-get-here",
    "href": "slides/05-tables-tfrmt/index.html#cards-to-tfrmt---how-did-we-get-here",
    "title": "Tables in R using {tfrmt}",
    "section": "cards to tfrmt - How did we get here?",
    "text": "cards to tfrmt - How did we get here?\n{tfrmt} includes several helper functions to transform native {cards} output to display-ready data. Functionality includes:\n\nCoalesce/rename the group and variable names/levels\nUnlist the list-columns\nPrepare row group and label columns\nFill missing variable values in a hierarchy\nPrepare big N rows for headers\n\nTo explore, let’s start with the result of our cards::ard_stack() call.\n\nlibrary(cards)\n \nard_demog &lt;- cards::ard_stack(\n  data = adsl,\n  .by = TRT01A,\n  cards::ard_continuous( variables = AGE,\n                         statistic = ~ cards::continuous_summary_fns(c(\"median\", \"p25\", \"p75\"))),\n  cards::ard_categorical(variables = c(AGEGR1, SEX), statistic = ~ c(\"n\",\"p\")),\n  .overall = TRUE,\n  .total_n = TRUE\n)"
  },
  {
    "objectID": "slides/05-tables-tfrmt/index.html#cards-to-tfrmt",
    "href": "slides/05-tables-tfrmt/index.html#cards-to-tfrmt",
    "title": "Tables in R using {tfrmt}",
    "section": "cards to tfrmt",
    "text": "cards to tfrmt\nFirst, let’s “shuffle” the results into a tidy data frame:\n\nard_demog_display &lt;- ard_demog |&gt; \n  tfrmt::shuffle_card(fill_overall = \"Overall\") \n\nard_demog_display\n\n# A tibble: 40 × 9\n   TRT01A AGE    AGEGR1 SEX   context stat_variable stat_name stat_label    stat\n   &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;   &lt;chr&gt;         &lt;chr&gt;     &lt;chr&gt;        &lt;dbl&gt;\n 1 Active Overa… &lt;NA&gt;   &lt;NA&gt;  contin… AGE           median    Median      77    \n 2 Active Overa… &lt;NA&gt;   &lt;NA&gt;  contin… AGE           p25       Q1          71    \n 3 Active Overa… &lt;NA&gt;   &lt;NA&gt;  contin… AGE           p75       Q3          81    \n 4 Active &lt;NA&gt;   &gt;64    &lt;NA&gt;  catego… AGEGR1        n         n          149    \n 5 Active &lt;NA&gt;   &gt;64    &lt;NA&gt;  catego… AGEGR1        p         %            0.887\n 6 Active &lt;NA&gt;   18-64  &lt;NA&gt;  catego… AGEGR1        n         n           19    \n 7 Active &lt;NA&gt;   18-64  &lt;NA&gt;  catego… AGEGR1        p         %            0.113\n 8 Active &lt;NA&gt;   &lt;NA&gt;   F     catego… SEX           n         n           90    \n 9 Active &lt;NA&gt;   &lt;NA&gt;   F     catego… SEX           p         %            0.536\n10 Active &lt;NA&gt;   &lt;NA&gt;   M     catego… SEX           n         n           78    \n# ℹ 30 more rows"
  },
  {
    "objectID": "slides/05-tables-tfrmt/index.html#cards-to-tfrmt-1",
    "href": "slides/05-tables-tfrmt/index.html#cards-to-tfrmt-1",
    "title": "Tables in R using {tfrmt}",
    "section": "cards to tfrmt",
    "text": "cards to tfrmt\nSince the variable values are now spread wide, we want to collapse them into a single column named variable_level.\n\nard_demog_display &lt;- ard_demog |&gt; \n  tfrmt::shuffle_card(fill_overall = \"Overall\") |&gt; \n  tfrmt::prep_combine_vars(c(\"AGE\",\"AGEGR1\",\"SEX\"))\n\nard_demog_display\n\n# A tibble: 40 × 7\n   TRT01A variable_level context     stat_variable stat_name stat_label    stat\n   &lt;chr&gt;  &lt;chr&gt;          &lt;chr&gt;       &lt;chr&gt;         &lt;chr&gt;     &lt;chr&gt;        &lt;dbl&gt;\n 1 Active Overall        continuous  AGE           median    Median      77    \n 2 Active Overall        continuous  AGE           p25       Q1          71    \n 3 Active Overall        continuous  AGE           p75       Q3          81    \n 4 Active &gt;64            categorical AGEGR1        n         n          149    \n 5 Active &gt;64            categorical AGEGR1        p         %            0.887\n 6 Active 18-64          categorical AGEGR1        n         n           19    \n 7 Active 18-64          categorical AGEGR1        p         %            0.113\n 8 Active F              categorical SEX           n         n           90    \n 9 Active F              categorical SEX           p         %            0.536\n10 Active M              categorical SEX           n         n           78    \n# ℹ 30 more rows"
  },
  {
    "objectID": "slides/05-tables-tfrmt/index.html#cards-to-tfrmt-2",
    "href": "slides/05-tables-tfrmt/index.html#cards-to-tfrmt-2",
    "title": "Tables in R using {tfrmt}",
    "section": "cards to tfrmt",
    "text": "cards to tfrmt\nNext, we create a row label (“label” column) for the table that is either the category (i.e. variable_level) for categorical variables, or the stat name for continuous variables.\n\nard_demog_display &lt;- ard_demog |&gt; \n  tfrmt::shuffle_card(fill_overall = \"Overall\") |&gt; \n  tfrmt::prep_combine_vars(c(\"AGE\",\"AGEGR1\",\"SEX\")) |&gt; \n  tfrmt::prep_label()\n\nard_demog_display\n\n# A tibble: 40 × 8\n   TRT01A variable_level context     stat_variable stat_name stat_label    stat\n   &lt;chr&gt;  &lt;chr&gt;          &lt;chr&gt;       &lt;chr&gt;         &lt;chr&gt;     &lt;chr&gt;        &lt;dbl&gt;\n 1 Active Overall        continuous  AGE           median    Median      77    \n 2 Active Overall        continuous  AGE           p25       Q1          71    \n 3 Active Overall        continuous  AGE           p75       Q3          81    \n 4 Active &gt;64            categorical AGEGR1        n         n          149    \n 5 Active &gt;64            categorical AGEGR1        p         %            0.887\n 6 Active 18-64          categorical AGEGR1        n         n           19    \n 7 Active 18-64          categorical AGEGR1        p         %            0.113\n 8 Active F              categorical SEX           n         n           90    \n 9 Active F              categorical SEX           p         %            0.536\n10 Active M              categorical SEX           n         n           78    \n# ℹ 30 more rows\n# ℹ 1 more variable: label &lt;chr&gt;"
  },
  {
    "objectID": "slides/05-tables-tfrmt/index.html#cards-to-tfrmt-3",
    "href": "slides/05-tables-tfrmt/index.html#cards-to-tfrmt-3",
    "title": "Tables in R using {tfrmt}",
    "section": "cards to tfrmt",
    "text": "cards to tfrmt\nTake a look at our “big N” (i.e. population counts) rows:\n\nard_demog_display |&gt; \n  dplyr::filter(stat_variable %in% c(\"TRT01A\", \"..ard_total_n..\"))\n\n# A tibble: 7 × 8\n  TRT01A variable_level context stat_variable stat_name stat_label    stat label\n  &lt;chr&gt;  &lt;chr&gt;          &lt;chr&gt;   &lt;chr&gt;         &lt;chr&gt;     &lt;chr&gt;        &lt;dbl&gt; &lt;chr&gt;\n1 Active &lt;NA&gt;           tabula… TRT01A        n         n          168     &lt;NA&gt; \n2 Active &lt;NA&gt;           tabula… TRT01A        N         N          254     &lt;NA&gt; \n3 Active &lt;NA&gt;           tabula… TRT01A        p         %            0.661 &lt;NA&gt; \n4 Place… &lt;NA&gt;           tabula… TRT01A        n         n           86     &lt;NA&gt; \n5 Place… &lt;NA&gt;           tabula… TRT01A        N         N          254     &lt;NA&gt; \n6 Place… &lt;NA&gt;           tabula… TRT01A        p         %            0.339 &lt;NA&gt; \n7 Overa… &lt;NA&gt;           total_n ..ard_total_… N         N          254     N    \n\n\nFirst, we only need the counts themselves, not denominators or percentages. Second, we need to give these a unique stat name to distinguish them for the big_n_structure in {tfrmt}. We can use the prep_big_n() function for this:\n\nard_demog_display &lt;- ard_demog |&gt; \n  tfrmt::shuffle_card(fill_overall = \"Overall\") |&gt; \n  tfrmt::prep_combine_vars(c(\"AGE\",\"AGEGR1\",\"SEX\")) |&gt; \n  tfrmt::prep_label() |&gt; \n  tfrmt::prep_big_n(vars = \"TRT01A\")\n\nard_demog_display |&gt; \n  dplyr::filter(stat_variable %in% c(\"TRT01A\", \"..ard_total_n..\"))\n\n# A tibble: 3 × 8\n  TRT01A  variable_level context  stat_variable stat_name stat_label  stat label\n  &lt;chr&gt;   &lt;chr&gt;          &lt;chr&gt;    &lt;chr&gt;         &lt;chr&gt;     &lt;chr&gt;      &lt;dbl&gt; &lt;chr&gt;\n1 Active  &lt;NA&gt;           tabulate TRT01A        bigN      n            168 &lt;NA&gt; \n2 Placebo &lt;NA&gt;           tabulate TRT01A        bigN      n             86 &lt;NA&gt; \n3 Overall &lt;NA&gt;           total_n  ..ard_total_… bigN      N            254 N"
  },
  {
    "objectID": "slides/05-tables-tfrmt/index.html#cards-to-tfrmt-4",
    "href": "slides/05-tables-tfrmt/index.html#cards-to-tfrmt-4",
    "title": "Tables in R using {tfrmt}",
    "section": "cards to tfrmt",
    "text": "cards to tfrmt\nFinally, we can do any other necessary manipulations like relabeling or adding order variables before passing to tfrmt().\n\n\nard_demog_display &lt;- ard_demog_display |&gt; \n  dplyr::mutate(label = dplyr::case_when(\n    stat_name %in% c(\"p25\",\"p75\") ~ \"[Q1, Q3]\", # put these on 1 line\n    TRUE ~ label\n  ),\n  # relabel\n  stat_variable = dplyr::case_match(\n    stat_variable,\n    \"AGE\" ~ \"Age (years)\",\n    \"AGEGR1\" ~ \"Age Group\",\n    \"SEX\" ~ \"Sex\"\n  ) ) |&gt; \n  dplyr::select(-c(context, stat_label, variable_level)) |&gt;  # drop unneeded vars\n  # make order vars\n  dplyr::mutate(ord1 = as.numeric(\n    factor(stat_variable, \n           levels = c(\"Age (years)\", \"Age Group\", \"Sex\"))),\n    ord2 = as.numeric(\n      factor(label, levels = c(\"18-64\",\"&gt;64\"))))\n\nprint_to_gt(tfrmt_demog, ard_demog_display)|&gt; \n  gt_style_slides()|&gt; \n  gt::tab_options(\n    table.font.size = 15\n  )\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDemographic Table\n\n\nSafety Population\n\n\n\nPlaceboN = 86\nActiveN = 1681\nOverallN = 254\n\n\n\n\nAge (years)\n\n\n\n\n\n\n\n\n  Median\n  76.0        \n  77.0        \n77.0\n\n\n  [Q1, Q3]\n[69.0, 82.0]  \n[71.0, 81.0]  \n[70.0, 81.0]\n\n\nAge Group\n\n\n\n\n\n\n\n\n  18-64\n    14 (16.3%)\n    19 (11.3%)\n33 (13.0%)\n\n\n  &gt;64\n    72 (83.7%)\n   149 (88.7%)\n221 (87.0%)\n\n\nSex\n\n\n\n\n\n\n\n\n  F\n    53 (61.6%)\n    90 (53.6%)\n143 (56.3%)\n\n\n  M\n    33 (38.4%)\n    78 (46.4%)\n111 (43.7%)\n\n\n\n1 Pooled High and Low Dose"
  },
  {
    "objectID": "slides/05-tables-tfrmt/index.html#exercise-together",
    "href": "slides/05-tables-tfrmt/index.html#exercise-together",
    "title": "Tables in R using {tfrmt}",
    "section": "Exercise 🏃‍➡️ (Together!)",
    "text": "Exercise 🏃‍➡️ (Together!)\n\nOpen R file exercises/05-tables-tfrmt.R\nCreate and modify the AE table as described\n\n\n\n\n−+\n08:00"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#acknowledgements",
    "href": "slides/06-tables-gtsummary/index.html#acknowledgements",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "Acknowledgements",
    "text": "Acknowledgements\n\n\n\n\nThis work is licensed under a Creative Commons Attribution-ShareAlike 4.0 International License (CC BY-SA4.0)."
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#daniel-d.-sjoberg",
    "href": "slides/06-tables-gtsummary/index.html#daniel-d.-sjoberg",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "Daniel D. Sjoberg",
    "text": "Daniel D. Sjoberg\n\n\n danieldsjoberg.com\n ddsjoberg.bsky.social\n linkedin.com/in/ddsjoberg\n github.com/ddsjoberg"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#questions",
    "href": "slides/06-tables-gtsummary/index.html#questions",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "Questions",
    "text": "Questions\n\n\n Please ask questions at any time!"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#section",
    "href": "slides/06-tables-gtsummary/index.html#section",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "",
    "text": "How it started\n\n\nBegan to address reproducible issues while working in academia\nGoal was to build a package to summarize study results with code that was both simple and customizable\nFirst release in May 2019\n\n\n\nHow it’s going\n\n\nThe stats\n\n1,500,000+ installations from CRAN\n1,100+ GitHub stars\n300+ contributors\n50+ code contributors\n\nWon the 2021 American Statistical Association (ASA) Innovation in Programming Award\nWon the 2024 Posit Pharma Table Contest"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#gtsummary-overview",
    "href": "slides/06-tables-gtsummary/index.html#gtsummary-overview",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "{gtsummary} overview",
    "text": "{gtsummary} overview\n\n\n\nCreate tabular summaries with sensible defaults but highly customizable\nTypes of summaries:\n\nDemographic- or “Table 1”-types\nCross-tabulation\nRegression models\nSurvival data\nSurvey data\nCustom tables\n\n\n\n\nReport statistics from {gtsummary} tables inline in R Markdown\nStack and/or merge any table type\nUse themes to standardize across tables\nChoose from different print engines"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#gtsummary-overview-1",
    "href": "slides/06-tables-gtsummary/index.html#gtsummary-overview-1",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "{gtsummary} overview",
    "text": "{gtsummary} overview\nFor our workshop, we will focus on the following summary types as well as themes and print engines.\n\ntbl_summary()\ntbl_hierarchical()\n\n\nOther functions helpful functions we’re not covering:\n\n\ntbl_hierarchical_count(): similar to tbl_hierarchical() for counts instead of rates\ntbl_cross(): cross tabulations\ntbl_continuous(): summarizing continuous variables by 2 categorical variables\ntbl_wide_summary(): similar to tbl_summary() but statistics are presented in separate columns\nmany more!"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#prepare-the-data",
    "href": "slides/06-tables-gtsummary/index.html#prepare-the-data",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "Prepare the data",
    "text": "Prepare the data\n\nlibrary(pharmaverseadam)\nlibrary(tidyverse)\n\nadsl &lt;- pharmaverseadam::adsl |&gt; \n  filter(ARM != \"Screen Failure\") |&gt; \n  select(USUBJID, ARM, AGE, ETHNIC, SEX, TRTDURD) |&gt; \n  mutate(FEMALE  = SEX == \"F\") |&gt; \n  labelled::set_variable_labels(FEMALE = \"Female\")\n\nadae &lt;- pharmaverseadam::adae |&gt; \n  filter(\n    USUBJID %in% adsl$USUBJID,\n    AESOC %in% c(\"CARDIAC DISORDERS\", \"EYE DISORDERS\"),\n    AEDECOD %in% c(\"ATRIAL FLUTTER\", \"MYOCARDIAL INFARCTION\",\n                   \"EYE ALLERGY\", \"EYE SWELLING\")\n  ) |&gt; \n  select(USUBJID, ARM, AEDECOD, AESOC, AEHLT, AESEV, AESER, AEREL)\n\nadlb &lt;- pharmaverseadam::adlb |&gt; \n  filter(\n    USUBJID %in% adsl$USUBJID, \n    PARAM %in% c(\"Albumin (g/L)\", \"Bilirubin (umol/L)\" , \"Leukocytes (10^9/L)\"),\n    AVISIT %in% c(\"Baseline\", \"Week 12\", \"Week 24\")\n  ) |&gt; \n  select(USUBJID, ARM, AVISIT, AVISITN, PARCAT1, PARAM, PARAMCD, \n         AVAL, AVALC, BASE, CHG)\n\n# Construct an oncology outcomes dataset\nad_onco &lt;-\n  list(\n    # Best Overall Response\n    pharmaverseadam::adrs_onco |&gt; \n      filter(PARAMCD == \"CBOR\") |&gt; \n      select(USUBJID, RECIST_CBOR = AVALC) |&gt; \n      labelled::set_variable_labels(RECIST_CBOR = \"Best Overall Response\"),\n    # Tumor Size\n    pharmaverseadam::adtr_onco |&gt; \n      filter(PARAM == \"Target Lesions Sum of Diameters by Investigator\") |&gt; \n      select(USUBJID, TUMOR_SIZE = AVAL) |&gt; \n      labelled::set_variable_labels(TUMOR_SIZE = \"Tumor Size, mm\"),\n    # Progression-free Survival\n    pharmaverseadam::adtte_onco |&gt; \n      filter(PARAMCD == \"PFS\") |&gt; \n      select(USUBJID, PFS_CNSR = CNSR, PFS_TIME = AVAL) |&gt; \n      mutate(PFS_EVENT = abs(PFS_CNSR - 1)) |&gt; \n      labelled::set_variable_labels(\n        PFS_CNSR = \"PFS, Censor\",\n        PFS_EVENT = \"Progression\",\n        PFS_TIME = \"PFS Followup Time, days\"\n      )\n  ) |&gt; \n  reduce(full_join, by = \"USUBJID\") |&gt; \n  inner_join(adsl[c(\"USUBJID\", \"AGE\", \"ETHNIC\", \"ARM\")], by = \"USUBJID\") |&gt; \n  mutate(ARM2 = word(ARM, 1))"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#basic-tbl_summary",
    "href": "slides/06-tables-gtsummary/index.html#basic-tbl_summary",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "Basic tbl_summary()",
    "text": "Basic tbl_summary()\n\n\n\nlibrary(gtsummary)\n\nadsl |&gt; \n  tbl_summary(\n    include = c(AGE, ETHNIC, FEMALE)\n  )\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nN = 2541\n\n\n\n\nAge\n77 (70, 81)\n\n\nEthnicity\n\n\n\n\n    HISPANIC OR LATINO\n12 (4.7%)\n\n\n    NOT HISPANIC OR LATINO\n242 (95%)\n\n\nFemale\n143 (56%)\n\n\n\n1 Median (Q1, Q3); n (%)\n\n\n\n\n\n\n\n\n\n\nFour types of summaries: continuous, continuous2, categorical, and dichotomous\nStatistics are median (IQR) for continuous, n (%) for categorical/dichotomous\nVariables coded 0/1, TRUE/FALSE, Yes/No treated as dichotomous by default\nLabel attributes are printed automatically"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#customize-tbl_summary-output",
    "href": "slides/06-tables-gtsummary/index.html#customize-tbl_summary-output",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "Customize tbl_summary() output",
    "text": "Customize tbl_summary() output\n\n\ntbl_summary(\n  adsl,\n  include = c(AGE, ETHNIC, FEMALE),\n  by = ARM,\n)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nPlacebo\nN = 861\nXanomeline High Dose\nN = 841\nXanomeline Low Dose\nN = 841\n\n\n\n\nAge\n76 (69, 82)\n76 (71, 80)\n78 (71, 82)\n\n\nEthnicity\n\n\n\n\n\n\n\n\n    HISPANIC OR LATINO\n3 (3.5%)\n3 (3.6%)\n6 (7.1%)\n\n\n    NOT HISPANIC OR LATINO\n83 (97%)\n81 (96%)\n78 (93%)\n\n\nFemale\n53 (62%)\n40 (48%)\n50 (60%)\n\n\n\n1 Median (Q1, Q3); n (%)\n\n\n\n\n\n\n\n\n\n\n\n\nby: specify a column variable for cross-tabulation"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#customize-tbl_summary-output-1",
    "href": "slides/06-tables-gtsummary/index.html#customize-tbl_summary-output-1",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "Customize tbl_summary() output",
    "text": "Customize tbl_summary() output\n\n\ntbl_summary(\n  adsl,\n  include = c(AGE, ETHNIC, FEMALE),\n  by = ARM,\n  type = AGE ~ \"continuous2\",\n)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nPlacebo\nN = 861\nXanomeline High Dose\nN = 841\nXanomeline Low Dose\nN = 841\n\n\n\n\nAge\n\n\n\n\n\n\n\n\n    Median (Q1, Q3)\n76 (69, 82)\n76 (71, 80)\n78 (71, 82)\n\n\nEthnicity\n\n\n\n\n\n\n\n\n    HISPANIC OR LATINO\n3 (3.5%)\n3 (3.6%)\n6 (7.1%)\n\n\n    NOT HISPANIC OR LATINO\n83 (97%)\n81 (96%)\n78 (93%)\n\n\nFemale\n53 (62%)\n40 (48%)\n50 (60%)\n\n\n\n1 n (%)\n\n\n\n\n\n\n\n\n\n\n\n\nby: specify a column variable for cross-tabulation\ntype: specify the summary type"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#customize-tbl_summary-output-2",
    "href": "slides/06-tables-gtsummary/index.html#customize-tbl_summary-output-2",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "Customize tbl_summary() output",
    "text": "Customize tbl_summary() output\n\n\ntbl_summary(\n  adsl,\n  include = c(AGE, ETHNIC, FEMALE),\n  by = ARM,\n  type = AGE ~ \"continuous2\",\n  statistic = \n    list(\n      AGE ~ c(\"{mean} ({sd})\", \n              \"{min}, {max}\"), \n      FEMALE ~ \"{n} / {N} ({p}%)\"\n    ),\n)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nPlacebo\nN = 861\nXanomeline High Dose\nN = 841\nXanomeline Low Dose\nN = 841\n\n\n\n\nAge\n\n\n\n\n\n\n\n\n    Mean (SD)\n75 (9)\n74 (8)\n76 (8)\n\n\n    Min, Max\n52, 89\n56, 88\n51, 88\n\n\nEthnicity\n\n\n\n\n\n\n\n\n    HISPANIC OR LATINO\n3 (3.5%)\n3 (3.6%)\n6 (7.1%)\n\n\n    NOT HISPANIC OR LATINO\n83 (97%)\n81 (96%)\n78 (93%)\n\n\nFemale\n53 / 86 (62%)\n40 / 84 (48%)\n50 / 84 (60%)\n\n\n\n1 n (%); n / N (%)\n\n\n\n\n\n\n\n\n\n\n\n\nby: specify a column variable for cross-tabulation\ntype: specify the summary type\nstatistic: customize the reported statistics"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#customize-tbl_summary-output-3",
    "href": "slides/06-tables-gtsummary/index.html#customize-tbl_summary-output-3",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "Customize tbl_summary() output",
    "text": "Customize tbl_summary() output\n\n\ntbl_summary(\n  adsl,\n  include = c(AGE, ETHNIC, FEMALE),\n  by = ARM,\n  type = AGE ~ \"continuous2\",\n  statistic = \n    list(\n      AGE ~ c(\"{mean} ({sd})\", \n              \"{min}, {max}\"), \n      FEMALE ~ \"{n} / {N} ({p}%)\"\n    ),\n  label = \n    AGE ~ \"Age, years\",\n)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nPlacebo\nN = 861\nXanomeline High Dose\nN = 841\nXanomeline Low Dose\nN = 841\n\n\n\n\nAge, years\n\n\n\n\n\n\n\n\n    Mean (SD)\n75 (9)\n74 (8)\n76 (8)\n\n\n    Min, Max\n52, 89\n56, 88\n51, 88\n\n\nEthnicity\n\n\n\n\n\n\n\n\n    HISPANIC OR LATINO\n3 (3.5%)\n3 (3.6%)\n6 (7.1%)\n\n\n    NOT HISPANIC OR LATINO\n83 (97%)\n81 (96%)\n78 (93%)\n\n\nFemale\n53 / 86 (62%)\n40 / 84 (48%)\n50 / 84 (60%)\n\n\n\n1 n (%); n / N (%)\n\n\n\n\n\n\n\n\n\n\n\n\nby: specify a column variable for cross-tabulation\ntype: specify the summary type\nstatistic: customize the reported statistics\n\n\n\nlabel: change or customize variable labels"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#customize-tbl_summary-output-4",
    "href": "slides/06-tables-gtsummary/index.html#customize-tbl_summary-output-4",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "Customize tbl_summary() output",
    "text": "Customize tbl_summary() output\n\n\ntbl_summary(\n  adsl,\n  include = c(AGE, ETHNIC, FEMALE),\n  by = ARM,\n  type = AGE ~ \"continuous2\",\n  statistic = \n    list(\n      AGE ~ c(\"{mean} ({sd})\", \n              \"{min}, {max}\"), \n      FEMALE ~ \"{n} / {N} ({p}%)\"\n    ),\n  label = \n    AGE ~ \"Age, years\",\n  digits = AGE ~ list(sd = 1) # report SD(age) to one decimal place\n)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nPlacebo\nN = 861\nXanomeline High Dose\nN = 841\nXanomeline Low Dose\nN = 841\n\n\n\n\nAge, years\n\n\n\n\n\n\n\n\n    Mean (SD)\n75 (8.6)\n74 (7.9)\n76 (8.3)\n\n\n    Min, Max\n52, 89\n56, 88\n51, 88\n\n\nEthnicity\n\n\n\n\n\n\n\n\n    HISPANIC OR LATINO\n3 (3.5%)\n3 (3.6%)\n6 (7.1%)\n\n\n    NOT HISPANIC OR LATINO\n83 (97%)\n81 (96%)\n78 (93%)\n\n\nFemale\n53 / 86 (62%)\n40 / 84 (48%)\n50 / 84 (60%)\n\n\n\n1 n (%); n / N (%)\n\n\n\n\n\n\n\n\n\n\n\n\nby: specify a column variable for cross-tabulation\ntype: specify the summary type\nstatistic: customize the reported statistics\n\n\n\nlabel: change or customize variable labels\ndigits: specify the number of decimal places for rounding"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#gtsummary-formulas",
    "href": "slides/06-tables-gtsummary/index.html#gtsummary-formulas",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "{gtsummary} + formulas",
    "text": "{gtsummary} + formulas\nThis syntax is also used in {cards}, {cardx}, {crane}, and {gt}.\n\n\n\nNamed list are OK too! label = list(age = \"Patient Age\")"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#section-1",
    "href": "slides/06-tables-gtsummary/index.html#section-1",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "",
    "text": "{gtsummary} selectors\n\nUse the following helpers to select groups of variables: all_continuous(), all_categorical()\nUse all_stat_cols() to select the summary statistic columns\n\nAdd-on functions in {gtsummary}\ntbl_summary() objects can also be updated using related functions.\n\nadd_*() add additional column of statistics or information, e.g. p-values, q-values, overall statistics, treatment differences, N obs., and more\nmodify_*() modify table headers, spanning headers, footnotes, and more\nbold_*()/italicize_*() style labels, variable levels, significant p-values"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#update-tbl_summary-with-add_",
    "href": "slides/06-tables-gtsummary/index.html#update-tbl_summary-with-add_",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "Update tbl_summary() with add_*()",
    "text": "Update tbl_summary() with add_*()\n\n\nadsl |&gt;\n  tbl_summary(\n    by = ARM,\n    include = c(AGE, ETHNIC, FEMALE)\n  ) |&gt; \n  add_overall(last = TRUE)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nPlacebo\nN = 861\nXanomeline High Dose\nN = 841\nXanomeline Low Dose\nN = 841\nOverall\nN = 2541\n\n\n\n\nAge\n76 (69, 82)\n76 (71, 80)\n78 (71, 82)\n77 (70, 81)\n\n\nEthnicity\n\n\n\n\n\n\n\n\n\n\n    HISPANIC OR LATINO\n3 (3.5%)\n3 (3.6%)\n6 (7.1%)\n12 (4.7%)\n\n\n    NOT HISPANIC OR LATINO\n83 (97%)\n81 (96%)\n78 (93%)\n242 (95%)\n\n\nFemale\n53 (62%)\n40 (48%)\n50 (60%)\n143 (56%)\n\n\n\n1 Median (Q1, Q3); n (%)\n\n\n\n\n\n\n\n\n\nadd_overall(): adds a column of overall statistics"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#update-tbl_summary-with-add_-1",
    "href": "slides/06-tables-gtsummary/index.html#update-tbl_summary-with-add_-1",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "Update tbl_summary() with add_*()",
    "text": "Update tbl_summary() with add_*()\n\n\nad_onco |&gt;\n  tbl_summary(\n    by = ARM2, \n    include = c(TUMOR_SIZE, PFS_EVENT),\n    missing = \"no\"\n  ) |&gt; \n  add_n() |&gt; \n  add_p(pvalue_fun = label_style_pvalue(digits = 2)) |&gt; \n  add_q(method = \"fdr\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nN\nPlacebo\nN = 961\nXanomeline\nN = 1771\np-value2\nq-value3\n\n\n\n\nTumor Size, mm\n25\n78 (38, 96)\n67 (26, 92)\n0.66\n0.69\n\n\nProgression\n273\n6 (6.3%)\n9 (5.1%)\n0.69\n0.69\n\n\n\n1 Median (Q1, Q3); n (%)\n\n\n2 Wilcoxon rank sum test; Pearson’s Chi-squared test\n\n\n3 False discovery rate correction for multiple testing\n\n\n\n\n\n\n\n\n\nadd_p(): adds a column of p-values\nadd_q(): adds a column of p-values adjusted for multiple comparisons through a call to p.adjust()"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#update-tbl_summary-with-modify_",
    "href": "slides/06-tables-gtsummary/index.html#update-tbl_summary-with-modify_",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "Update tbl_summary() with modify_*()",
    "text": "Update tbl_summary() with modify_*()\n\n\ntbl &lt;-\n  adsl[c(\"ARM\", \"AGE\", \"ETHNIC\", \"FEMALE\")] |&gt; \n  filter(startsWith(ARM, \"Xanomeline\")) |&gt; \n  tbl_summary(by = ARM, \n              missing = \"no\") |&gt;\n  modify_header(\n    stat_1 ~ \"**Group A**\",\n    stat_2 ~ \"**Group B**\"\n  ) |&gt; \n  modify_spanning_header(\n    all_stat_cols() ~ \"**Drug**\") |&gt; \n  modify_footnote(\n    all_stat_cols() ~ \n      paste(\"median (IQR) for continuous;\",\n            \"n (%) for categorical\")\n  )\ntbl\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\n\nDrug\n\n\n\nGroup A1\nGroup B1\n\n\n\n\nAge\n76 (71, 80)\n78 (71, 82)\n\n\nEthnicity\n\n\n\n\n\n\n    HISPANIC OR LATINO\n3 (3.6%)\n6 (7.1%)\n\n\n    NOT HISPANIC OR LATINO\n81 (96%)\n78 (93%)\n\n\nFemale\n40 (48%)\n50 (60%)\n\n\n\n1 median (IQR) for continuous; n (%) for categorical\n\n\n\n\n\n\n\n\n\nUse show_header_names() to see the internal header names available for use in modify_header()"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#column-names",
    "href": "slides/06-tables-gtsummary/index.html#column-names",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "Column names",
    "text": "Column names\n\nshow_header_names(tbl)\n\nColumn Name   Header                 level*                       N*          n*         p*             \nlabel         \"**Characteristic**\"                                168 &lt;int&gt;                             \nstat_1        \"**Group A**\"          Xanomeline High Dose &lt;chr&gt;   168 &lt;int&gt;   84 &lt;int&gt;   0.500 &lt;dbl&gt;    \nstat_2        \"**Group B**\"           Xanomeline Low Dose &lt;chr&gt;   168 &lt;int&gt;   84 &lt;int&gt;   0.500 &lt;dbl&gt;    \n\n\n* These values may be dynamically placed into headers (and other locations).\nℹ Review the `modify_header()` (`?gtsummary::modify_header()`) help for examples.\n\n\n\n\nall_stat_cols() selects columns \"stat_1\" and \"stat_2\""
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#update-tbl_summary-with-add_-2",
    "href": "slides/06-tables-gtsummary/index.html#update-tbl_summary-with-add_-2",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "Update tbl_summary() with add_*()",
    "text": "Update tbl_summary() with add_*()\n\nad_onco |&gt;\n  tbl_summary(\n    by = ARM2,\n    include = c(TUMOR_SIZE, PFS_EVENT),\n    statistic = list(TUMOR_SIZE = \"{mean} ({sd})\",\n                     PFS_EVENT = \"{p}%\"),\n    missing = \"no\"\n  ) |&gt; \n  add_difference()\n\n\n\n\n  \n    \n      Characteristic\n      Placebo\nN = 961\n      Xanomeline\nN = 1771\n      Difference2\n      95% CI2\n      p-value2\n    \n  \n  \n    Tumor Size, mm\n67 (37)\n59 (39)\n7.6\n-24, 39\n0.6\n    Progression\n6.3%\n5.1%\n1.2%\n-5.5%, 7.8%\n&gt;0.9\n  \n  \n    \n      Abbreviation: CI = Confidence Interval\n    \n  \n  \n    \n      1 Mean (SD); %\n    \n    \n      2 Welch Two Sample t-test; 2-sample test for equality of proportions with continuity correction\n    \n  \n\n\n\n\n\nadd_difference(): mean and rate differences between two groups. Can also be adjusted differences"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#update-tbl_summary-with-add_-3",
    "href": "slides/06-tables-gtsummary/index.html#update-tbl_summary-with-add_-3",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "Update tbl_summary() with add_*()",
    "text": "Update tbl_summary() with add_*()\n\n\n\nadsl |&gt;\n  tbl_summary(\n    by = ARM,\n    include = c(AGE, ETHNIC, FEMALE)\n  ) |&gt; \n  add_stat(...)\n\n\n\nCustomize statistics presented with add_stat()\nAdded statistics can be placed on the label or the level rows\nAdded statistics may be a single column or multiple"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#where-are-the-ards",
    "href": "slides/06-tables-gtsummary/index.html#where-are-the-ards",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "Where are the ARDs?",
    "text": "Where are the ARDs?\n\n\n\nARDs are the backbone for all calculations in gtsummary\nEvery gtsummary table saves the ARDs from each calculation\nThey can be extracted individually, or combined.\n\n\n\ntbl &lt;- tbl_summary(adsl, by = \"ARM\", include = \"AGE\") |&gt; add_p()\nnames(tbl$cards)\n\n[1] \"tbl_summary\" \"add_p\"      \n\ntbl$cards[[\"add_p\"]][[\"AGE\"]]\n\n{cards} data frame: 4 x 9\n\n\n  group1 variable   context stat_name stat_label      stat\n1    ARM      AGE stats_kr… statistic  Kruskal-…     1.635\n2    ARM      AGE stats_kr…   p.value    p-value     0.442\n3    ARM      AGE stats_kr… parameter  Degrees …         2\n4    ARM      AGE stats_kr…    method     method Kruskal-…\n\n\nℹ 3 more variables: fmt_fun, warning, error"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#add-on-functions-in-gtsummary-1",
    "href": "slides/06-tables-gtsummary/index.html#add-on-functions-in-gtsummary-1",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "Add-on functions in {gtsummary}",
    "text": "Add-on functions in {gtsummary}\nAnd many more!\nSee the documentation at http://www.danieldsjoberg.com/gtsummary/reference/index.html\nAnd a detailed tbl_summary() vignette at http://www.danieldsjoberg.com/gtsummary/articles/tbl_summary.html"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#gtsummary-exercise-1",
    "href": "slides/06-tables-gtsummary/index.html#gtsummary-exercise-1",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "{gtsummary} Exercise 1",
    "text": "{gtsummary} Exercise 1\n\nNavigate to Posit Cloud script 04-gtsummary_exercise1.R.\nCreate the table outlined in the script.\nAdd the “completed” sticky note to your laptop when complete.\n\n\n\n\n−+\n10:00"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#adverse-event-reporting-and-friends",
    "href": "slides/06-tables-gtsummary/index.html#adverse-event-reporting-and-friends",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "Adverse Event Reporting (and friends)",
    "text": "Adverse Event Reporting (and friends)\nUse tbl_hierarchicial() and tbl_hierarchicial_count() for reporting of AEs, Con Meds, and more.\n\ntbl_ae &lt;- adae |&gt; \n  tbl_hierarchical(\n    by = \"ARM\", \n    variables = c(\"AESOC\", \"AEDECOD\"),\n    id = \"USUBJID\",\n    denominator = adsl\n  )\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPrimary System Organ Class\n    Dictionary-Derived Term\nPlacebo\nN = 861\nXanomeline High Dose\nN = 841\nXanomeline Low Dose\nN = 841\n\n\n\n\nCARDIAC DISORDERS\n4 (4.7%)\n5 (6.0%)\n3 (3.6%)\n\n\n    ATRIAL FLUTTER\n0 (0%)\n1 (1.2%)\n1 (1.2%)\n\n\n    MYOCARDIAL INFARCTION\n4 (4.7%)\n4 (4.8%)\n2 (2.4%)\n\n\nEYE DISORDERS\n1 (1.2%)\n0 (0%)\n0 (0%)\n\n\n    EYE ALLERGY\n1 (1.2%)\n0 (0%)\n0 (0%)\n\n\n    EYE SWELLING\n1 (1.2%)\n0 (0%)\n0 (0%)\n\n\n\n1 n (%)"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#ard-qc",
    "href": "slides/06-tables-gtsummary/index.html#ard-qc",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "ARD + QC",
    "text": "ARD + QC\nARDs are wonderful for QCing {gtsummary} tables. 😻\n\nThe ARD include the formatted and un-formatted numbers that appear in the table.\nExtract the ARD from the {gtsummary} table.\nBuild fresh ARD from source data, and compare it to the ARD from the table."
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#ard-qc-extract-ard",
    "href": "slides/06-tables-gtsummary/index.html#ard-qc-extract-ard",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "ARD + QC: Extract ARD",
    "text": "ARD + QC: Extract ARD\n\ngather_ard(tbl_ae)\n\n\n\n{cards} data frame: 36 x 15\n\n\n   group1 group1_level group2 group2_level variable variable_level stat_name stat_label  stat stat_fmt\n1     ARM      Placebo  AESOC    CARDIAC …  AEDECOD      ATRIAL F…         n          n     0        0\n2     ARM      Placebo  AESOC    CARDIAC …  AEDECOD      ATRIAL F…         N          N    86       86\n3     ARM      Placebo  AESOC    CARDIAC …  AEDECOD      ATRIAL F…         p          %     0        0\n4     ARM    Xanomeli…  AESOC    CARDIAC …  AEDECOD      ATRIAL F…         n          n     1        1\n5     ARM    Xanomeli…  AESOC    CARDIAC …  AEDECOD      ATRIAL F…         N          N    84       84\n6     ARM    Xanomeli…  AESOC    CARDIAC …  AEDECOD      ATRIAL F…         p          % 0.012      1.2\n7     ARM    Xanomeli…  AESOC    CARDIAC …  AEDECOD      ATRIAL F…         n          n     1        1\n8     ARM    Xanomeli…  AESOC    CARDIAC …  AEDECOD      ATRIAL F…         N          N    84       84\n9     ARM    Xanomeli…  AESOC    CARDIAC …  AEDECOD      ATRIAL F…         p          % 0.012      1.2\n10    ARM      Placebo  AESOC    CARDIAC …  AEDECOD      MYOCARDI…         n          n     4        4\n\n\nℹ 26 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 5 more variables: context, fmt_fun, warning, error, gts_column"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#ard-qc-build-and-compare-ards",
    "href": "slides/06-tables-gtsummary/index.html#ard-qc-build-and-compare-ards",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "ARD + QC: Build and Compare ARDs",
    "text": "ARD + QC: Build and Compare ARDs\n\nard_ae &lt;- adae |&gt; \n  cards::ard_stack_hierarchical(\n    by = \"ARM\", \n    variables = c(\"AESOC\", \"AEDECOD\"),\n    id = \"USUBJID\",\n    denominator = adsl\n  )\n\nThe next step is to simply compare the two ARDs to confirm results. As this is done programmatically, it is quick to repeat as data continues to accrue.\n\nThere are numerous ways to compare objects in R. We are currently developing a tool in {cards} that will streamline ARD comparison, with sensible defaults for ARDs. Stay tuned! 📺"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#tbl_merge-for-side-by-side-tables",
    "href": "slides/06-tables-gtsummary/index.html#tbl_merge-for-side-by-side-tables",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "tbl_merge() for side-by-side tables",
    "text": "tbl_merge() for side-by-side tables\n\ntbl_n &lt;- \n  tbl_summary(adsl, include = ETHNIC, statistic = ETHNIC ~ \"{n}\") |&gt; \n  modify_header(all_stat_cols() ~ \"**N**\") |&gt; # update column header\n  remove_footnote_header() # remove footnote\ntbl_age &lt;-\n  tbl_continuous(adsl, include = ETHNIC, variable = AGE, by = ARM) |&gt; \n  modify_header(all_stat_cols() ~ \"**{level}**\") # update header\n\n# combine the tables side by side\nlist(tbl_n, tbl_age) |&gt; \n  tbl_merge(tab_spanner = FALSE) # suppress default header\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nN\nPlacebo1\nXanomeline High Dose1\nXanomeline Low Dose1\n\n\n\n\nEthnicity\n\n\n\n\n\n\n\n\n\n\n    HISPANIC OR LATINO\n12\n64 (63, 86)\n56 (56, 63)\n73 (56, 82)\n\n\n    NOT HISPANIC OR LATINO\n242\n76 (70, 82)\n77 (72, 80)\n78 (71, 82)\n\n\n\n1 Age: Median (Q1, Q3)"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#tbl_stack-to-combine-vertically",
    "href": "slides/06-tables-gtsummary/index.html#tbl_stack-to-combine-vertically",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "tbl_stack() to combine vertically",
    "text": "tbl_stack() to combine vertically\n\ntbl_drug_a &lt;- adsl |&gt; \n  filter(ARM == \"Xanomeline High Dose\") |&gt; \n  tbl_summary(include = c(AGE, ETHNIC), missing = \"no\")\ntbl_drug_b &lt;- adsl |&gt; \n  filter(ARM == \"Xanomeline Low Dose\") |&gt; \n  tbl_summary(include = c(AGE, ETHNIC), missing = \"no\")\n\n# stack the two tables \nlist(tbl_drug_a, tbl_drug_b) |&gt; \n  tbl_stack(group_header = c(\"Drug A\", \"Drug B\")) |&gt; # optionally include headers for each table\n  modify_header(all_stat_cols() ~ \"**Summary Statistics**\")\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nSummary Statistics1\n\n\n\n\nDrug A\n\n\nAge\n76 (71, 80)\n\n\nEthnicity\n\n\n\n\n    HISPANIC OR LATINO\n3 (3.6%)\n\n\n    NOT HISPANIC OR LATINO\n81 (96%)\n\n\nDrug B\n\n\nAge\n78 (71, 82)\n\n\nEthnicity\n\n\n\n\n    HISPANIC OR LATINO\n6 (7.1%)\n\n\n    NOT HISPANIC OR LATINO\n78 (93%)\n\n\n\n1 Median (Q1, Q3); n (%)"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#tbl_strata-for-stratified-tables",
    "href": "slides/06-tables-gtsummary/index.html#tbl_strata-for-stratified-tables",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "tbl_strata() for stratified tables",
    "text": "tbl_strata() for stratified tables\n\ntbl_strata(\n  adsl, \n  strata = ARM, \n  ~ .x |&gt; \n    tbl_wide_summary(include = c(ETHNIC, FEMALE))\n)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\n\nPlacebo\n\n\nXanomeline High Dose\n\n\nXanomeline Low Dose\n\n\n\nn\n%\nn\n%\nn\n%\n\n\n\n\nEthnicity\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    HISPANIC OR LATINO\n3\n3.5%\n3\n3.6%\n6\n7.1%\n\n\n    NOT HISPANIC OR LATINO\n83\n97%\n81\n96%\n78\n93%\n\n\nFemale\n53\n62%\n40\n48%\n50\n60%\n\n\n\n\n\n\n\nThe default is to combine stratified tables with tbl_merge()."
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#tbl_strata-for-stratified-tables-1",
    "href": "slides/06-tables-gtsummary/index.html#tbl_strata-for-stratified-tables-1",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "tbl_strata() for stratified tables",
    "text": "tbl_strata() for stratified tables\nWe can also stack the tables.\n\ntbl_strata(\n  adsl, \n  strata = ARM, \n  ~ .x |&gt; \n    tbl_wide_summary(include = c(ETHNIC, FEMALE)),\n  .combine_with = \"tbl_stack\"\n)\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nn\n%\n\n\n\n\nPlacebo\n\n\nEthnicity\n\n\n\n\n\n\n    HISPANIC OR LATINO\n3\n3.5%\n\n\n    NOT HISPANIC OR LATINO\n83\n97%\n\n\nFemale\n53\n62%\n\n\nXanomeline High Dose\n\n\nEthnicity\n\n\n\n\n\n\n    HISPANIC OR LATINO\n3\n3.6%\n\n\n    NOT HISPANIC OR LATINO\n81\n96%\n\n\nFemale\n40\n48%\n\n\nXanomeline Low Dose\n\n\nEthnicity\n\n\n\n\n\n\n    HISPANIC OR LATINO\n6\n7.1%\n\n\n    NOT HISPANIC OR LATINO\n78\n93%\n\n\nFemale\n50\n60%"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#define-custom-function-tbl_cmh",
    "href": "slides/06-tables-gtsummary/index.html#define-custom-function-tbl_cmh",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "Define custom function tbl_cmh()",
    "text": "Define custom function tbl_cmh()"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#define-custom-function-tbl_cmh-1",
    "href": "slides/06-tables-gtsummary/index.html#define-custom-function-tbl_cmh-1",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "Define custom function tbl_cmh()",
    "text": "Define custom function tbl_cmh()"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#cobbling-tables-together",
    "href": "slides/06-tables-gtsummary/index.html#cobbling-tables-together",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "Cobbling Tables Together",
    "text": "Cobbling Tables Together\n\n\nMost of the tables we create in the pharma space come from a catalog of standard tables.\nCustom or one-off tables are often quite difficult and time intensive to create.\nThe {gtsummary} package makes it simple to break complex tables into their simple parts and cobble them together in the end.\nMoreover, the internal structure of a gtsummary table is super simple: a data frame and instructions on how to print that data frame to make it cute. If needed, you can directly modify the underlying data frame with modify_table_body().\n\n\n\nadsl |&gt; tbl_summary(include = c(AGE, ETHNIC), by = ARM) |&gt; purrr::pluck(\"table_body\")\n\n# A tibble: 4 × 8\n  variable var_type    row_type var_label label                  stat_1      stat_2      stat_3     \n  &lt;chr&gt;    &lt;chr&gt;       &lt;chr&gt;    &lt;chr&gt;     &lt;chr&gt;                  &lt;chr&gt;       &lt;chr&gt;       &lt;chr&gt;      \n1 AGE      continuous  label    Age       Age                    76 (69, 82) 76 (71, 80) 78 (71, 82)\n2 ETHNIC   categorical label    Ethnicity Ethnicity              &lt;NA&gt;        &lt;NA&gt;        &lt;NA&gt;       \n3 ETHNIC   categorical level    Ethnicity HISPANIC OR LATINO     3 (3.5%)    3 (3.6%)    6 (7.1%)   \n4 ETHNIC   categorical level    Ethnicity NOT HISPANIC OR LATINO 83 (97%)    81 (96%)    78 (93%)"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#ard-first-tables-1",
    "href": "slides/06-tables-gtsummary/index.html#ard-first-tables-1",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "ARD-first Tables",
    "text": "ARD-first Tables\nSimilar to functions that accept a data frame, the package exports functions with nearly identical APIs that accept an ARD.\n\n\ntbl_summary()\n\ntbl_hierarchical()\n\ntbl_continuous()\n\ntbl_wide_summary()\n\ntbl_ard_summary()\n\ntbl_ard_hierarchical()\n\ntbl_ard_continuous()\n\ntbl_ard_wide_summary()"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#ard-first-tables-2",
    "href": "slides/06-tables-gtsummary/index.html#ard-first-tables-2",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "ARD-first Tables",
    "text": "ARD-first Tables\nWe can use the skills we learned earlier today to create ARDs for gtsummary tables.\n\n\nlibrary(cards)\n\nard &lt;- ard_stack(\n  data = adsl, \n  ard_summary(variables = AGE),\n  ard_tabulate(variables = ETHNIC),\n  ard_tabulate_value(variables = FEMALE),\n  # add these for best-looking tables\n  .attributes = TRUE, \n  .missing = TRUE \n)\nard\n\n\n{cards} data frame: 38 x 9\n\n\n   variable variable_level  context stat_name stat_label   stat\n1       AGE                 summary         N          N    254\n2       AGE                 summary      mean       Mean 75.087\n3       AGE                 summary        sd         SD  8.246\n4       AGE                 summary    median     Median     77\n5       AGE                 summary       p25         Q1     70\n6       AGE                 summary       p75         Q3     81\n7       AGE                 summary       min        Min     51\n8       AGE                 summary       max        Max     89\n9    ETHNIC      HISPANIC… tabulate         n          n     12\n10   ETHNIC      HISPANIC… tabulate         N          N    254\n\n\nℹ 28 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 3 more variables: fmt_fun, warning, error\n\n\n\n\n\nThe .attributes=TRUE call adds column attributes, like labels, to the ARD table, which leads to better defaults by displaying the column labels in the table."
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#ard-first-tables-3",
    "href": "slides/06-tables-gtsummary/index.html#ard-first-tables-3",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "ARD-first Tables",
    "text": "ARD-first Tables\nWe can simply use the ARD from the previous slide, and pass it to tbl_ard_summary() for a summary table.\n\n\ntbl_ard_summary(ard)\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nOverall1\n\n\n\n\nAge\n77.0 (70.0, 81.0)\n\n\nEthnicity\n\n\n\n\n    HISPANIC OR LATINO\n12 (4.7%)\n\n\n    NOT HISPANIC OR LATINO\n242 (95.3%)\n\n\nFemale\n143 (56.3%)\n\n\n\n1 Median (Q1, Q3); n (%)"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#ard-first-tables-4",
    "href": "slides/06-tables-gtsummary/index.html#ard-first-tables-4",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "ARD-first Tables",
    "text": "ARD-first Tables\nNow let’s try a somewhat more complicated table.\n\nadsl |&gt; \n  labelled::set_variable_labels(AGE = \"Age, years\") |&gt; \n  ard_stack( \n    .by = ARM,\n    ard_continuous(\n      variables = AGE,\n      fmt_fn = AGE ~ list(sd = 2)\n    ),\n    ard_categorical(variables = ETHNIC),\n    ard_dichotomous(variables = FEMALE),\n    # add these for best-looking tables\n    .attributes = TRUE, \n    .missing = TRUE \n  ) |&gt; \n  tbl_ard_summary(\n    by = ARM,\n    type = all_continuous() ~ \"continuous2\",\n    statistic = all_continuous() ~ c(\"{mean} ({sd})\", \"{min} - {max}\"),\n    missing = \"no\"\n  ) |&gt; \n  modify_caption(\"**Table 1. Subject Demographics**\")"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#ard-first-tables-4-output",
    "href": "slides/06-tables-gtsummary/index.html#ard-first-tables-4-output",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "ARD-first Tables",
    "text": "ARD-first Tables\n\n\n\n\n\nTable 1. Subject Demographics\n\n\n\n\n\n\n\n\nCharacteristic\nPlacebo1\nXanomeline High Dose1\nXanomeline Low Dose1\n\n\n\n\nAge, years\n\n\n\n\n\n\n\n\n    Mean (SD)\n75.2 (8.59)\n74.4 (7.89)\n75.7 (8.29)\n\n\n    Min - Max\n52.0 - 89.0\n56.0 - 88.0\n51.0 - 88.0\n\n\nEthnicity\n\n\n\n\n\n\n\n\n    HISPANIC OR LATINO\n3 (3.5%)\n3 (3.6%)\n6 (7.1%)\n\n\n    NOT HISPANIC OR LATINO\n83 (96.5%)\n81 (96.4%)\n78 (92.9%)\n\n\nFemale\n53 (61.6%)\n40 (47.6%)\n50 (59.5%)\n\n\n\n1 n (%)"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#ard-first-table-shells",
    "href": "slides/06-tables-gtsummary/index.html#ard-first-table-shells",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "ARD-first Table Shells",
    "text": "ARD-first Table Shells\n\nadsl |&gt; \n  labelled::set_variable_labels(AGE = \"Age, years\") |&gt; \n  ard_stack( \n    .by = ARM,\n    ard_categorical(variables = ETHNIC),\n    # add these for best-looking tables\n    .attributes = TRUE, \n    .missing = TRUE \n  ) |&gt; \n  cards::update_ard_fmt_fun(stat_names = c(\"n\", \"p\"), fmt_fun = \\(x) \"xx\") |&gt; \n  tbl_ard_summary(\n    by = ARM,\n    type = all_continuous() ~ \"continuous2\",\n    statistic = all_continuous() ~ c(\"{mean} ({sd})\", \"{min} - {max}\"),\n    missing = \"no\"\n  ) |&gt; \n  modify_header(all_stat_cols() ~ \"**{level}**  \\nN = xx\")\n\n\n\n\nYou can also pass ARDs created with the cards::mock_*() functions if no data are available."
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#ard-first-table-shells-output",
    "href": "slides/06-tables-gtsummary/index.html#ard-first-table-shells-output",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "ARD-first Table Shells",
    "text": "ARD-first Table Shells\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nPlacebo\nN = xx1\nXanomeline High Dose\nN = xx1\nXanomeline Low Dose\nN = xx1\n\n\n\n\nEthnicity\n\n\n\n\n\n\n\n\n    HISPANIC OR LATINO\nxx (xx%)\nxx (xx%)\nxx (xx%)\n\n\n    NOT HISPANIC OR LATINO\nxx (xx%)\nxx (xx%)\nxx (xx%)\n\n\n\n1 n (%)"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#gtsummary-print-engines-1",
    "href": "slides/06-tables-gtsummary/index.html#gtsummary-print-engines-1",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "{gtsummary} print engines",
    "text": "{gtsummary} print engines"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#gtsummary-print-engines-2",
    "href": "slides/06-tables-gtsummary/index.html#gtsummary-print-engines-2",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "{gtsummary} print engines",
    "text": "{gtsummary} print engines\nUse any print engine to customize table\n\n\nlibrary(gt)\nadsl |&gt;\n  tbl_summary(include = c(AGE, ETHNIC, FEMALE)) |&gt;\n  as_gt() |&gt;\n  cols_width(label ~ px(300)) |&gt;\n  cols_align(columns = stat_0, \n             align = \"right\")\n\n\n\n\n\n\n\n\nCharacteristic\nN = 2541\n\n\n\n\nAge\n77 (70, 81)\n\n\nEthnicity\n\n\n\n\n    HISPANIC OR LATINO\n12 (4.7%)\n\n\n    NOT HISPANIC OR LATINO\n242 (95%)\n\n\nFemale\n143 (56%)\n\n\n\n1 Median (Q1, Q3); n (%)"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#adopt-gtsummary-with-a-company-theme",
    "href": "slides/06-tables-gtsummary/index.html#adopt-gtsummary-with-a-company-theme",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "Adopt {gtsummary} with a company theme",
    "text": "Adopt {gtsummary} with a company theme\n\nA theme is a set of customization preferences that can be easily set and reused.\nThemes control default settings for existing functions\nThemes control more fine-grained customization not available via arguments or helper functions\nEasily use one of the available themes, or create your own"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#gtsummary-default-theme",
    "href": "slides/06-tables-gtsummary/index.html#gtsummary-default-theme",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "{gtsummary} default theme",
    "text": "{gtsummary} default theme\n\n\nreset_gtsummary_theme()\n\ntrial |&gt; \n  tbl_summary(\n    by = trt, \n    include = c(age, response)\n  ) |&gt;\n  modify_caption(\n    \"Default Theme\"\n  )\n\n\n\n\n\n\nDefault Theme\n\n\n\n\n\n\n\nCharacteristic\nDrug A\nN = 981\nDrug B\nN = 1021\n\n\n\n\nAge\n46 (37, 60)\n48 (39, 56)\n\n\n    Unknown\n7\n4\n\n\nTumor Response\n28 (29%)\n33 (34%)\n\n\n    Unknown\n3\n4\n\n\n\n1 Median (Q1, Q3); n (%)"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#gtsummary-theme_gtsummary_journal",
    "href": "slides/06-tables-gtsummary/index.html#gtsummary-theme_gtsummary_journal",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "{gtsummary} theme_gtsummary_journal()",
    "text": "{gtsummary} theme_gtsummary_journal()\n\n\nreset_gtsummary_theme()\ntheme_gtsummary_journal(journal = \"jama\")\n\ntrial |&gt; \n  tbl_summary(\n    by = trt, \n    include = c(age, response)\n  ) |&gt;\n  modify_caption(\n    \"Journal Theme (JAMA)\"\n  )\n\n\n\n\n\n\nJournal Theme (JAMA)\n\n\n\n\n\n\n\nCharacteristic\nDrug A\nN = 98\nDrug B\nN = 102\n\n\n\n\nAge, Median (IQR)\n46 (37 – 60)\n48 (39 – 56)\n\n\n    Unknown\n7\n4\n\n\nTumor Response, n (%)\n28 (29)\n33 (34)\n\n\n    Unknown\n3\n4"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#gtsummary-theme_gtsummary_language",
    "href": "slides/06-tables-gtsummary/index.html#gtsummary-theme_gtsummary_language",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "{gtsummary} theme_gtsummary_language()",
    "text": "{gtsummary} theme_gtsummary_language()\n\n\nreset_gtsummary_theme()\ntheme_gtsummary_language(language = \"zh-tw\")\n\ntrial |&gt; \n  tbl_summary(\n    by = trt, \n    include = c(age, response)\n  ) |&gt;\n  add_p() |&gt; \n  modify_caption(\n    \"Language Theme (Chinese)\"\n  )\n\n\n\n\n\n\nLanguage Theme (Chinese)\n\n\n\n\n\n\n\n\n特色\nDrug A\nN = 981\nDrug B\nN = 1021\nP 值2\n\n\n\n\nAge\n46 (37, 60)\n48 (39, 56)\n0.7\n\n\n    未知\n7\n4\n\n\n\n\nTumor Response\n28 (29%)\n33 (34%)\n0.5\n\n\n    未知\n3\n4\n\n\n\n\n\n1 中位數 (Q1, Q3); n (%)\n\n\n2 Wilcoxon 排序和檢定; 卡方 獨立性檢定\n\n\n\n\n\n\n\n\nLanguage options:\n\n\n\nGerman\nEnglish\nSpanish\nFrench\nGujarati\nHindi\n\n\n\nIcelandic\nJapanese\nKorean\nMarathi\nDutch\n\n\n\nNorwegian\nPortuguese\nSwedish\nChinese Simplified\nChinese Traditional"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#gtsummary-theme_gtsummary_compact",
    "href": "slides/06-tables-gtsummary/index.html#gtsummary-theme_gtsummary_compact",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "{gtsummary} theme_gtsummary_compact()",
    "text": "{gtsummary} theme_gtsummary_compact()\n\nreset_gtsummary_theme()\ntheme_gtsummary_compact()\n\ntrial |&gt; \n  tbl_summary(\n    by = trt, \n    include = c(age, response)\n  ) |&gt;\n  modify_caption(\"Compact Theme\")\n\n\n\n\n\nCompact Theme\n\n\n\n\n\n\n\nCharacteristic\nDrug A\nN = 981\nDrug B\nN = 1021\n\n\n\n\nAge\n46 (37, 60)\n48 (39, 56)\n\n\n    Unknown\n7\n4\n\n\nTumor Response\n28 (29%)\n33 (34%)\n\n\n    Unknown\n3\n4\n\n\n\n1 Median (Q1, Q3); n (%)\n\n\n\n\n\n\n\n\nReduces padding and font size\nLearn more at http://www.danieldsjoberg.com/gtsummary/articles/themes.html"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#a-pharma-theme-with-crane",
    "href": "slides/06-tables-gtsummary/index.html#a-pharma-theme-with-crane",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "A pharma theme with {crane}",
    "text": "A pharma theme with {crane}\n\n\nAt Roche, we’ve create a companion R package to {gtsummary}. The package exports a theme for our company: crane::theme_gtsummary_roche().\n\n\n\n\nSets a custom function for rounding percentages.\nRound all p-values to four decimal places.\nAdds post-processing to report 0 instead of 0 (0%).\nAll tables are printed with {flextable} and we add Roche-specific styling to the table."
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#what-else-is-in-crane",
    "href": "slides/06-tables-gtsummary/index.html#what-else-is-in-crane",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "What else is in {crane}? ",
    "text": "What else is in {crane}? \n\nThe package also exports functions to create common tables in the Roche TLG catalog.\nThe tbl_roche_summary() function is a simple wrapper for tbl_summary(), but with Roche defaults\n\n\nlibrary(crane)\ntheme_gtsummary_roche()\ntheme_gtsummary_printer(\"gt\") # let's keep gt for printing tables \n\nadsl |&gt; \n  dplyr::mutate(ETHNIC = forcats::fct_expand(ETHNIC, \"REFUSED\")) |&gt; \n  tbl_roche_summary(by = ARM, include = c(AGE, ETHNIC))\n\n\n\nTable 1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPlacebo\n(N = 86)\nXanomeline High Dose\n(N = 84)\nXanomeline Low Dose\n(N = 84)\n\n\n\n\nAge\n\n\n\n\n\n\n\n\n    Mean (SD)\n75 (9)\n74 (8)\n76 (8)\n\n\n    Median\n76\n76\n78\n\n\n    Min - Max\n52 - 89\n56 - 88\n51 - 88\n\n\nETHNIC\n\n\n\n\n\n\n\n\n    HISPANIC OR LATINO\n3 (3.5%)\n3 (3.6%)\n6 (7.1%)\n\n\n    NOT HISPANIC OR LATINO\n83 (96.5%)\n81 (96.4%)\n78 (92.9%)\n\n\n    REFUSED\n0\n0\n0"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#what-else-is-in-crane-1",
    "href": "slides/06-tables-gtsummary/index.html#what-else-is-in-crane-1",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "What else is in {crane}? ",
    "text": "What else is in {crane}? \n\nAt Roche, we report AEs differently than what you find in the FDA, so we export tbl_hierarchical_rate_and_count() that combines results from tbl_hierarchical() and tbl_hierarchical_count().\n\n\nadae |&gt; \n  tbl_hierarchical_rate_and_count(\n    by = ARM,\n    variables = c(AESOC, AEDECOD),\n    denominator = adsl\n  ) |&gt;\n  add_overall(last = TRUE)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPrimary System Organ Class\n    Dictionary-Derived Term\nPlacebo\n(N = 86)\nXanomeline High Dose\n(N = 84)\nXanomeline Low Dose\n(N = 84)\nAll Participants\n(N = 254)\n\n\n\n\nTotal number of participants with at least one adverse event\n5 (5.8%)\n5 (6.0%)\n3 (3.6%)\n13 (5.1%)\n\n\nOverall total number of events\n6\n10\n5\n21\n\n\nCARDIAC DISORDERS\n\n\n\n\n\n\n\n\n\n\n    Total number of participants with at least one adverse event\n4 (4.7%)\n5 (6.0%)\n3 (3.6%)\n12 (4.7%)\n\n\n    Total number of events\n4\n10\n5\n19\n\n\n    ATRIAL FLUTTER\n0\n1 (1.2%)\n1 (1.2%)\n2 (0.8%)\n\n\n    MYOCARDIAL INFARCTION\n4 (4.7%)\n4 (4.8%)\n2 (2.4%)\n10 (3.9%)\n\n\nEYE DISORDERS\n\n\n\n\n\n\n\n\n\n\n    Total number of participants with at least one adverse event\n1 (1.2%)\n0\n0\n1 (0.4%)\n\n\n    Total number of events\n2\n0\n0\n2\n\n\n    EYE ALLERGY\n1 (1.2%)\n0\n0\n1 (0.4%)\n\n\n    EYE SWELLING\n1 (1.2%)\n0\n0\n1 (0.4%)"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#what-else-is-in-crane-2",
    "href": "slides/06-tables-gtsummary/index.html#what-else-is-in-crane-2",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "What else is in {crane}? ",
    "text": "What else is in {crane}? \n\nLab values that are summarized by visit and include the change from baseline as well. This is a simple table that is just a tbl_merge() of the AVAL summary and the CHG summary. But the general structure appears enough times in our catalog, we make it simple for our programmers to create.\n\n\nadlb |&gt; \n  dplyr::filter(PARAM == \"Albumin (g/L)\") |&gt; \n  tbl_baseline_chg(\n    by = \"ARM\",\n    baseline_level = \"Baseline\",\n    denominator = adsl\n  )"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#what-else-is-in-crane-2-output",
    "href": "slides/06-tables-gtsummary/index.html#what-else-is-in-crane-2-output",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "What else is in {crane}? ",
    "text": "What else is in {crane}? \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVisit\n\nPlacebo\n(N = 86)\n\n\nXanomeline High Dose\n(N = 84)\n\n\nXanomeline Low Dose\n(N = 84)\n\n\n\nValue at Visit\nChange from Baseline\nValue at Visit\nChange from Baseline\nValue at Visit\nChange from Baseline\n\n\n\n\nBaseline\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    n\n86\n\n\n84\n\n\n82\n\n\n\n\n    Mean (SD)\n39.84 (2.81)\n\n\n40.29 (2.84)\n\n\n39.77 (2.56)\n\n\n\n\n    Median\n40.00\n\n\n40.00\n\n\n40.00\n\n\n\n\n    Min - Max\n32.00 - 46.00\n\n\n32.00 - 49.00\n\n\n32.00 - 46.00\n\n\n\n\nWeek 12\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    n\n67\n67\n50\n50\n51\n51\n\n\n    Mean (SD)\n39.48 (3.49)\n-0.34 (2.39)\n39.80 (2.45)\n-0.70 (2.73)\n38.86 (2.18)\n-0.88 (2.12)\n\n\n    Median\n40.00\n0.00\n39.50\n-1.00\n39.00\n-1.00\n\n\n    Min - Max\n28.00 - 47.00\n-6.00 - 6.00\n35.00 - 44.00\n-7.00 - 6.00\n31.00 - 44.00\n-7.00 - 4.00\n\n\nWeek 24\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    n\n57\n57\n30\n30\n26\n26\n\n\n    Mean (SD)\n39.67 (3.34)\n-0.04 (2.90)\n40.53 (2.10)\n-0.57 (2.65)\n40.38 (2.52)\n0.54 (2.39)\n\n\n    Median\n40.00\n0.00\n41.00\n-1.00\n40.50\n1.00\n\n\n    Min - Max\n29.00 - 46.00\n-10.00 - 6.00\n35.00 - 44.00\n-5.00 - 8.00\n32.00 - 45.00\n-5.00 - 4.00"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#cardinal-collaboration",
    "href": "slides/06-tables-gtsummary/index.html#cardinal-collaboration",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "cardinal collaboration ",
    "text": "cardinal collaboration \nThe cardinal initiative is an industry collaborative effort under the pharmaverse.\nThe site includes examples for building ARDs and tables from the FDA Standard Safety Tables and Figures Integrated Guide using {cards} and {gtsummary}.\n Let’s Go!"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#gtsummary-website",
    "href": "slides/06-tables-gtsummary/index.html#gtsummary-website",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "{gtsummary} website",
    "text": "{gtsummary} website\nhttp://www.danieldsjoberg.com/gtsummary/"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#section-2",
    "href": "slides/06-tables-gtsummary/index.html#section-2",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "",
    "text": "Package Authors/Contributors\n\nDaniel D. Sjoberg\nJoseph Larmarange\nMichael Curry\nJessica Lavery\nKarissa Whiting\nEmily C. Zabor\nXing Bai\nEsther Drill\nJessica Flynn\nMargie Hannum\nStephanie Lobaugh\nShannon Pileggi\nAmy Tin\nGustavo Zapata Wainberg\n\n\nOther Contributors\n\n@abduazizR, @ablack3, @ABohynDOE, @ABorakati, @adilsonbauhofer, @aghaynes, @ahinton-mmc, @aito123, @akarsteve, @akefley, @albamrt, @albertostefanelli, @alecbiom, @alexandrayas, @alexis-catherine, @AlexZHENGH, @alnajar, @amygimma, @anaavu, @anddis, @andrader, @Andrzej-Andrzej, @angelgar, @arbet003, @arnmayer, @aspina7, @AurelienDasre, @awcm0n, @ayogasekaram, @barretmonchka, @barthelmes, @bc-teixeira, @bcjaeger, @BeauMeche, @benediktclaus, @benwhalley, @berg-michael, @bhattmaulik, @BioYork, @blue-abdur, @brachem-christian, @brianmsm, @browne123, @bwiernik, @bx259, @calebasaraba, @CarolineXGao, @CharlyMarie, @ChongTienGoh, @Chris-M-P, @chrisleitzinger, @cjprobst, @ClaudiaCampani, @clmawhorter, @CodieMonster, @coeusanalytics, @coreysparks, @CorradoLanera, @crystalluckett-sanofi, @ctlamb, @dafxy, @DanChaltiel, @DanielPark-MGH, @davideyre, @davidgohel, @davidkane9, @DavisVaughan, @dax44, @dchiu911, @ddsjoberg, @DeFilippis, @denis-or, @dereksonderegger, @derekstein, @DesiQuintans, @dieuv0, @dimbage, @discoleo, @djbirke, @dmenne, @DrDinhLuong, @edelarua, @edrill, @Eduardo-Auer, @ElfatihHasabo, @emilyvertosick, @eokoshi, @ercbk, @eremingt, @erikvona, @eugenividal, @eweisbrod, @fdehrich, @feizhadj, @fh-jsnider, @fh-mthomson, @FrancoisGhesquiere, @ge-generation, @Generalized, @ghost, @giorgioluciano, @giovannitinervia9, @gjones1219, @gorkang, @GuiMarthe, @gungorMetehan, @hass91, @hescalar, @HichemLa, @hichew22, @hr70, @huftis, @hughjonesd, @iaingallagher, @ilyamusabirov, @IndrajeetPatil, @irene9116, @IsadoraBM, @j-tamad, @jalavery, @jaromilfrossard, @JBarsotti, @jbtov, @jeanmanguy, @jemus42, @jenifav, @jennybc, @JeremyPasco, @jerrodanzalone, @JesseRop, @jflynn264, @jhchou, @jhelvy, @jhk0530, @jjallaire, @jkylearmstrong, @jmbarajas, @jmbarbone, @JoanneF1229, @joelgautschi, @johnryan412, @JohnSodling, @jonasrekdalmathisen, @JonGretar, @jordan49er, @jsavinc, @jthomasmock, @juseer, @jwilliman, @karissawhiting, @karl-an, @kendonB, @kentm4, @klh281, @kmdono02, @kristyrobledo, @kwakuduahc1, @lamberp6, @lamhine, @larmarange, @ledermanr, @leejasme, @leslem, @levossen, @lngdet, @longjp, @lorenzoFabbri, @loukesio, @love520lfh, @lspeetluk, @ltin1214, @ltj-github, @lucavd, @LucyMcGowan, @LuiNov, @lukejenner6, @maciekbanas, @maia-sh, @malcolmbarrett, @mariamaseng, @Marsus1972, @martsobm, @Mathicaa, @matthieu-faron, @maxanes, @mayazadok2, @mbac, @mdidish, @medewitt, @meenakshi-kushwaha, @melindahiggins2000, @MelissaAssel, @Melkiades, @mfansler, @michaelcurry1123, @mikemazzucco, @mlamias, @mljaniczek, @moleps, @monitoringhsd, @motocci, @mrmvergeer, @msberends, @mvuorre, @myamortor, @myensr, @MyKo101, @nalimilan, @ndunnewind, @nikostr, @ningyile, @O16789, @oliviercailloux, @oranwutang, @palantre, @parmsam, @Pascal-Schmidt, @PaulC91, @paulduf, @pedersebastian, @perlatex, @pgseye, @philippemichel, @philsf, @polc1410, @Polperobis, @postgres-newbie, @proshano, @raphidoc, @RaviBot, @rawand-hanna, @rbcavanaugh, @remlapmot, @rich-iannone, @RiversPharmD, @rmgpanw, @roaldarbol, @roman2023, @ryzhu75, @s-j-choi, @sachijay, @saifelayan, @sammo3182, @samrodgersmelnick, @samuele-mercan, @sandhyapc, @sbalci, @sda030, @shah-in-boots, @shannonpileggi, @shaunporwal, @shengchaohou, @ShixiangWang, @simonpcouch, @slb2240, @slobaugh, @spiralparagon, @Spring75xx, @StaffanBetner, @steenharsted, @stenw, @Stephonomon, @storopoli, @stratopopolis, @strengejacke, @szimmer, @tamytsujimoto, @TAOS25, @TarJae, @themichjam, @THIB20, @tibirkrajc, @tjmeyers, @tldrcharlene, @tormodb, @toshifumikuroda, @TPDeramus, @UAB-BST-680, @uakimix, @uriahf, @Valja64, @viola-hilbert, @violet-nova, @vvm02, @will-gt, @xkcococo, @xtimbeau, @yatirbe, @yihunzeleke, @yonicd, @yoursdearboy, @YousufMohammed2002, @yuryzablotski, @zabore, @zachariae, @zaddyzad, @zawkzaw, @zdz2101, @zeyunlu, @zhangkaicr, @zhaohongxin0, @zheer-kejlberg, @zhengnow, @zhonghua723, @zlkrvsm, @zongell-star, and @Zoulf001."
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#thank-you",
    "href": "slides/06-tables-gtsummary/index.html#thank-you",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "Thank you",
    "text": "Thank you\n\n\n\n Ask on stackoverflow.com\n Use the gtsummary tag\n Thousands of posts!\n\n danieldsjoberg.com\n ddsjoberg.bsky.social\n linkedin.com/in/ddsjoberg/\n github.com/ddsjoberg"
  }
]