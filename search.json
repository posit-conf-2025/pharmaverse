[
  {
    "objectID": "slides/07-submissions-wrapup/index.html#submissions-working-group",
    "href": "slides/07-submissions-wrapup/index.html#submissions-working-group",
    "title": "Submissions in R and Wrap-Up",
    "section": "Submissions Working Group",
    "text": "Submissions Working Group\nMission\n\nEasier R-based clinical trial regulatory submissions today\n\nby showing open examples of using current submission portals\n\nEasier R-based clinical trial regulatory submissions tomorrow\n\nby collecting feedback and influencing future industry and agency decisions on system/process setup\n\nWebsite: https://rconsortium.github.io/submissions-wg/\nSlack: Invite to Slack"
  },
  {
    "objectID": "slides/07-submissions-wrapup/index.html#pilots",
    "href": "slides/07-submissions-wrapup/index.html#pilots",
    "title": "Submissions in R and Wrap-Up",
    "section": "Pilots",
    "text": "Pilots"
  },
  {
    "objectID": "slides/07-submissions-wrapup/index.html#how-can-llms-help-us-within-the-cardsgtsummary-framework",
    "href": "slides/07-submissions-wrapup/index.html#how-can-llms-help-us-within-the-cardsgtsummary-framework",
    "title": "Submissions in R and Wrap-Up",
    "section": "How can LLMs help us within the {cards}+{gtsummary} framework?",
    "text": "How can LLMs help us within the {cards}+{gtsummary} framework?\n\n{gtsummary} is a widely used package, the publicly available LLMs write code out of the box: no additional training needed.\n\n\nAct as a statistical programmer within the pharmaceutical industry, and provide me code to create tables in the R language using the gtsummary package.\nUsing the ADSL data set as an input, please provide the code for creating a demographics table that is split by treatment arm. Include the variables AGE and AGEGR1. AGE is a continuous summary, and include the mean, standard deviation, median and IQR. AGEGR1 is a categorical variable and include the count and percent in the summary."
  },
  {
    "objectID": "slides/07-submissions-wrapup/index.html#how-can-llms-help-us-within-the-ard-framework",
    "href": "slides/07-submissions-wrapup/index.html#how-can-llms-help-us-within-the-ard-framework",
    "title": "Submissions in R and Wrap-Up",
    "section": "How can LLMs help us within the ARD framework?",
    "text": "How can LLMs help us within the ARD framework?\nThe result! (using Gemini)\n# Load necessary packages\n# If you don't have gtsummary installed, uncomment and run:\n# install.packages(\"gtsummary\")\n# install.packages(\"dplyr\") # Often useful with gtsummary for data manipulation\n\nlibrary(gtsummary)\nlibrary(dplyr)\n\n# --- Simulate ADSL Data ---\n# In a real-world scenario, you would load your actual ADSL data.\n# For demonstration purposes, we'll create a dummy ADSL dataset.\nset.seed(123) # for reproducibility\n\nadsl_data &lt;- tibble(\n  USUBJID = paste0(\"SUBJ\", 1:100),\n  TRT01A = sample(c(\"Placebo\", \"Treatment A\", \"Treatment B\"), 100, replace = TRUE, prob = c(0.3, 0.4, 0.3)),\n  AGE = round(rnorm(100, mean = 55, sd = 10), 0),\n  AGEGR1 = cut(AGE,\n               breaks = c(0, 18, 65, Inf),\n               labels = c(\"&lt;18\", \"18-65\", \"&gt;65\"),\n               right = FALSE)\n) %&gt;%\n  # Ensure factors for proper ordering and handling by gtsummary\n  mutate(\n    TRT01A = factor(TRT01A, levels = c(\"Placebo\", \"Treatment A\", \"Treatment B\")),\n    AGEGR1 = factor(AGEGR1, levels = c(\"&lt;18\", \"18-65\", \"&gt;65\"))\n  )\n\n# --- Create the Demographics Table ---\n# Use tbl_summary to create the table, specifying:\n# - data: The ADSL dataset\n# - by: The variable to split the table by (treatment arm)\n# - include: The variables to include in the table\n# - type: How to summarize each variable (continuous vs. categorical)\n# - statistic: The specific statistics to display for each variable type\n\ndemographics_table &lt;-\n  adsl_data %&gt;%\n  tbl_summary(\n    by = TRT01A, # Split the table by treatment arm\n    include = c(AGE, AGEGR1), # Include Age and Age Group variables\n    type = list(\n      AGE ~ \"continuous\",      # Specify AGE as continuous\n      AGEGR1 ~ \"categorical\"   # Specify AGEGR1 as categorical\n    ),\n    statistic = list(\n      # For continuous AGE, include mean (SD) and median (IQR)\n      AGE ~ \"{mean} ({sd})\",      # Mean (Standard Deviation)\n      AGE ~ \"{median} ({p25}, {p75})\", # Median (25th percentile, 75th percentile) - IQR\n      # For categorical AGEGR1, include count (percent)\n      AGEGR1 ~ \"{n} ({p}%)\"\n    ),\n    # Add labels for better readability\n    label = list(\n      AGE ~ \"Age, years\",\n      AGEGR1 ~ \"Age Group, years\"\n    ),\n    # Add a note explaining the statistics\n    missing = \"no\", # Do not show missing values row for this table\n    # Specify options for displaying missing data, formatting, etc.\n    # We are explicitly specifying all statistics for AGE, so we might not need \"all_continuous()\" or \"all_categorical()\",\n    # but they are good for default behavior if not all statistics are overridden.\n    # To combine mean (SD) and median (IQR) into a single row, you would list them separated by a comma\n    # in the statistic argument.\n    digits = all_continuous() ~ 1, # One decimal place for continuous variables\n  ) %&gt;%\n  add_n() %&gt;% # Add column for total N\n  add_p() %&gt;% # Add p-value for group comparison (optional, but good for demographics)\n  modify_header(\n    list(\n      label ~ \"**Characteristic**\",\n      stat_by ~ \"**{level}**\\nN = {n}\" # Customize column headers to show N\n    )\n  ) %&gt;%\n  modify_footnote(\n    update = AGE ~ \"Mean (SD); Median (IQR)\"\n  ) %&gt;%\n  # Add table title\n  modify_caption(\"**Table 1. Demographics by Treatment Arm**\")\n\n# Print the table to see the output\ndemographics_table\n\n# To export the table (e.g., to Word, PDF, HTML):\n# library(flextable) # for Word/PDF output\n# library(gt) # for HTML output (often used with gtsummary)\n\n# Example for Word:\n# demographics_table %&gt;%\n#   as_flex_table() %&gt;%\n#   flextable::save_as_docx(path = \"demographics_table.docx\")\n\n# Example for HTML:\n# demographics_table %&gt;%\n#   as_gt() %&gt;%\n#   gt::gtsave(filename = \"demographics_table.html\")\n\n# Example for RMarkdown/Quarto knitting (table will render directly):\n# You would simply include the 'demographics_table' object in your RMarkdown/Quarto chunk."
  },
  {
    "objectID": "slides/07-submissions-wrapup/index.html#how-can-llms-help-us-within-the-ard-framework-1",
    "href": "slides/07-submissions-wrapup/index.html#how-can-llms-help-us-within-the-ard-framework-1",
    "title": "Submissions in R and Wrap-Up",
    "section": "How can LLMs help us within the ARD framework?",
    "text": "How can LLMs help us within the ARD framework?\nARDs can be represented in language-agnostic formats like JSON and YAML.\nA summary table has a representation that is readily digestible by your favorite LLM.\n\nlibrary(cards)\nlibrary(gtsummary)\n\ndplyr::filter(pharmaverseadam::adsl, SAFFL == \"Y\") |&gt; \n  tbl_summary(\n    include = c(AGE, AGEGR1),\n    type = AGE ~ \"continuous2\",\n    statistic = AGE ~ c(\"{mean} ({sd})\",  \"{median} ({p25}, {p75})\")\n  ) |&gt; \n  gather_ard() |&gt; \n  purrr::pluck(\"tbl_summary\") |&gt; \n  apply_fmt_fun() |&gt; \n  as_nested_list() |&gt; \n  jsonlite::toJSON(pretty = TRUE)"
  },
  {
    "objectID": "slides/07-submissions-wrapup/index.html#how-can-llms-help-us-within-the-ard-framework-1-output",
    "href": "slides/07-submissions-wrapup/index.html#how-can-llms-help-us-within-the-ard-framework-1-output",
    "title": "Submissions in R and Wrap-Up",
    "section": "How can LLMs help us within the ARD framework?",
    "text": "How can LLMs help us within the ARD framework?\n\n{\n  \"variable\": {\n    \"AGEGR1\": {\n      \"variable_level\": {\n        \"&gt;64\": {\n          \"stat_name\": {\n            \"n\": {\n              \"stat\": [221],\n              \"stat_fmt\": [\"221\"],\n              \"warning\": {},\n              \"error\": {},\n              \"context\": [\"tabulate\"]\n            },\n            \"N\": {\n              \"stat\": [254],\n              \"stat_fmt\": [\"254\"],\n              \"warning\": {},\n              \"error\": {},\n              \"context\": [\"tabulate\"]\n            },\n            \"p\": {\n              \"stat\": [0.8701],\n              \"stat_fmt\": [\"87\"],\n              \"warning\": {},\n              \"error\": {},\n              \"context\": [\"tabulate\"]\n            }\n          }\n        },\n        \"18-64\": {\n          \"stat_name\": {\n            \"n\": {\n              \"stat\": [33],\n              \"stat_fmt\": [\"33\"],\n              \"warning\": {},\n              \"error\": {},\n              \"context\": [\"tabulate\"]\n            },\n            \"N\": {\n              \"stat\": [254],\n              \"stat_fmt\": [\"254\"],\n              \"warning\": {},\n              \"error\": {},\n              \"context\": [\"tabulate\"]\n            },\n            \"p\": {\n              \"stat\": [0.1299],\n              \"stat_fmt\": [\"13\"],\n              \"warning\": {},\n              \"error\": {},\n              \"context\": [\"tabulate\"]\n            }\n          }\n        }\n      },\n      \"stat_name\": {\n        \"label\": {\n          \"stat\": [\"Pooled Age Group 1\"],\n          \"stat_fmt\": [\"Pooled Age Group 1\"],\n          \"warning\": {},\n          \"error\": {},\n          \"context\": [\"attributes\"]\n        },\n        \"class\": {\n          \"stat\": [\"character\"],\n          \"stat_fmt\": {},\n          \"warning\": {},\n          \"error\": {},\n          \"context\": [\"attributes\"]\n        },\n        \"N_obs\": {\n          \"stat\": [254],\n          \"stat_fmt\": [\"254\"],\n          \"warning\": {},\n          \"error\": {},\n          \"context\": [\"missing\"]\n        },\n        \"N_miss\": {\n          \"stat\": [0],\n          \"stat_fmt\": [\"0\"],\n          \"warning\": {},\n          \"error\": {},\n          \"context\": [\"missing\"]\n        },\n        \"N_nonmiss\": {\n          \"stat\": [254],\n          \"stat_fmt\": [\"254\"],\n          \"warning\": {},\n          \"error\": {},\n          \"context\": [\"missing\"]\n        },\n        \"p_miss\": {\n          \"stat\": [0],\n          \"stat_fmt\": [\"0\"],\n          \"warning\": {},\n          \"error\": {},\n          \"context\": [\"missing\"]\n        },\n        \"p_nonmiss\": {\n          \"stat\": [1],\n          \"stat_fmt\": [\"100\"],\n          \"warning\": {},\n          \"error\": {},\n          \"context\": [\"missing\"]\n        }\n      }\n    },\n    \"AGE\": {\n      \"stat_name\": {\n        \"mean\": {\n          \"stat\": [75.0866],\n          \"stat_fmt\": [\"75\"],\n          \"warning\": {},\n          \"error\": {},\n          \"context\": [\"summary\"]\n        },\n        \"sd\": {\n          \"stat\": [8.2462],\n          \"stat_fmt\": [\"8\"],\n          \"warning\": {},\n          \"error\": {},\n          \"context\": [\"summary\"]\n        },\n        \"median\": {\n          \"stat\": [77],\n          \"stat_fmt\": [\"77\"],\n          \"warning\": {},\n          \"error\": {},\n          \"context\": [\"summary\"]\n        },\n        \"p25\": {\n          \"stat\": [70],\n          \"stat_fmt\": [\"70\"],\n          \"warning\": {},\n          \"error\": {},\n          \"context\": [\"summary\"]\n        },\n        \"p75\": {\n          \"stat\": [81],\n          \"stat_fmt\": [\"81\"],\n          \"warning\": {},\n          \"error\": {},\n          \"context\": [\"summary\"]\n        },\n        \"label\": {\n          \"stat\": [\"Age\"],\n          \"stat_fmt\": [\"Age\"],\n          \"warning\": {},\n          \"error\": {},\n          \"context\": [\"attributes\"]\n        },\n        \"class\": {\n          \"stat\": [\"numeric\"],\n          \"stat_fmt\": {},\n          \"warning\": {},\n          \"error\": {},\n          \"context\": [\"attributes\"]\n        },\n        \"N_obs\": {\n          \"stat\": [254],\n          \"stat_fmt\": [\"254\"],\n          \"warning\": {},\n          \"error\": {},\n          \"context\": [\"missing\"]\n        },\n        \"N_miss\": {\n          \"stat\": [0],\n          \"stat_fmt\": [\"0\"],\n          \"warning\": {},\n          \"error\": {},\n          \"context\": [\"missing\"]\n        },\n        \"N_nonmiss\": {\n          \"stat\": [254],\n          \"stat_fmt\": [\"254\"],\n          \"warning\": {},\n          \"error\": {},\n          \"context\": [\"missing\"]\n        },\n        \"p_miss\": {\n          \"stat\": [0],\n          \"stat_fmt\": [\"0\"],\n          \"warning\": {},\n          \"error\": {},\n          \"context\": [\"missing\"]\n        },\n        \"p_nonmiss\": {\n          \"stat\": [1],\n          \"stat_fmt\": [\"100\"],\n          \"warning\": {},\n          \"error\": {},\n          \"context\": [\"missing\"]\n        }\n      }\n    },\n    \"..ard_total_n..\": {\n      \"stat_name\": {\n        \"N\": {\n          \"stat\": [254],\n          \"stat_fmt\": [\"254\"],\n          \"warning\": {},\n          \"error\": {},\n          \"context\": [\"total_n\"]\n        }\n      }\n    }\n  }\n}"
  },
  {
    "objectID": "slides/07-submissions-wrapup/index.html#how-can-llms-help-us-within-the-ard-framework-2",
    "href": "slides/07-submissions-wrapup/index.html#how-can-llms-help-us-within-the-ard-framework-2",
    "title": "Submissions in R and Wrap-Up",
    "section": "How can LLMs help us within the ARD framework?",
    "text": "How can LLMs help us within the ARD framework?\nAsk the LLM to write draft summary for you.\n\nBelow you will find a JSON representation of the results in the table. Act as a medical writer working at a pharmaceutical company and write a brief summary of the results.\n\n\n\n\nA total of 254 participants were enrolled in the study, distributed across three treatment arms: Placebo (N=86), Xanomeline High Dose (N=84), and Xanomeline Low Dose (N=84).\nBaseline demographics indicate that participants were generally similar across all treatment groups with respect to age. The mean age was approximately 75 years across the groups, with standard deviations ranging from 7.9 to 8.6 years. Specifically, the mean age (standard deviation) was 75.2 (8.6) years in the Placebo group, 74.4 (7.9) years in the Xanomeline High Dose group, and 75.7 (8.3) years in the Xanomeline Low Dose group. The median ages were also comparable: 76 years (IQR: 69, 82) for Placebo, 76 years (IQR: 70.5, 80) for Xanomeline High Dose, and 77.5 years (IQR: 71, 82) for Xanomeline Low Dose.\nRegarding age groups, the majority of participants in all treatment arms were over 64 years of age. Specifically, the proportion of participants aged &gt;64 years was 83.7% (n=72) in the Placebo group, 86.9% (n=73) in the Xanomeline High Dose group, and 90.5% (n=76) in the Xanomeline Low Dose group. The proportion of participants aged 18-64 years was 16.3% (n=14) in the Placebo group, 13.1% (n=11) in the Xanomeline High Dose group, and 9.5% (n=8) in the Xanomeline Low Dose group. There were no participants under 18 years of age.\nOverall, the demographic characteristics at baseline appear well-balanced across the treatment groups, suggesting that any observed differences in outcomes are less likely to be attributable to baseline age disparities.\n\n\n\n\n\n&lt;!–"
  },
  {
    "objectID": "slides/05-tables-tfrmt/tfrmt.html#objectives",
    "href": "slides/05-tables-tfrmt/tfrmt.html#objectives",
    "title": "A quick tour of the many uses of {tfrmt}",
    "section": "Objectives",
    "text": "Objectives\n\n\nBy the end of this tables section you will have:\n\nDeveloped an understanding of how tfrmt supports table creation in multiple phases of the reporting process\nSeen examples of demographic and AE summary table formatting\nGained an awareness of utilities for the transition from cards to tfrmt input data"
  },
  {
    "objectID": "slides/05-tables-tfrmt/tfrmt.html#ard-first-tables-with-tfrmt",
    "href": "slides/05-tables-tfrmt/tfrmt.html#ard-first-tables-with-tfrmt",
    "title": "A quick tour of the many uses of {tfrmt}",
    "section": "ARD-first Tables with {tfrmt}",
    "text": "ARD-first Tables with {tfrmt}\n\n\n\n\n\n\n\n\n\nMetadata-driven table formatting\nEasily create new and modify existing tables\nInput: ARD with raw, numeric values ({cards}!)\nOutput: Formatted table via {gt}"
  },
  {
    "objectID": "slides/05-tables-tfrmt/tfrmt.html#theres-also-an-app",
    "href": "slides/05-tables-tfrmt/tfrmt.html#theres-also-an-app",
    "title": "A quick tour of the many uses of {tfrmt}",
    "section": "There’s also an app!",
    "text": "There’s also an app!\n\n\n\n\n\nPoint-and-click interface for {tfrmt}\nAbility to create new or modify existing display\nEases learning curve for new users\nEmpowers non-programmers\nMore here: https://gsk-biostatistics.github.io/tfrmtbuilder/"
  },
  {
    "objectID": "slides/05-tables-tfrmt/tfrmt.html#the-tfrmt-object",
    "href": "slides/05-tables-tfrmt/tfrmt.html#the-tfrmt-object",
    "title": "A quick tour of the many uses of {tfrmt}",
    "section": "The {tfrmt} object",
    "text": "The {tfrmt} object\n\nPre-define the non-data components of your table\nPre-define how the data will be handled once added"
  },
  {
    "objectID": "slides/05-tables-tfrmt/tfrmt.html#use-1-study-planning-mocks",
    "href": "slides/05-tables-tfrmt/tfrmt.html#use-1-study-planning-mocks",
    "title": "A quick tour of the many uses of {tfrmt}",
    "section": "Use #1: Study planning (mocks)",
    "text": "Use #1: Study planning (mocks)\n\nlibrary(tfrmt)\n\nprint_mock_gt(\n  tfrmt = tfrmt_demog, # tfrmt\n  .data = ard_demog_mock # sample ARD\n)|&gt; \n   gt_style_slides()\n\n Removing `value` from input data for mocking.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDemographics Table\n\n\n\nPlaceboN = xx\nLow DoseN = xx\nHigh DoseN = xx\n\n\n\n\nAge (y)     \n\n\n\n\n\n\n\n\n  Mean      \nxxx.x       \nxxx.x       \nxxx.x       \n\n\n  SD        \nxxx.xx      \nxxx.xx      \nxxx.xx      \n\n\n  Median    \nxxx.x       \nxxx.x       \nxxx.x       \n\n\n  Min       \nxxx.x       \nxxx.x       \nxxx.x       \n\n\n  Max       \nxxx.x       \nxxx.x       \nxxx.x       \n\n\n  &lt;65 yrs   \nxxx (xx.x %)\nxxx (xx.x %)\nxxx (xx.x %)\n\n\n  65-80 yrs \nxxx (xx.x %)\nxxx (xx.x %)\nxxx (xx.x %)\n\n\n  &gt;80 yrs   \nxxx (xx.x %)\nxxx (xx.x %)\nxxx (xx.x %)\n\n\nSex         \n\n\n\n\n\n\n\n\n  Male      \nxxx (xx.x %)\nxxx (xx.x %)\nxxx (xx.x %)\n\n\n  Female    \nxxx (xx.x %)\nxxx (xx.x %)\nxxx (xx.x %)\n\n\nBaseline BMI\n\n\n\n\n\n\n\n\n  Mean      \nxxx.x       \nxxx.x       \nxxx.x       \n\n\n  SD        \nxxx.xx      \nxxx.xx      \nxxx.xx      \n\n\n  Median    \nxxx.x       \nxxx.x       \nxxx.x       \n\n\n  Min       \nxxx.x       \nxxx.x       \nxxx.x       \n\n\n  Max       \nxxx.x       \nxxx.x       \nxxx.x       \n\n\n  &lt;25       \nxxx (xx.x %)\nxxx (xx.x %)\nxxx (xx.x %)\n\n\n  25-&lt;30    \nxxx (xx.x %)\nxxx (xx.x %)\nxxx (xx.x %)\n\n\n  &gt;=30      \nxxx (xx.x %)\nxxx (xx.x %)\nxxx (xx.x %)\n\n\n\n\n\n\n\n\nIf no data is supplied, {tfrmt} will generate some under the hood"
  },
  {
    "objectID": "slides/05-tables-tfrmt/tfrmt.html#use-2-final-analysis",
    "href": "slides/05-tables-tfrmt/tfrmt.html#use-2-final-analysis",
    "title": "A quick tour of the many uses of {tfrmt}",
    "section": "Use #2: Final analysis",
    "text": "Use #2: Final analysis\n\nlibrary(tfrmt)\n\nprint_to_gt(\n  tfrmt = tfrmt_demog,\n  .data = ard_demog # true ARD\n)|&gt; \n   gt_style_slides()\n\n\n\n\n\n\n\n\n\n\n\n\n\nDemographics Table\n\n\n\nPlaceboN = 86\nLow DoseN = 84\nHigh DoseN = 84\n\n\n\n\nAge (y)     \n\n\n\n\n\n\n\n\n  Mean      \n75.2       \n75.7       \n74.4       \n\n\n  SD        \n 8.59      \n 8.29      \n 7.89      \n\n\n  Median    \n76.0       \n77.5       \n76.0       \n\n\n  Min       \n52.0       \n51.0       \n56.0       \n\n\n  Max       \n89.0       \n88.0       \n88.0       \n\n\n  &lt;65 yrs   \n14 (16.3 %)\n 8 ( 9.5 %)\n11 (13.1 %)\n\n\n  65-80 yrs \n42 (48.8 %)\n47 (56.0 %)\n55 (65.5 %)\n\n\n  &gt;80 yrs   \n30 (34.9 %)\n29 (34.5 %)\n18 (21.4 %)\n\n\nSex         \n\n\n\n\n\n\n\n\n  Male      \n33 (38.4 %)\n34 (40.5 %)\n44 (52.4 %)\n\n\n  Female    \n53 (61.6 %)\n50 (59.5 %)\n40 (47.6 %)\n\n\nBaseline BMI\n\n\n\n\n\n\n\n\n  Mean      \n23.6       \n25.1       \n25.3       \n\n\n  SD        \n 3.67      \n 4.27      \n 4.16      \n\n\n  Median    \n23.4       \n24.3       \n24.8       \n\n\n  Min       \n15.1       \n17.7       \n13.7       \n\n\n  Max       \n33.3       \n40.1       \n34.5       \n\n\n  &lt;25       \n59 (68.6 %)\n47 (56.0 %)\n44 (52.4 %)\n\n\n  25-&lt;30    \n21 (24.4 %)\n27 (32.1 %)\n28 (33.3 %)\n\n\n  &gt;=30      \n 6 ( 7.0 %)\n10 (11.9 %)\n12 (14.3 %)\n\n\n\n\n\n\n\n\nFull reuse of the original {tfrmt} object = reduced rework!"
  },
  {
    "objectID": "slides/05-tables-tfrmt/tfrmt.html#use-3-repurposed-final-table",
    "href": "slides/05-tables-tfrmt/tfrmt.html#use-3-repurposed-final-table",
    "title": "A quick tour of the many uses of {tfrmt}",
    "section": "Use #3: Repurposed final table",
    "text": "Use #3: Repurposed final table\n\nlibrary(tfrmt)\n\ntfrmt_demog |&gt; \n  layer_tfrmt(\n    tfrmt_demog_custom  \n  )|&gt; \n  print_to_gt( \n    .data = ard_demog\n  ) |&gt; \n  gt::grp_pull(1)|&gt; \n   gt_style_slides()\n\n\n\n\n\n\n\n\n\n\n\n\n\nDemographics Table\n\n\nSafety Population\n\n\n\nHigh Dose(N = 84)\nLow Dose(N = 84)\nPlacebo(N = 86)\n\n\n\n\nAge (y)    \n\n\n\n\n\n\n\n\n  Mean     \n74.4       \n75.7       \n75.2       \n\n\n  SD       \n 7.89      \n 8.29      \n 8.59      \n\n\n  Median   \n76.0       \n77.5       \n76.0       \n\n\n  Min      \n56.0       \n51.0       \n52.0       \n\n\n  Max      \n88.0       \n88.0       \n89.0       \n\n\n           \n           \n           \n           \n\n\n  &lt;65 yrs  \n11 (13.1 %)\n 8 ( 9.5 %)\n14 (16.3 %)\n\n\n  65-80 yrs\n55 (65.5 %)\n47 (56.0 %)\n42 (48.8 %)\n\n\n  &gt;80 yrs  \n18 (21.4 %)\n29 (34.5 %)\n30 (34.9 %)\n\n\n           \n           \n           \n           \n\n\nSex        \n\n\n\n\n\n\n\n\n  Male     \n44 (52.4 %)\n34 (40.5 %)\n33 (38.4 %)\n\n\n  Female   \n40 (47.6 %)\n50 (59.5 %)\n53 (61.6 %)\n\n\n           \n           \n           \n           \n\n\n\nData collected at Screening Visit\n\n\n\n\n\n\n\n\n\nLayering allows for custom tweaks while preserving the original metadata"
  },
  {
    "objectID": "slides/05-tables-tfrmt/tfrmt.html#templates-the-possibilities",
    "href": "slides/05-tables-tfrmt/tfrmt.html#templates-the-possibilities",
    "title": "A quick tour of the many uses of {tfrmt}",
    "section": "Templates: the possibilities",
    "text": "Templates: the possibilities\n\nOrganization standards can be capture as templates\n\n\n# create a template as a function\ntfrmt_demog_org &lt;- function(tfrmt_obj){\n  \n  tfrmt_demog_org &lt;- tfrmt( \n    # define standard formatting for org\n  )\n  \n  layer_tfrmt(x = tfrmt_obj, y = tfrmt_demog_ta)\n}\n\n# Make a standard table\ntfrmt_demog_org() |&gt;  \n  print_to_gt(\n    .data = ard_demog\n  )"
  },
  {
    "objectID": "slides/05-tables-tfrmt/tfrmt.html#templates-the-possibilities-1",
    "href": "slides/05-tables-tfrmt/tfrmt.html#templates-the-possibilities-1",
    "title": "A quick tour of the many uses of {tfrmt}",
    "section": "Templates: the possibilities",
    "text": "Templates: the possibilities\n\nOrganization standards can be capture as templates\nWith layering, teams can customize only the bits that need changing\n\n\n# create a template as a function\ntfrmt_demog_ta &lt;- function(tfrmt_obj){\n  \n  tfrmt_demog_ta &lt;- tfrmt( \n    # define the formatting specific to the therapeutic area\n  )\n  \n  layer_tfrmt(x = tfrmt_obj, y = tfrmt_demog_ta)\n}\n\n# Layering multiple templates\ntfrmt_demog_org() |&gt; \n  tfrmt_demog_ta() |&gt;  \n  print_to_gt(\n    .data = ard_demog\n  )"
  },
  {
    "objectID": "slides/05-tables-tfrmt/tfrmt.html#templates-the-possibilities-2",
    "href": "slides/05-tables-tfrmt/tfrmt.html#templates-the-possibilities-2",
    "title": "A quick tour of the many uses of {tfrmt}",
    "section": "Templates: the possibilities",
    "text": "Templates: the possibilities\n\nOrganization standards can be capture as templates\nWith layering, teams can customize only the bits that need changing\n\n\n# create a template as a function\ntfrmt_demog_study &lt;- function(tfrmt_obj){\n  \n  tfrmt_demog_study &lt;- tfrmt( \n    # define the formatting specific to the study\n  )\n  \n  layer_tfrmt(x = tfrmt_obj, y = tfrmt_demog_study)\n}\n\n# Layering multiple templates\ntfrmt_demog_org() |&gt; \n  tfrmt_demog_ta() |&gt;  \n  tfrmt_demog_study() |&gt; \n  print_to_gt(\n    .data = ard_demog\n  )"
  },
  {
    "objectID": "slides/05-tables-tfrmt/tfrmt.html#save-metadata-for-reuse",
    "href": "slides/05-tables-tfrmt/tfrmt.html#save-metadata-for-reuse",
    "title": "A quick tour of the many uses of {tfrmt}",
    "section": "Save metadata for reuse",
    "text": "Save metadata for reuse\n\nlibrary(tfrmt)\n\ntfrmt_demog |&gt; \n  tfrmt_to_json()\n\n{\n  \"group\": [\"rowlbl1\", \"grp\"],\n  \"label\": [\"rowlbl2\"],\n  \"param\": [\"param\"],\n  \"value\": [\"value\"],\n  \"column\": [\"column\"],\n  \"title\": [\"Demographics Table\"],\n  \"body_plan\": [\n    {\n      \"group_val\": [\".default\"],\n      \"label_val\": [\".default\"],\n      \"param_val\": [\"n\", \"pct\"],\n      \"frmt_combine\": {\n        \"expression\": [\"{n} {pct}\"],\n        \"frmt_ls\": {\n          \"n\": {\n            \"frmt\": {\n              \"expression\": [\"xxx\"],\n              \"missing\": {},\n              \"scientific\": {},\n              \"transform\": {}\n            }\n          },\n          \"pct\": {\n            \"frmt_when\": {\n              \"frmt_ls\": {\n                \"==100\": [\"\"],\n                \"==0\": [\"\"],\n                \"TRUE\": {\n                  \"frmt\": {\n                    \"expression\": [\"(xx.x %)\"],\n                    \"missing\": {},\n                    \"scientific\": {},\n                    \"transform\": {}\n                  }\n                }\n              },\n              \"missing\": {}\n            }\n          }\n        },\n        \"missing\": {}\n      }\n    },\n    {\n      \"group_val\": [\".default\"],\n      \"label_val\": [\"n\"],\n      \"param_val\": [\".default\"],\n      \"frmt\": {\n        \"expression\": [\"xxx\"],\n        \"missing\": {},\n        \"scientific\": {},\n        \"transform\": {}\n      }\n    },\n    {\n      \"group_val\": [\".default\"],\n      \"label_val\": [\"Mean\", \"Median\", \"Min\", \"Max\"],\n      \"param_val\": [\".default\"],\n      \"frmt\": {\n        \"expression\": [\"xxx.x\"],\n        \"missing\": {},\n        \"scientific\": {},\n        \"transform\": {}\n      }\n    },\n    {\n      \"group_val\": [\".default\"],\n      \"label_val\": [\"SD\"],\n      \"param_val\": [\".default\"],\n      \"frmt\": {\n        \"expression\": [\"xxx.xx\"],\n        \"missing\": {},\n        \"scientific\": {},\n        \"transform\": {}\n      }\n    }\n  ],\n  \"col_style_plan\": [\n    {\n      \"cols\": [\n        [\"Placebo\"],\n        [\"Low Dose\"],\n        [\"High Dose\"]\n      ],\n      \"align\": [\".\", \",\", \" \"],\n      \"type\": [\"char\"],\n      \"width\": {}\n    },\n    {\n      \"cols\": [\n        [\"rowlbl1\"],\n        [\"rowlbl2\"]\n      ],\n      \"align\": [\"left\"],\n      \"type\": [\"char\"],\n      \"width\": {}\n    }\n  ],\n  \"col_plan\": {\n    \"col_plan\": {\n      \"dots\": [\n        [\"-grp\"],\n        [\"-starts_with(\\\"ord\\\")\"]\n      ],\n      \".drop\": [false]\n    }\n  },\n  \"sorting_cols\": [\"ord1\", \"ord2\"],\n  \"big_n\": {\n    \"param_val\": [\"bigN\"],\n    \"n_frmt\": {\n      \"expression\": [\"&lt;br&gt;N = xx\"],\n      \"missing\": {},\n      \"scientific\": {},\n      \"transform\": {}\n    },\n    \"by_page\": [false]\n  }\n} \n\n\n\nCreate a language-agnostic JSON file\nLoad JSON back into R and recreate the table with json_to_tfrmt()"
  },
  {
    "objectID": "slides/05-tables-tfrmt/tfrmt.html#saving-display",
    "href": "slides/05-tables-tfrmt/tfrmt.html#saving-display",
    "title": "A quick tour of the many uses of {tfrmt}",
    "section": "Saving display",
    "text": "Saving display\n\ntfrmt::print_to_gt() creates a {gt} object under the hood\nYou can export the table to a variety of formats using gt::gt_save()\nCheck out {docorator} too 😊 at https://gsk-biostatistics.github.io/docorator/"
  },
  {
    "objectID": "slides/05-tables-tfrmt/tfrmt.html#creating-a-tfrmt-table-step-by-step",
    "href": "slides/05-tables-tfrmt/tfrmt.html#creating-a-tfrmt-table-step-by-step",
    "title": "A quick tour of the many uses of {tfrmt}",
    "section": "Creating a {tfrmt} table step-by-step",
    "text": "Creating a {tfrmt} table step-by-step\n\n\n Removing `stat` from input data for mocking.\n\n\n\n\n\n\n\n\n\n\n\n\n\nDemographic Table\n\n\nSafety Population\n\n\n\nPlaceboN = xx\nXanomelineN = xx1\n\n\n\n\nAge (years)\n\n\n\n\n\n\n  Median\n  xx.x        \n  xx.x        \n\n\n  [Q1, Q3]\n[xx.x, xx.x]  \n[xx.x, xx.x]  \n\n\nAge Group\n\n\n\n\n\n\n  18-64\n    xx (xx.x%)\n    xx (xx.x%)\n\n\n  &gt;64\n    xx (xx.x%)\n    xx (xx.x%)\n\n\nSex\n\n\n\n\n\n\n  F\n    xx (xx.x%)\n    xx (xx.x%)\n\n\n  M\n    xx (xx.x%)\n    xx (xx.x%)\n\n\n\n1 Pooled High and Low Dose"
  },
  {
    "objectID": "slides/05-tables-tfrmt/tfrmt.html#ensure-placement-of-all-values-main",
    "href": "slides/05-tables-tfrmt/tfrmt.html#ensure-placement-of-all-values-main",
    "title": "A quick tour of the many uses of {tfrmt}",
    "section": "Ensure placement of all values (Main)",
    "text": "Ensure placement of all values (Main)\n\n\n\nprint(ard_demog)\n\n# A tibble: 24 × 7\n   ARM2    stat_variable stat_name   stat label     ord1  ord2\n   &lt;chr&gt;   &lt;chr&gt;         &lt;chr&gt;      &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt; &lt;dbl&gt;\n 1 Placebo Age (years)   median    76     Median       1    NA\n 2 Placebo Age (years)   p25       69     [Q1, Q3]     1    NA\n 3 Placebo Age (years)   p75       82     [Q1, Q3]     1    NA\n 4 Placebo Age Group     n         72     &gt;64          2     2\n 5 Placebo Age Group     p          0.837 &gt;64          2     2\n 6 Placebo Age Group     n         14     18-64        2     1\n 7 Placebo Age Group     p          0.163 18-64        2     1\n 8 Placebo Sex           n         53     F            3    NA\n 9 Placebo Sex           p          0.616 F            3    NA\n10 Placebo Sex           n         33     M            3    NA\n# ℹ 14 more rows\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDemographic Table\n\n\nSafety Population\n\n\n\nPlaceboN = xx\nXanomelineN = xx1\n\n\n\n\nAge (years)\n\n\n\n\n\n\n  Median\n  xx.x        \n  xx.x        \n\n\n  [Q1, Q3]\n[xx.x, xx.x]  \n[xx.x, xx.x]  \n\n\nAge Group\n\n\n\n\n\n\n  18-64\n    xx (xx.x%)\n    xx (xx.x%)\n\n\n  &gt;64\n    xx (xx.x%)\n    xx (xx.x%)\n\n\nSex\n\n\n\n\n\n\n  F\n    xx (xx.x%)\n    xx (xx.x%)\n\n\n  M\n    xx (xx.x%)\n    xx (xx.x%)\n\n\n\n1 Pooled High and Low Dose"
  },
  {
    "objectID": "slides/05-tables-tfrmt/tfrmt.html#ensure-placement-of-all-values-main-1",
    "href": "slides/05-tables-tfrmt/tfrmt.html#ensure-placement-of-all-values-main-1",
    "title": "A quick tour of the many uses of {tfrmt}",
    "section": "Ensure placement of all values (Main)",
    "text": "Ensure placement of all values (Main)\n\ntfrmt_demog &lt;- tfrmt(\n  group = stat_variable, \n  label = label, \n  column = ARM2,\n  param = stat_name,\n  value = stat, \n  sorting_cols = c(ord1, ord2) \n)\n\nprint_to_gt(\n  tfrmt = tfrmt_demog,\n  .data = ard_demog\n) |&gt; \n   gt_style_slides()\n\nThe following rows of the given dataset have no format applied to them 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24\n\n\nMultiple param listed for the same group/label values.\nThe following frmt_structures may be missing from the body_plan\nor the order may need to be changed:\n- `frmt_structure(group_val = \"Age (years)\", label_val = c(\"[Q1, Q3]\"), frmt_combine(\"{p25}, {p75}\",p25 = frmt(\"xx\"), p75 = frmt(\"xx\")))`\n- `frmt_structure(group_val = \"Age Group\", label_val = c(\"18-64\",\"&gt;64\"), frmt_combine(\"{n}, {p}\",n = frmt(\"xx\"), p = frmt(\"xx\")))`\n- `frmt_structure(group_val = \"Sex\", label_val = c(\"F\",\"M\"), frmt_combine(\"{n}, {p}\",n = frmt(\"xx\"), p = frmt(\"xx\")))`\nUnable to to apply apply_row_grp_lbl.\nReason: `label` column label contains NA values. For group-level summary data, `label` and the relevant `group` values should match.\n\n\n\n\n\n\n\n\n\nord1\nord2\nPlacebo\nXanomeline\n\n\n\n\nMedian\n1\nNA\n76\n77\n\n\n[Q1, Q3]\n1\nNA\n69, 82\n71, 81\n\n\n18-64\n2\n1\n14, 0.162790697674419\n19, 0.113095238095238\n\n\n&gt;64\n2\n2\n72, 0.837209302325581\n149, 0.886904761904762\n\n\nF\n3\nNA\n53, 0.616279069767442\n90, 0.535714285714286\n\n\nM\n3\nNA\n33, 0.383720930232558\n78, 0.464285714285714\n\n\nNA\nNA\nNA\n86\n168"
  },
  {
    "objectID": "slides/05-tables-tfrmt/tfrmt.html#ensure-placement-of-all-values-big-n",
    "href": "slides/05-tables-tfrmt/tfrmt.html#ensure-placement-of-all-values-big-n",
    "title": "A quick tour of the many uses of {tfrmt}",
    "section": "Ensure placement of all values (Big N)",
    "text": "Ensure placement of all values (Big N)\n\ntfrmt_demog &lt;- tfrmt_demog |&gt;\n  tfrmt(\n    big_n = big_n_structure(\n      param_val = \"bigN\",\n      n_frmt = frmt(\"&lt;br&gt;N = xx\")\n      )\n  )\n\nprint_to_gt(\n  tfrmt = tfrmt_demog, \n  .data = ard_demog\n  )|&gt; \n   gt_style_slides()\n\nThe following rows of the given dataset have no format applied to them 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22\n\n\nMultiple param listed for the same group/label values.\nThe following frmt_structures may be missing from the body_plan\nor the order may need to be changed:\n- `frmt_structure(group_val = \"Age (years)\", label_val = c(\"[Q1, Q3]\"), frmt_combine(\"{p25}, {p75}\",p25 = frmt(\"xx\"), p75 = frmt(\"xx\")))`\n- `frmt_structure(group_val = \"Age Group\", label_val = c(\"18-64\",\"&gt;64\"), frmt_combine(\"{n}, {p}\",n = frmt(\"xx\"), p = frmt(\"xx\")))`\n- `frmt_structure(group_val = \"Sex\", label_val = c(\"F\",\"M\"), frmt_combine(\"{n}, {p}\",n = frmt(\"xx\"), p = frmt(\"xx\")))`\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nord1\nord2\nPlaceboN = 86\nXanomelineN = 168\n\n\n\n\nAge (years)\n\n\n\n\n\n\n\n\n\n\n  Median\n1\nNA\n76\n77\n\n\n  [Q1, Q3]\n1\nNA\n69, 82\n71, 81\n\n\nAge Group\n\n\n\n\n\n\n\n\n\n\n  18-64\n2\n1\n14, 0.162790697674419\n19, 0.113095238095238\n\n\n  &gt;64\n2\n2\n72, 0.837209302325581\n149, 0.886904761904762\n\n\nSex\n\n\n\n\n\n\n\n\n\n\n  F\n3\nNA\n53, 0.616279069767442\n90, 0.535714285714286\n\n\n  M\n3\nNA\n33, 0.383720930232558\n78, 0.464285714285714"
  },
  {
    "objectID": "slides/05-tables-tfrmt/tfrmt.html#select-and-reorder-columns",
    "href": "slides/05-tables-tfrmt/tfrmt.html#select-and-reorder-columns",
    "title": "A quick tour of the many uses of {tfrmt}",
    "section": "Select and reorder columns",
    "text": "Select and reorder columns\n\ntfrmt_demog &lt;- tfrmt_demog |&gt;\n  tfrmt(\n    col_plan = col_plan(\n      Placebo,\n      Xanomeline,\n      - starts_with(\"ord\")\n    )\n  )\n\nprint_to_gt(\n  tfrmt = tfrmt_demog, \n  .data = ard_demog\n)|&gt; \n   gt_style_slides()\n\nThe following rows of the given dataset have no format applied to them 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22\n\n\nMultiple param listed for the same group/label values.\nThe following frmt_structures may be missing from the body_plan\nor the order may need to be changed:\n- `frmt_structure(group_val = \"Age (years)\", label_val = c(\"[Q1, Q3]\"), frmt_combine(\"{p25}, {p75}\",p25 = frmt(\"xx\"), p75 = frmt(\"xx\")))`\n- `frmt_structure(group_val = \"Age Group\", label_val = c(\"18-64\",\"&gt;64\"), frmt_combine(\"{n}, {p}\",n = frmt(\"xx\"), p = frmt(\"xx\")))`\n- `frmt_structure(group_val = \"Sex\", label_val = c(\"F\",\"M\"), frmt_combine(\"{n}, {p}\",n = frmt(\"xx\"), p = frmt(\"xx\")))`\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPlaceboN = 86\nXanomelineN = 168\n\n\n\n\nAge (years)\n\n\n\n\n\n\n  Median\n76\n77\n\n\n  [Q1, Q3]\n69, 82\n71, 81\n\n\nAge Group\n\n\n\n\n\n\n  18-64\n14, 0.162790697674419\n19, 0.113095238095238\n\n\n  &gt;64\n72, 0.837209302325581\n149, 0.886904761904762\n\n\nSex\n\n\n\n\n\n\n  F\n53, 0.616279069767442\n90, 0.535714285714286\n\n\n  M\n33, 0.383720930232558\n78, 0.464285714285714"
  },
  {
    "objectID": "slides/05-tables-tfrmt/tfrmt.html#format-the-data-values---basic",
    "href": "slides/05-tables-tfrmt/tfrmt.html#format-the-data-values---basic",
    "title": "A quick tour of the many uses of {tfrmt}",
    "section": "Format the data values - Basic",
    "text": "Format the data values - Basic\n\ntfrmt_demog &lt;- tfrmt_demog |&gt;\n  tfrmt(\n    body_plan = body_plan(\n      frmt_structure(\n        group_val = \".default\", \n        label_val = \".default\", \n        frmt(\"x.xx\"))\n    )\n  )\n\nprint_to_gt(\n  tfrmt = tfrmt_demog, \n  .data = ard_demog\n) |&gt; \n   gt_style_slides()\n\nMultiple param listed for the same group/label values.\nThe following frmt_structures may be missing from the body_plan\nor the order may need to be changed:\n- `frmt_structure(group_val = \"Age (years)\", label_val = c(\"[Q1, Q3]\"), frmt_combine(\"{p25}, {p75}\",p25 = frmt(\"xx\"), p75 = frmt(\"xx\")))`\n- `frmt_structure(group_val = \"Age Group\", label_val = c(\"18-64\",\"&gt;64\"), frmt_combine(\"{n}, {p}\",n = frmt(\"xx\"), p = frmt(\"xx\")))`\n- `frmt_structure(group_val = \"Sex\", label_val = c(\"F\",\"M\"), frmt_combine(\"{n}, {p}\",n = frmt(\"xx\"), p = frmt(\"xx\")))`\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPlaceboN = 86\nXanomelineN = 168\n\n\n\n\nAge (years)\n\n\n\n\n\n\n  Median\n76.00\n77.00\n\n\n  [Q1, Q3]\n69.00, 82.00\n71.00, 81.00\n\n\nAge Group\n\n\n\n\n\n\n  18-64\n14.00, 0.16\n19.00, 0.11\n\n\n  &gt;64\n72.00, 0.84\n149.00, 0.89\n\n\nSex\n\n\n\n\n\n\n  F\n53.00, 0.62\n90.00, 0.54\n\n\n  M\n33.00, 0.38\n78.00, 0.46"
  },
  {
    "objectID": "slides/05-tables-tfrmt/tfrmt.html#format-the-data-values---advanced",
    "href": "slides/05-tables-tfrmt/tfrmt.html#format-the-data-values---advanced",
    "title": "A quick tour of the many uses of {tfrmt}",
    "section": "Format the data values - Advanced",
    "text": "Format the data values - Advanced\n\ntfrmt_demog &lt;- tfrmt_demog |&gt;\n  tfrmt(\n    body_plan = body_plan(\n      frmt_structure(\n        group_val = \".default\", \n        label_val = \".default\",\n        frmt_combine(\"{n} ({p}%)\",\n                     n = frmt(\"xx\"),\n                     p = frmt(\"xx.x\", transform = ~ . *100)\n                     \n        )\n      )\n    )\n  )\n\nprint_to_gt(\n  tfrmt = tfrmt_demog, \n  .data = ard_demog\n  ) |&gt; \n   gt_style_slides()\n\nMultiple param listed for the same group/label values.\nThe following frmt_structures may be missing from the body_plan\nor the order may need to be changed:\n- `frmt_structure(group_val = \"Age (years)\", label_val = c(\"[Q1, Q3]\"), frmt_combine(\"{p25}, {p75}\",p25 = frmt(\"xx\"), p75 = frmt(\"xx\")))`\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPlaceboN = 86\nXanomelineN = 168\n\n\n\n\nAge (years)\n\n\n\n\n\n\n  Median\n76.00\n77.00\n\n\n  [Q1, Q3]\n69.00, 82.00\n71.00, 81.00\n\n\nAge Group\n\n\n\n\n\n\n  18-64\n14 (16.3%)\n19 (11.3%)\n\n\n  &gt;64\n72 (83.7%)\n149 (88.7%)\n\n\nSex\n\n\n\n\n\n\n  F\n53 (61.6%)\n90 (53.6%)\n\n\n  M\n33 (38.4%)\n78 (46.4%)"
  },
  {
    "objectID": "slides/05-tables-tfrmt/tfrmt.html#format-the-data-values---advanced-1",
    "href": "slides/05-tables-tfrmt/tfrmt.html#format-the-data-values---advanced-1",
    "title": "A quick tour of the many uses of {tfrmt}",
    "section": "Format the data values - Advanced",
    "text": "Format the data values - Advanced\n\ntfrmt_demog &lt;- tfrmt_demog |&gt;\n  tfrmt(\n    body_plan = body_plan(\n      \n      frmt_structure(\n        group_val = \".default\", \n        label_val = \"Median\",\n        frmt(\"xx.x\")\n      ),\n      \n      frmt_structure(\n        group_val = \".default\",\n        label_val = \".default\",\n        frmt_combine(\n          expression = \"[{p25}, {p75}]\",                \n          p25 = frmt(\"xx.x\"),                     \n          p75 = frmt(\"xx.x\")                      \n        )\n      )\n      \n    )\n  )\n  \nprint_to_gt(\n  tfrmt = tfrmt_demog, \n  .data = ard_demog\n  ) |&gt; \n   gt_style_slides()\n\n\n\n\n\n\n\n\n\n\n\n\n\nPlaceboN = 86\nXanomelineN = 168\n\n\n\n\nAge (years)\n\n\n\n\n\n\n  Median\n76.0\n77.0\n\n\n  [Q1, Q3]\n[69.0, 82.0]\n[71.0, 81.0]\n\n\nAge Group\n\n\n\n\n\n\n  18-64\n14 (16.3%)\n19 (11.3%)\n\n\n  &gt;64\n72 (83.7%)\n149 (88.7%)\n\n\nSex\n\n\n\n\n\n\n  F\n53 (61.6%)\n90 (53.6%)\n\n\n  M\n33 (38.4%)\n78 (46.4%)"
  },
  {
    "objectID": "slides/05-tables-tfrmt/tfrmt.html#align-the-columns",
    "href": "slides/05-tables-tfrmt/tfrmt.html#align-the-columns",
    "title": "A quick tour of the many uses of {tfrmt}",
    "section": "Align the columns",
    "text": "Align the columns\n\ntfrmt_demog &lt;- tfrmt_demog |&gt;\n  tfrmt(\n    col_style_plan = col_style_plan(\n      col_style_structure(\n        col = c(\"Placebo\", \n                \"Xanomeline\"),\n        align = \" \"\n      )\n    )\n  )\n  \nprint_to_gt(\n  tfrmt = tfrmt_demog, \n  .data = ard_demog\n  ) |&gt; \n   gt_style_slides()\n\n\n\n\n\n\n\n\n\n\n\n\n\nPlaceboN = 86\nXanomelineN = 168\n\n\n\n\nAge (years)\n\n\n\n\n\n\n  Median\n  76.0        \n  77.0        \n\n\n  [Q1, Q3]\n[69.0, 82.0]  \n[71.0, 81.0]  \n\n\nAge Group\n\n\n\n\n\n\n  18-64\n    14 (16.3%)\n    19 (11.3%)\n\n\n  &gt;64\n    72 (83.7%)\n   149 (88.7%)\n\n\nSex\n\n\n\n\n\n\n  F\n    53 (61.6%)\n    90 (53.6%)\n\n\n  M\n    33 (38.4%)\n    78 (46.4%)"
  },
  {
    "objectID": "slides/05-tables-tfrmt/tfrmt.html#add-footnotes",
    "href": "slides/05-tables-tfrmt/tfrmt.html#add-footnotes",
    "title": "A quick tour of the many uses of {tfrmt}",
    "section": "Add footnotes",
    "text": "Add footnotes\n\ntfrmt_demog &lt;- tfrmt_demog |&gt;\n  tfrmt(\n    footnote_plan = footnote_plan(\n      footnote_structure(\n        \"Pooled High and Low Dose\",\n        column_val = \"Xanomeline\"\n      )\n    )\n  )\n  \nprint_to_gt(\n  tfrmt = tfrmt_demog, \n  .data = ard_demog\n  ) |&gt; \n   gt_style_slides()\n\n\n\n\n\n\n\n\n\n\n\n\n\nPlaceboN = 86\nXanomelineN = 1681\n\n\n\n\nAge (years)\n\n\n\n\n\n\n  Median\n  76.0        \n  77.0        \n\n\n  [Q1, Q3]\n[69.0, 82.0]  \n[71.0, 81.0]  \n\n\nAge Group\n\n\n\n\n\n\n  18-64\n    14 (16.3%)\n    19 (11.3%)\n\n\n  &gt;64\n    72 (83.7%)\n   149 (88.7%)\n\n\nSex\n\n\n\n\n\n\n  F\n    53 (61.6%)\n    90 (53.6%)\n\n\n  M\n    33 (38.4%)\n    78 (46.4%)\n\n\n\n1 Pooled High and Low Dose"
  },
  {
    "objectID": "slides/05-tables-tfrmt/tfrmt.html#add-titles",
    "href": "slides/05-tables-tfrmt/tfrmt.html#add-titles",
    "title": "A quick tour of the many uses of {tfrmt}",
    "section": "Add titles",
    "text": "Add titles\n\ntfrmt_demog &lt;- tfrmt_demog |&gt;\n  tfrmt(\n    title = \"Demographic Table\",\n    subtitle = \"Safety Population\"\n  )\n  \nprint_to_gt(\n  tfrmt = tfrmt_demog, \n  .data = ard_demog\n  ) |&gt; \n   gt_style_slides()\n\n\n\n\n\n\n\n\n\n\n\n\nDemographic Table\n\n\nSafety Population\n\n\n\nPlaceboN = 86\nXanomelineN = 1681\n\n\n\n\nAge (years)\n\n\n\n\n\n\n  Median\n  76.0        \n  77.0        \n\n\n  [Q1, Q3]\n[69.0, 82.0]  \n[71.0, 81.0]  \n\n\nAge Group\n\n\n\n\n\n\n  18-64\n    14 (16.3%)\n    19 (11.3%)\n\n\n  &gt;64\n    72 (83.7%)\n   149 (88.7%)\n\n\nSex\n\n\n\n\n\n\n  F\n    53 (61.6%)\n    90 (53.6%)\n\n\n  M\n    33 (38.4%)\n    78 (46.4%)\n\n\n\n1 Pooled High and Low Dose"
  },
  {
    "objectID": "slides/05-tables-tfrmt/tfrmt.html#other-features-include",
    "href": "slides/05-tables-tfrmt/tfrmt.html#other-features-include",
    "title": "A quick tour of the many uses of {tfrmt}",
    "section": "Other features include:",
    "text": "Other features include:\n\nTransform values in the formatting\nRow group formatting\nPagination\nMulti-positional column alignment\nTemplating"
  },
  {
    "objectID": "slides/05-tables-tfrmt/tfrmt.html#cards-to-tfrmt",
    "href": "slides/05-tables-tfrmt/tfrmt.html#cards-to-tfrmt",
    "title": "A quick tour of the many uses of {tfrmt}",
    "section": "cards to tfrmt",
    "text": "cards to tfrmt\n\nFirst, let’s “shuffle” the results into a tidy data frame:\n\n\n\n\nard_demog_00 |&gt; \n  tfrmt::shuffle_card(fill_overall = \"Overall\") \n\n# A tibble: 28 × 9\n   ARM2    AGE    AGEGR1 SEX   context stat_variable stat_name stat_label   stat\n   &lt;chr&gt;   &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;   &lt;chr&gt;         &lt;chr&gt;     &lt;chr&gt;       &lt;dbl&gt;\n 1 Placebo Overa… &lt;NA&gt;   &lt;NA&gt;  contin… AGE           median    Median     76    \n 2 Placebo Overa… &lt;NA&gt;   &lt;NA&gt;  contin… AGE           p25       Q1         69    \n 3 Placebo Overa… &lt;NA&gt;   &lt;NA&gt;  contin… AGE           p75       Q3         82    \n 4 Placebo &lt;NA&gt;   &gt;64    &lt;NA&gt;  catego… AGEGR1        n         n          72    \n 5 Placebo &lt;NA&gt;   &gt;64    &lt;NA&gt;  catego… AGEGR1        p         %           0.837\n 6 Placebo &lt;NA&gt;   18-64  &lt;NA&gt;  catego… AGEGR1        n         n          14    \n 7 Placebo &lt;NA&gt;   18-64  &lt;NA&gt;  catego… AGEGR1        p         %           0.163\n 8 Placebo &lt;NA&gt;   &lt;NA&gt;   F     catego… SEX           n         n          53    \n 9 Placebo &lt;NA&gt;   &lt;NA&gt;   F     catego… SEX           p         %           0.616\n10 Placebo &lt;NA&gt;   &lt;NA&gt;   M     catego… SEX           n         n          33    \n# ℹ 18 more rows\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDemographic Table\n\n\nSafety Population\n\n\n\nPlaceboN = xx\nXanomelineN = xx1\n\n\n\n\nAge (years)\n\n\n\n\n\n\n  Median\n  xx.x        \n  xx.x        \n\n\n  [Q1, Q3]\n[xx.x, xx.x]  \n[xx.x, xx.x]  \n\n\nAge Group\n\n\n\n\n\n\n  18-64\n    xx (xx.x%)\n    xx (xx.x%)\n\n\n  &gt;64\n    xx (xx.x%)\n    xx (xx.x%)\n\n\nSex\n\n\n\n\n\n\n  F\n    xx (xx.x%)\n    xx (xx.x%)\n\n\n  M\n    xx (xx.x%)\n    xx (xx.x%)\n\n\n\n1 Pooled High and Low Dose\n\n\n\n\n\n\n\n\n\n\n\n\nNotice that our variables have been spread wide and are no longer named group1, group1_level, etc.\nBut we want to get all of our row variables (AGE, AGEGR1, SEX) into a single, stacked column"
  },
  {
    "objectID": "slides/05-tables-tfrmt/tfrmt.html#cards-to-tfrmt-1",
    "href": "slides/05-tables-tfrmt/tfrmt.html#cards-to-tfrmt-1",
    "title": "A quick tour of the many uses of {tfrmt}",
    "section": "cards to tfrmt",
    "text": "cards to tfrmt\n\n\nWe want to get all of our row variables (AGE, AGEGR1, SEX) into a single, stacked column\nWe can collapse them into a single column named variable_level\n\n\n\n\n\nard_demog_00 |&gt; \n  tfrmt::shuffle_card(fill_overall = \"Overall\") |&gt; \n  tfrmt::prep_combine_vars(c(\"AGE\",\"AGEGR1\",\"SEX\"))\n\n# A tibble: 28 × 7\n   ARM2    variable_level context     stat_variable stat_name stat_label   stat\n   &lt;chr&gt;   &lt;chr&gt;          &lt;chr&gt;       &lt;chr&gt;         &lt;chr&gt;     &lt;chr&gt;       &lt;dbl&gt;\n 1 Placebo Overall        continuous  AGE           median    Median     76    \n 2 Placebo Overall        continuous  AGE           p25       Q1         69    \n 3 Placebo Overall        continuous  AGE           p75       Q3         82    \n 4 Placebo &gt;64            categorical AGEGR1        n         n          72    \n 5 Placebo &gt;64            categorical AGEGR1        p         %           0.837\n 6 Placebo 18-64          categorical AGEGR1        n         n          14    \n 7 Placebo 18-64          categorical AGEGR1        p         %           0.163\n 8 Placebo F              categorical SEX           n         n          53    \n 9 Placebo F              categorical SEX           p         %           0.616\n10 Placebo M              categorical SEX           n         n          33    \n# ℹ 18 more rows\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDemographic Table\n\n\nSafety Population\n\n\n\nPlaceboN = xx\nXanomelineN = xx1\n\n\n\n\nAge (years)\n\n\n\n\n\n\n  Median\n  xx.x        \n  xx.x        \n\n\n  [Q1, Q3]\n[xx.x, xx.x]  \n[xx.x, xx.x]  \n\n\nAge Group\n\n\n\n\n\n\n  18-64\n    xx (xx.x%)\n    xx (xx.x%)\n\n\n  &gt;64\n    xx (xx.x%)\n    xx (xx.x%)\n\n\nSex\n\n\n\n\n\n\n  F\n    xx (xx.x%)\n    xx (xx.x%)\n\n\n  M\n    xx (xx.x%)\n    xx (xx.x%)\n\n\n\n1 Pooled High and Low Dose\n\n\n\n\n\n\n\n\n\n\n\n\nNotice the row labels in the mock. It’s a combination of variable_level and stat_label for categorical and continuous variables, respectively"
  },
  {
    "objectID": "slides/05-tables-tfrmt/tfrmt.html#cards-to-tfrmt-2",
    "href": "slides/05-tables-tfrmt/tfrmt.html#cards-to-tfrmt-2",
    "title": "A quick tour of the many uses of {tfrmt}",
    "section": "cards to tfrmt",
    "text": "cards to tfrmt\n\nNext, we create a row label (“label” column) for the table that is either the category (i.e. variable_level) for categorical variables, or the stat name for continuous variables.\n\n\n\n\nard_demog_00 |&gt; \n  tfrmt::shuffle_card(fill_overall = \"Overall\") |&gt; \n  tfrmt::prep_combine_vars(c(\"AGE\",\"AGEGR1\",\"SEX\")) |&gt; \n  tfrmt::prep_label()\n\n# A tibble: 28 × 8\n   ARM2   variable_level context stat_variable stat_name stat_label   stat label\n   &lt;chr&gt;  &lt;chr&gt;          &lt;chr&gt;   &lt;chr&gt;         &lt;chr&gt;     &lt;chr&gt;       &lt;dbl&gt; &lt;chr&gt;\n 1 Place… Overall        contin… AGE           median    Median     76     Medi…\n 2 Place… Overall        contin… AGE           p25       Q1         69     Q1   \n 3 Place… Overall        contin… AGE           p75       Q3         82     Q3   \n 4 Place… &gt;64            catego… AGEGR1        n         n          72     &gt;64  \n 5 Place… &gt;64            catego… AGEGR1        p         %           0.837 &gt;64  \n 6 Place… 18-64          catego… AGEGR1        n         n          14     18-64\n 7 Place… 18-64          catego… AGEGR1        p         %           0.163 18-64\n 8 Place… F              catego… SEX           n         n          53     F    \n 9 Place… F              catego… SEX           p         %           0.616 F    \n10 Place… M              catego… SEX           n         n          33     M    \n# ℹ 18 more rows\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDemographic Table\n\n\nSafety Population\n\n\n\nPlaceboN = xx\nXanomelineN = xx1\n\n\n\n\nAge (years)\n\n\n\n\n\n\n  Median\n  xx.x        \n  xx.x        \n\n\n  [Q1, Q3]\n[xx.x, xx.x]  \n[xx.x, xx.x]  \n\n\nAge Group\n\n\n\n\n\n\n  18-64\n    xx (xx.x%)\n    xx (xx.x%)\n\n\n  &gt;64\n    xx (xx.x%)\n    xx (xx.x%)\n\n\nSex\n\n\n\n\n\n\n  F\n    xx (xx.x%)\n    xx (xx.x%)\n\n\n  M\n    xx (xx.x%)\n    xx (xx.x%)\n\n\n\n1 Pooled High and Low Dose"
  },
  {
    "objectID": "slides/05-tables-tfrmt/tfrmt.html#cards-to-tfrmt-3",
    "href": "slides/05-tables-tfrmt/tfrmt.html#cards-to-tfrmt-3",
    "title": "A quick tour of the many uses of {tfrmt}",
    "section": "cards to tfrmt",
    "text": "cards to tfrmt\n\nTake a look at our “big N” (i.e. population counts) rows:\n\n:::\n\n\n# A tibble: 6 × 8\n  ARM2   variable_level context stat_variable stat_name stat_label    stat label\n  &lt;chr&gt;  &lt;chr&gt;          &lt;chr&gt;   &lt;chr&gt;         &lt;chr&gt;     &lt;chr&gt;        &lt;dbl&gt; &lt;chr&gt;\n1 Place… &lt;NA&gt;           tabula… ARM2          n         n           86     &lt;NA&gt; \n2 Place… &lt;NA&gt;           tabula… ARM2          N         N          254     &lt;NA&gt; \n3 Place… &lt;NA&gt;           tabula… ARM2          p         %            0.339 &lt;NA&gt; \n4 Xanom… &lt;NA&gt;           tabula… ARM2          n         n          168     &lt;NA&gt; \n5 Xanom… &lt;NA&gt;           tabula… ARM2          N         N          254     &lt;NA&gt; \n6 Xanom… &lt;NA&gt;           tabula… ARM2          p         %            0.661 &lt;NA&gt; \n\n\n\n\nFirst, we only need the counts themselves (‘n’), not denominators or percentages (‘N’, ‘%’) to display in the column headers.\nSecond, we need to give these a unique stat name to distinguish them for the big_n_structure in {tfrmt}."
  },
  {
    "objectID": "slides/05-tables-tfrmt/tfrmt.html#cards-to-tfrmt-4",
    "href": "slides/05-tables-tfrmt/tfrmt.html#cards-to-tfrmt-4",
    "title": "A quick tour of the many uses of {tfrmt}",
    "section": "cards to tfrmt",
    "text": "cards to tfrmt\n\n\nFirst, we only need the counts themselves (‘n’), not denominators or percentages (‘N’, ‘%’).\nSecond, we need to give these a unique stat name to distinguish them for the big_n_structure in {tfrmt}.\n\n\n\n\n\nard_demog_display &lt;- ard_demog_00 |&gt; \n  tfrmt::shuffle_card(fill_overall = \"Overall\") |&gt; \n  tfrmt::prep_combine_vars(c(\"AGE\",\"AGEGR1\",\"SEX\")) |&gt; \n  tfrmt::prep_label() |&gt; \n  tfrmt::prep_big_n(vars = \"ARM2\")\n\nard_demog_display |&gt; \n  dplyr::filter(stat_variable %in% c(\"ARM2\", \"..ard_total_n..\"))\n\n# A tibble: 2 × 8\n  ARM2     variable_level context stat_variable stat_name stat_label  stat label\n  &lt;chr&gt;    &lt;chr&gt;          &lt;chr&gt;   &lt;chr&gt;         &lt;chr&gt;     &lt;chr&gt;      &lt;dbl&gt; &lt;chr&gt;\n1 Placebo  &lt;NA&gt;           tabula… ARM2          bigN      n             86 &lt;NA&gt; \n2 Xanomel… &lt;NA&gt;           tabula… ARM2          bigN      n            168 &lt;NA&gt; \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDemographic Table\n\n\nSafety Population\n\n\n\nPlaceboN = xx\nXanomelineN = xx1\n\n\n\n\nAge (years)\n\n\n\n\n\n\n  Median\n  xx.x        \n  xx.x        \n\n\n  [Q1, Q3]\n[xx.x, xx.x]  \n[xx.x, xx.x]  \n\n\nAge Group\n\n\n\n\n\n\n  18-64\n    xx (xx.x%)\n    xx (xx.x%)\n\n\n  &gt;64\n    xx (xx.x%)\n    xx (xx.x%)\n\n\nSex\n\n\n\n\n\n\n  F\n    xx (xx.x%)\n    xx (xx.x%)\n\n\n  M\n    xx (xx.x%)\n    xx (xx.x%)\n\n\n\n1 Pooled High and Low Dose"
  },
  {
    "objectID": "slides/05-tables-tfrmt/tfrmt.html#cards-to-tfrmt-5",
    "href": "slides/05-tables-tfrmt/tfrmt.html#cards-to-tfrmt-5",
    "title": "A quick tour of the many uses of {tfrmt}",
    "section": "cards to tfrmt",
    "text": "cards to tfrmt\n\nFinally, we can do any other necessary manipulations like relabeling or adding order variables before passing to tfrmt().\n\n\nard_demog_display &lt;- ard_demog_display |&gt; \n  \n   # give Q1/Q3 the same row label so they appear on the same row\n  dplyr::mutate(label = dplyr::case_when(\n    stat_name %in% c(\"p25\",\"p75\") ~ \"[Q1, Q3]\",\n    TRUE ~ label\n  ),\n  \n  # make variable names look nice\n  stat_variable = dplyr::case_match(\n    stat_variable,\n    \"AGE\" ~ \"Age (years)\",\n    \"AGEGR1\" ~ \"Age Group\",\n    \"SEX\" ~ \"Sex\"\n  ) ) |&gt; \n  \n  # remove unnecessary variables\n  dplyr::select(-c(context, stat_label, variable_level)) |&gt;\n  \n  # create order variables\n  dplyr::mutate(ord1 = as.numeric(\n    factor(stat_variable, \n           levels = c(\"Age (years)\", \"Age Group\", \"Sex\"))),\n    ord2 = as.numeric(\n      factor(label, levels = c(\"18-64\",\"&gt;64\"))))\n\nprint_to_gt(tfrmt_demog, ard_demog_display)|&gt; \n  gt_style_slides()|&gt; \n  gt::tab_options(\n    table.font.size = 15\n  )\n\n\n\n\n\n\n\n\n\n\n\n\nDemographic Table\n\n\nSafety Population\n\n\n\nPlaceboN = 86\nXanomelineN = 1681\n\n\n\n\nAge (years)\n\n\n\n\n\n\n  Median\n  76.0        \n  77.0        \n\n\n  [Q1, Q3]\n[69.0, 82.0]  \n[71.0, 81.0]  \n\n\nAge Group\n\n\n\n\n\n\n  18-64\n    14 (16.3%)\n    19 (11.3%)\n\n\n  &gt;64\n    72 (83.7%)\n   149 (88.7%)\n\n\nSex\n\n\n\n\n\n\n  F\n    53 (61.6%)\n    90 (53.6%)\n\n\n  M\n    33 (38.4%)\n    78 (46.4%)\n\n\n\n1 Pooled High and Low Dose"
  },
  {
    "objectID": "slides/05-tables-tfrmt/tfrmt.html#exercise-together",
    "href": "slides/05-tables-tfrmt/tfrmt.html#exercise-together",
    "title": "A quick tour of the many uses of {tfrmt}",
    "section": "Exercise 🏃‍➡️ (Together!)",
    "text": "Exercise 🏃‍➡️ (Together!)\n\nNavigate to Posit Cloud script exercises/05-tables-tfrmt.R\nCreate and modify the AE table as described.\nAdd the “completed” sticky note to your laptop when complete.\n\n\n\n\n−+\n10:00"
  },
  {
    "objectID": "slides/04-ARD/intro_to_ards.html#objectives",
    "href": "slides/04-ARD/intro_to_ards.html#objectives",
    "title": "End-to-End Submissions in R with the Pharmaverse",
    "section": "Objectives",
    "text": "Objectives\n\n\nBy the end of this ARD section you will have:\n\nDeveloped an understanding of ARDs\nSeen examples of univariate and hierarachical calculations\nGained an awareness of other possibilities in cards and statistical capabilities in cardx"
  },
  {
    "objectID": "slides/04-ARD/intro_to_ards.html#what-are-ards",
    "href": "slides/04-ARD/intro_to_ards.html#what-are-ards",
    "title": "End-to-End Submissions in R with the Pharmaverse",
    "section": "What are ARDs?",
    "text": "What are ARDs?\n\n\nDataset that stores key metadata and raw results from analysis\nMay contained formatted values as well\nThe ARD can be used to to subsequently create tables and figures.\nThe ARD does not describe the layout of the results"
  },
  {
    "objectID": "slides/04-ARD/intro_to_ards.html#analysis-results-data-ard",
    "href": "slides/04-ARD/intro_to_ards.html#analysis-results-data-ard",
    "title": "End-to-End Submissions in R with the Pharmaverse",
    "section": "Analysis Results Data (ARD)",
    "text": "Analysis Results Data (ARD)\n\nAfter the initial creation of an ARD, the results can later be re-used again and again for subsequent reporting needs."
  },
  {
    "objectID": "slides/04-ARD/intro_to_ards.html#a-few-notes-about-ards",
    "href": "slides/04-ARD/intro_to_ards.html#a-few-notes-about-ards",
    "title": "End-to-End Submissions in R with the Pharmaverse",
    "section": "A few notes about ARDs",
    "text": "A few notes about ARDs\n\n\nARDs give us the opportunity to rethink QC\n\nQC can be focused on the raw value, as well as the formatted display\n\nYou don’t have to waste time trying to match formatting to match QC\nBut…QC will be more sensitive to floating point\n\n\nARDs can be flexibly saved to different file types\n\nFor example: a dataset (rds, xpt, etc) or json file"
  },
  {
    "objectID": "slides/04-ARD/intro_to_ards.html#zooming-out-the-analysis-results-standard-ars",
    "href": "slides/04-ARD/intro_to_ards.html#zooming-out-the-analysis-results-standard-ars",
    "title": "End-to-End Submissions in R with the Pharmaverse",
    "section": "Zooming Out: The Analysis Results Standard (ARS)",
    "text": "Zooming Out: The Analysis Results Standard (ARS)\n Objectives include:\n\nTo leverage analysis results metadata to drive the automation of results\nTo support storage, access, processing, traceability and reproducibility of results\n\n\n\n\nLearn more at https://www.cdisc.org/events/webinar/analysis-results-standard-public-review"
  },
  {
    "objectID": "slides/04-ARD/intro_to_ards.html#proposed-metadata-framework-in-the-ars",
    "href": "slides/04-ARD/intro_to_ards.html#proposed-metadata-framework-in-the-ars",
    "title": "End-to-End Submissions in R with the Pharmaverse",
    "section": "Proposed Metadata Framework in the ARS",
    "text": "Proposed Metadata Framework in the ARS\n\n\n\n\n\n\nThe ARS provides a metadata-driven infrastructure for analysis"
  },
  {
    "objectID": "slides/04-ARD/intro_to_ards.html#proposed-metadata-framework-in-the-ars-1",
    "href": "slides/04-ARD/intro_to_ards.html#proposed-metadata-framework-in-the-ars-1",
    "title": "End-to-End Submissions in R with the Pharmaverse",
    "section": "Proposed Metadata Framework in the ARS",
    "text": "Proposed Metadata Framework in the ARS\n\n\n\n\n\n\nThe ARS provides a metadata-driven infrastructure for analysis\n{cards} serves as the engine for the analysis"
  },
  {
    "objectID": "slides/04-ARD/cards.html",
    "href": "slides/04-ARD/cards.html",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "Part of the Pharmaverse\nCollaboration between Roche, GSK, Novartis, Eli Lilly, Pfizer\nContains a variety of utilities for making ARDs\nCan be used within the ARS workflow and separately\n36k downloads per month 🤯\n\n\n\n\nADSL from pharmaverseadam\n\n\nCode\nadsl &lt;- pharmaverseadam::adsl |&gt; \n  dplyr::filter(SAFFL==\"Y\") |&gt; \n  dplyr::mutate(ARM2 = ifelse(startsWith(ARM, \"Xanomeline\"), \"Xanomeline\", ARM))\n\n\nADAE from pharmaverseadam\n\n\nCode\nadae &lt;- pharmaverseadam::adae |&gt; \n  dplyr::filter(SAFFL==\"Y\") |&gt; \n  dplyr::mutate(ARM2 = ifelse(startsWith(ARM, \"Xanomeline\"), \"Xanomeline\", ARM)) |&gt; \n  dplyr::filter(AESOC %in% unique(AESOC)[1:3]) |&gt; \n  dplyr::group_by(AESOC) |&gt; \n  dplyr::filter(AEDECOD %in% unique(AEDECOD)[1:3]) |&gt; \n  dplyr::ungroup()\n\n\n\n\n\n\n\nincludes n, %, N by default\nAny unobserved levels of the variables will be present in the resulting ARD.\n\n\n\nlibrary(cards)\n\nadsl |&gt; \n  ard_tabulate(\n    variables = AGEGR1\n  ) \n\n{cards} data frame: 6 x 9\n\n\n  variable variable_level  context stat_name stat_label stat\n1   AGEGR1            &gt;64 tabulate         n          n  221\n2   AGEGR1            &gt;64 tabulate         N          N  254\n3   AGEGR1            &gt;64 tabulate         p          % 0.87\n4   AGEGR1          18-64 tabulate         n          n   33\n5   AGEGR1          18-64 tabulate         N          N  254\n6   AGEGR1          18-64 tabulate         p          % 0.13\n\n\nℹ 3 more variables: fmt_fun, warning, error\n\n\n\n\n\n\n\nincludes n, %, N by default\nAny unobserved levels of the variables will be present in the resulting ARD.\n\n\n\nadsl |&gt; \n  ard_tabulate(\n    by = ARM2,\n    variables = AGEGR1\n  ) \n\n{cards} data frame: 12 x 11\n\n\n   group1 group1_level variable variable_level stat_name stat_label  stat\n1    ARM2      Placebo   AGEGR1            &gt;64         n          n    72\n2    ARM2      Placebo   AGEGR1            &gt;64         N          N    86\n3    ARM2      Placebo   AGEGR1            &gt;64         p          % 0.837\n4    ARM2      Placebo   AGEGR1          18-64         n          n    14\n5    ARM2      Placebo   AGEGR1          18-64         N          N    86\n6    ARM2      Placebo   AGEGR1          18-64         p          % 0.163\n7    ARM2    Xanomeli…   AGEGR1            &gt;64         n          n   149\n8    ARM2    Xanomeli…   AGEGR1            &gt;64         N          N   168\n9    ARM2    Xanomeli…   AGEGR1            &gt;64         p          % 0.887\n10   ARM2    Xanomeli…   AGEGR1          18-64         n          n    19\n11   ARM2    Xanomeli…   AGEGR1          18-64         N          N   168\n12   ARM2    Xanomeli…   AGEGR1          18-64         p          % 0.113\n\n\nℹ 4 more variables: context, fmt_fun, warning, error\n\n\n\n\n\n\n# create ARD with default summary statistics\nadsl |&gt; \n  ard_summary(\n    variables = AGE\n  )\n\n{cards} data frame: 8 x 8\n\n\n  variable context stat_name stat_label   stat fmt_fun\n1      AGE summary         N          N    254       0\n2      AGE summary      mean       Mean 75.087       1\n3      AGE summary        sd         SD  8.246       1\n4      AGE summary    median     Median     77       1\n5      AGE summary       p25         Q1     70       1\n6      AGE summary       p75         Q3     81       1\n7      AGE summary       min        Min     51       1\n8      AGE summary       max        Max     89       1\n\n\nℹ 2 more variables: warning, error\n\n\n\n\n\n\nby: summary statistics are calculated by all combinations of the by variables, including unobserved factor levels\n\n\nadsl |&gt; \n  ard_summary(\n    variables = AGE,\n    by = ARM2         # stats by treatment arm\n  ) \n\n{cards} data frame: 16 x 10\n\n\n   group1 group1_level variable stat_name stat_label   stat\n1    ARM2      Placebo      AGE         N          N     86\n2    ARM2      Placebo      AGE      mean       Mean 75.209\n3    ARM2      Placebo      AGE        sd         SD   8.59\n4    ARM2      Placebo      AGE    median     Median     76\n5    ARM2      Placebo      AGE       p25         Q1     69\n6    ARM2      Placebo      AGE       p75         Q3     82\n7    ARM2      Placebo      AGE       min        Min     52\n8    ARM2      Placebo      AGE       max        Max     89\n9    ARM2    Xanomeli…      AGE         N          N    168\n10   ARM2    Xanomeli…      AGE      mean       Mean 75.024\n11   ARM2    Xanomeli…      AGE        sd         SD   8.09\n12   ARM2    Xanomeli…      AGE    median     Median     77\n13   ARM2    Xanomeli…      AGE       p25         Q1     71\n14   ARM2    Xanomeli…      AGE       p75         Q3     81\n15   ARM2    Xanomeli…      AGE       min        Min     51\n16   ARM2    Xanomeli…      AGE       max        Max     88\n\n\nℹ 4 more variables: context, fmt_fun, warning, error\n\n\n\n\n\n\nstatistic: specify univariate summary statistics. Accepts any function, base R, from a package, or user-defined.\n\n\ncv &lt;- function(x)  sd(x, na.rm = TRUE)/mean(x, na.rm = TRUE)\n\nadsl |&gt; \n  ard_summary(  \n    variables = AGE,\n    by = ARM2,\n    statistic = ~ list(cv = cv) # customize statistics\n  )\n\n{cards} data frame: 2 x 10\n\n\n  group1 group1_level variable stat_name stat_label  stat\n1   ARM2      Placebo      AGE        cv         cv 0.114\n2   ARM2    Xanomeli…      AGE        cv         cv 0.108\n\n\nℹ 4 more variables: context, fmt_fun, warning, error\n\n\n\n\n\n\nCustomize the statistics returned for each variable\n\n\nadsl |&gt; \n  dplyr::mutate(AGE2 = AGE) |&gt; \n  ard_summary(\n    variables = c(AGE, AGE2),\n    by = ARM2,\n    statistic = list(AGE = list(cv = cv),\n                     AGE2 = continuous_summary_fns(c(\"mean\",\"median\")))\n  )\n\n{cards} data frame: 6 x 10\n\n\n  group1 group1_level variable stat_name stat_label   stat\n1   ARM2      Placebo      AGE        cv         cv  0.114\n2   ARM2      Placebo     AGE2      mean       Mean 75.209\n3   ARM2      Placebo     AGE2    median     Median     76\n4   ARM2    Xanomeli…      AGE        cv         cv  0.108\n5   ARM2    Xanomeli…     AGE2      mean       Mean 75.024\n6   ARM2    Xanomeli…     AGE2    median     Median     77\n\n\nℹ 4 more variables: context, fmt_fun, warning, error\n\n\n\n\n\n\n\nOverride the default formatting functions\nCan also update later via update_ard_fmt_fun()\n\n\n\nadsl |&gt; \n  ard_summary(\n    variables = AGE,\n    by = ARM2,                               \n    fmt_fun = ~list(mean = 0)                \n  ) |&gt; \n  apply_fmt_fun() # add a character column of rounded results\n\n{cards} data frame: 16 x 11\n\n\n   group1 group1_level variable stat_name stat_label   stat stat_fmt\n1    ARM2      Placebo      AGE         N          N     86       86\n2    ARM2      Placebo      AGE      mean       Mean 75.209       75\n3    ARM2      Placebo      AGE        sd         SD   8.59      8.6\n4    ARM2      Placebo      AGE    median     Median     76     76.0\n5    ARM2      Placebo      AGE       p25         Q1     69     69.0\n6    ARM2      Placebo      AGE       p75         Q3     82     82.0\n7    ARM2      Placebo      AGE       min        Min     52     52.0\n8    ARM2      Placebo      AGE       max        Max     89     89.0\n9    ARM2    Xanomeli…      AGE         N          N    168      168\n10   ARM2    Xanomeli…      AGE      mean       Mean 75.024       75\n11   ARM2    Xanomeli…      AGE        sd         SD   8.09      8.1\n12   ARM2    Xanomeli…      AGE    median     Median     77     77.0\n13   ARM2    Xanomeli…      AGE       p25         Q1     71     71.0\n14   ARM2    Xanomeli…      AGE       p75         Q3     81     81.0\n15   ARM2    Xanomeli…      AGE       min        Min     51     51.0\n16   ARM2    Xanomeli…      AGE       max        Max     88     88.0\n\n\nℹ 4 more variables: context, fmt_fun, warning, error\n\n\n\n\n\n\nard_tabulate_value(): similar to ard_tabulate(), but for dichotomous tabulations\nard_hierarchical(): similar to ard_tabulate(), but built for nested tabulations, e.g. AE terms within SOC\nard_mvsummary(): similar to ard_summary(), for multivariate summaries. The function accepts other arguments like the full and subsetted (within the by groups) data sets.\nard_missing(): tabulates rates of missingness\n\nThe results from all these functions are entirely compatible with one another, and can be stacked into a single data frame. 🥞\n\n\n\nIn addition to exporting functions to prepare summaries, {cards} exports many utilities for wrangling ARDs and creating new ARDs.\nConstructing: bind_ard(), tidy_as_ard(), nest_for_ard(), check_ard_structure(), and many more\nWrangling: get_ard_statistics(), replace_null_statistic(), etc.\n\n\n\n\n\ndata and .by are shared by all ard_* calls\nAdditional Options .overall, .missing, .attributes, and .total_n provide even more results\nBy default, summaries of the .by variable are included\n\n\n\nadsl |&gt; \n  ard_stack( \n    .by = ARM2,      \n    ard_summary(variables = AGE, statistic = ~ continuous_summary_fns(c(\"mean\",\"sd\"))), \n    ard_tabulate(variables = AGEGR1, statistic = ~ \"p\")\n  )  \n\n{cards} data frame: 14 x 11\n\n\n   group1 group1_level variable variable_level stat_name stat_label   stat\n1    ARM2      Placebo      AGE                     mean       Mean 75.209\n2    ARM2      Placebo      AGE                       sd         SD   8.59\n3    ARM2      Placebo   AGEGR1            &gt;64         p          %  0.837\n4    ARM2      Placebo   AGEGR1          18-64         p          %  0.163\n5    ARM2    Xanomeli…      AGE                     mean       Mean 75.024\n6    ARM2    Xanomeli…      AGE                       sd         SD   8.09\n7    ARM2    Xanomeli…   AGEGR1            &gt;64         p          %  0.887\n8    ARM2    Xanomeli…   AGEGR1          18-64         p          %  0.113\n9    &lt;NA&gt;                  ARM2        Placebo         n          n     86\n10   &lt;NA&gt;                  ARM2        Placebo         N          N    254\n11   &lt;NA&gt;                  ARM2        Placebo         p          %  0.339\n12   &lt;NA&gt;                  ARM2      Xanomeli…         n          n    168\n13   &lt;NA&gt;                  ARM2      Xanomeli…         N          N    254\n14   &lt;NA&gt;                  ARM2      Xanomeli…         p          %  0.661\n\n\nℹ 4 more variables: context, fmt_fun, warning, error\n\n\n\n\n\n\n\nLet’s compute summaries for a demography table that includes age (AGE), age group (AGEGR1), and sex (SEX) by treatment (ARM2)\nFirst, we compute the continuous summaries for AGE by ARM2\n\n\n\nard_summary(\n  data = adsl,\n  by = ,\n  variables = \n)\n\n\n\n\n\n\nLet’s compute summaries for a demography table that includes age (AGE), age group (AGEGR1), and sex (SEX) by treatment (ARM2)\nFirst, we compute the continuous summaries for AGE by ARM2\n\n\n\nard_summary(\n  data = adsl,\n  by = ARM2,\n  variables = AGE \n)\n\n{cards} data frame: 16 x 10\n\n\n   group1 group1_level variable stat_name stat_label   stat\n1    ARM2      Placebo      AGE         N          N     86\n2    ARM2      Placebo      AGE      mean       Mean 75.209\n3    ARM2      Placebo      AGE        sd         SD   8.59\n4    ARM2      Placebo      AGE    median     Median     76\n5    ARM2      Placebo      AGE       p25         Q1     69\n6    ARM2      Placebo      AGE       p75         Q3     82\n7    ARM2      Placebo      AGE       min        Min     52\n8    ARM2      Placebo      AGE       max        Max     89\n9    ARM2    Xanomeli…      AGE         N          N    168\n10   ARM2    Xanomeli…      AGE      mean       Mean 75.024\n11   ARM2    Xanomeli…      AGE        sd         SD   8.09\n12   ARM2    Xanomeli…      AGE    median     Median     77\n13   ARM2    Xanomeli…      AGE       p25         Q1     71\n14   ARM2    Xanomeli…      AGE       p75         Q3     81\n15   ARM2    Xanomeli…      AGE       min        Min     51\n16   ARM2    Xanomeli…      AGE       max        Max     88\n\n\nℹ 4 more variables: context, fmt_fun, warning, error\n\n\n\n\n\n\n\nLet’s compute summaries for a demography table that includes age (AGE), age group (AGEGR1), and sex (SEX) by treatment (ARM2)\nNext, we compute the categorical summaries for AGEGR1 and SEX by ARM2\n\n\n\nard_tabulate(\n  data = adsl,\n  by = ,\n  variables = \n)\n\n\n\n\n\n\nLet’s compute summaries for a demography table that includes age (AGE), age group (AGEGR1), and sex (SEX) by treatment (ARM2)\nNext, we compute the categorical summaries for AGEGR1 and SEX by ARM2\n\n\n\nard_tabulate(\n  data = adsl,\n  by = ARM2,\n  variables = c(AGEGR1, SEX) \n)\n\n{cards} data frame: 24 x 11\n\n\n   group1 group1_level variable variable_level stat_name stat_label  stat\n1    ARM2      Placebo   AGEGR1            &gt;64         n          n    72\n2    ARM2      Placebo   AGEGR1            &gt;64         N          N    86\n3    ARM2      Placebo   AGEGR1            &gt;64         p          % 0.837\n4    ARM2      Placebo   AGEGR1          18-64         n          n    14\n5    ARM2      Placebo   AGEGR1          18-64         N          N    86\n6    ARM2      Placebo   AGEGR1          18-64         p          % 0.163\n7    ARM2      Placebo      SEX              F         n          n    53\n8    ARM2      Placebo      SEX              F         N          N    86\n9    ARM2      Placebo      SEX              F         p          % 0.616\n10   ARM2      Placebo      SEX              M         n          n    33\n\n\nℹ 14 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fun, warning, error\n\n\n\n\n\n\nLet’s compute summaries for a demography table that includes age (AGE), age group (AGEGR1), and sex (SEX) by treatment (ARM2) in a *single ard_stack() call, including:\n\nsummaries by ARM2 as performed above\ncontinuous summaries from part A for AGE\ncategorical summaries from part B for AGEGR1 and SEX\n\n\n\nard_stack(\n  data = adsl,\n  .by = ARM2,\n  \n  # add ard_* calls here\n  \n)\n\n\n\n\n\nLet’s compute summaries for a demography table that includes age (AGE), age group (AGEGR1), and sex (SEX) by treatment (ARM2) in a *single ard_stack() call, including:\n\nsummaries by ARM2 as performed above\ncontinuous summaries from part A for AGE\ncategorical summaries from part B for AGEGR1 and SEX\n\n\n\nard_stack(\n  data = adsl,\n  .by = ARM2,\n  ard_continuous(variables = AGE),\n  ard_categorical(variables = c(AGEGR1, SEX))\n)\n\n{cards} data frame: 46 x 11\n\n\n   group1 group1_level variable variable_level stat_name stat_label   stat\n1    ARM2      Placebo      AGE                        N          N     86\n2    ARM2      Placebo      AGE                     mean       Mean 75.209\n3    ARM2      Placebo      AGE                       sd         SD   8.59\n4    ARM2      Placebo      AGE                   median     Median     76\n5    ARM2      Placebo      AGE                      p25         Q1     69\n6    ARM2      Placebo      AGE                      p75         Q3     82\n7    ARM2      Placebo      AGE                      min        Min     52\n8    ARM2      Placebo      AGE                      max        Max     89\n9    ARM2      Placebo   AGEGR1            &gt;64         n          n     72\n10   ARM2      Placebo   AGEGR1            &gt;64         N          N     86\n\n\nℹ 36 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fun, warning, error\n\n\n\n\n\n\nWe can also add:\n\nOverall summaries for all variables\nTotal N\n\n\n\nard_stack(\n  data = adsl,\n  .by = ARM2,\n  ard_continuous(variables = AGE),\n  ard_categorical(variables = c(AGEGR1, SEX)),\n  .overall = TRUE,\n  .total_n = TRUE\n)\n\n{cards} data frame: 67 x 11\n\n\n   group1 group1_level variable variable_level stat_name stat_label   stat\n1    ARM2      Placebo      AGE                        N          N     86\n2    ARM2      Placebo      AGE                     mean       Mean 75.209\n3    ARM2      Placebo      AGE                       sd         SD   8.59\n4    ARM2      Placebo      AGE                   median     Median     76\n5    ARM2      Placebo      AGE                      p25         Q1     69\n6    ARM2      Placebo      AGE                      p75         Q3     82\n7    ARM2      Placebo      AGE                      min        Min     52\n8    ARM2      Placebo      AGE                      max        Max     89\n9    ARM2      Placebo   AGEGR1            &gt;64         n          n     72\n10   ARM2      Placebo   AGEGR1            &gt;64         N          N     86\n\n\nℹ 57 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fun, warning, error\n\n\n\n\n\nFollowing hierarchical summary functions aid in nested tabulations (e.g. AE terms within SOC):\n\nard_hierarchical(): calculating nested subject-level rates\nard_hierarchical_count(): calculating nested event-level counts\n\n\n\n\n\nThis function specializes in calculating subject-level rates.\n\nRates computed on lowest level variables, nested within others\nid helps to check that no duplicate rows exist within the c(id, variables) columns\ndenominator dictates the denominator for the rates\n\n\n\nadae |&gt; \n  dplyr::slice_tail(n = 1L, by = c(USUBJID, ARM, AESOC, AEDECOD)) |&gt; \n  ard_hierarchical(\n    variables = c(AESOC, AEDECOD),\n    by = TRT01A,\n    id = USUBJID,\n    denominator = adsl\n  )\n\n{cards} data frame: 81 x 13\n\n\n   group1 group1_level group2 group2_level variable variable_level stat_name\n1  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         n\n2  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         N\n3  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         p\n4  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      HIATUS H…         n\n5  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      HIATUS H…         N\n6  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      HIATUS H…         p\n7  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD       VOMITING         n\n8  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD       VOMITING         N\n9  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD       VOMITING         p\n10 TRT01A      Placebo  AESOC    GENERAL …  AEDECOD      APPLICAT…         n\n   stat_label  stat\n1           n     9\n2           N    86\n3           % 0.105\n4           n     1\n5           N    86\n6           % 0.012\n7           n     3\n8           N    86\n9           % 0.035\n10          n     3\n\n\nℹ 71 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fun, warning, error\n\n\n\n\n\n\nThis function specializes in calculating event-level frequencies.\n\n\nadae |&gt; \n  ard_hierarchical_count( \n    variables = c(AESOC, AEDECOD),\n    by = TRT01A\n  )\n\n{cards} data frame: 27 x 13\n\n\n   group1 group1_level group2 group2_level variable variable_level stat_name\n1  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         n\n2  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      HIATUS H…         n\n3  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD       VOMITING         n\n4  TRT01A      Placebo  AESOC    GENERAL …  AEDECOD      APPLICAT…         n\n5  TRT01A      Placebo  AESOC    GENERAL …  AEDECOD      APPLICAT…         n\n6  TRT01A      Placebo  AESOC    GENERAL …  AEDECOD        FATIGUE         n\n7  TRT01A      Placebo  AESOC    SKIN AND…  AEDECOD       ERYTHEMA         n\n8  TRT01A      Placebo  AESOC    SKIN AND…  AEDECOD       PRURITUS         n\n9  TRT01A      Placebo  AESOC    SKIN AND…  AEDECOD      PRURITUS…         n\n10 TRT01A    Xanomeli…  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         n\n   stat_label stat\n1           n   10\n2           n    2\n3           n    3\n4           n    3\n5           n   10\n6           n    2\n7           n   13\n8           n   11\n9           n    0\n10          n    3\n\n\nℹ 17 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fun, warning, error\n\n\n\n\n\n\nDisplays for hierarchical data typically report on each level of the hierarchy (Any AE Overall, by System Organ Class, by Preferred Term)\nThis can mean several calls to the ard_hierarchical_* functions\nFurther, subject-level summaries require a different subset of the data each time. For example, to calculate Overall rates, we need to subset to 1 record per subject in ADAE.\n\n\n\nIs there an easier way?\n\n\n\n\n\n\n\nard_hierarchical stacking functions simplify this multi-step process into a single step\nThe id argument is used to subset the data along the way\n\n\n\nadae |&gt; \n  ard_stack_hierarchical(\n    variables = c(AESOC, AEDECOD),\n    by = TRT01A,\n    id = USUBJID,\n    denominator = pharmaverseadam::adsl\n  )\n\n\n\n{cards} data frame: 12 x 13\n\n\n   group1 group1_level group2 group2_level variable variable_level stat_name\n1  TRT01A      Placebo   &lt;NA&gt;                 AESOC      GASTROIN…         n\n2  TRT01A      Placebo   &lt;NA&gt;                 AESOC      GASTROIN…         N\n3  TRT01A      Placebo   &lt;NA&gt;                 AESOC      GASTROIN…         p\n4  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         n\n5  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         N\n6  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         p\n7  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      HIATUS H…         n\n8  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      HIATUS H…         N\n9  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      HIATUS H…         p\n10 TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD       VOMITING         n\n11 TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD       VOMITING         N\n12 TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD       VOMITING         p\n   stat_label  stat\n1           n    12\n2           N    86\n3           %  0.14\n4           n     9\n5           N    86\n6           % 0.105\n7           n     1\n8           N    86\n9           % 0.012\n10          n     3\n11          N    86\n12          % 0.035\n\n\nℹ 4 more variables: context, fmt_fun, warning, error\n\n\n\n\n\n\n\nBelow is the stacking function for event-level summaries, aligned with ard_hierarchical_count()\n\n\n\nadae |&gt; \n  ard_stack_hierarchical_count(\n    variables = c(AESOC, AEDECOD),\n    by = TRT01A, \n    denominator = pharmaverseadam::adsl\n  )\n\n\n\n{cards} data frame: 4 x 13\n\n\n  group1 group1_level group2 group2_level variable variable_level stat_name\n1 TRT01A      Placebo   &lt;NA&gt;                 AESOC      GASTROIN…         n\n2 TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         n\n3 TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      HIATUS H…         n\n4 TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD       VOMITING         n\n  stat_label stat\n1          n   15\n2          n   10\n3          n    2\n4          n    3\n\n\nℹ 4 more variables: context, fmt_fun, warning, error\n\n\n\n\n\n\nNavigate to Posit Cloud script exercises/04-ARD.R\nCompute the nested AE tabulations as described.\nAdd the “completed” sticky note to your laptop when complete.\n\n\n\n\n−+\n10:00\n\n\n\n\n\n\n\nExtension of the {cards} package, providing additional functions to create Analysis Results Datasets (ARDs)\nThe {cardx} package exports many ard_*() function for statistical methods.\n\n\n\n\n\n\n\n\n\n\nExports ARD frameworks for statistical analyses from many packages\n\n\n  - {stats}\n  - {car}\n  - {effectsize}\n  - {emmeans}\n  - {geepack}\n  - {lme4}\n  - {parameters}\n  - {smd}\n  - {survey}\n  - {survival}\n\n\nThis list is growing (rather quickly) 🌱\n\n\n\n\n\n\nWe see the results like the mean difference, the confidence interval, and p-value as expected.\nAnd we also see the function’s inputs, which is incredibly useful for re-use, e.g. we know the we did not use equal variances.\n\n\n\nadsl |&gt; \n  cardx::ard_stats_t_test(by = ARM2, variables = AGE)\n\n{cards} data frame: 14 x 9\n\n\n   group1 variable   context   stat_name stat_label      stat\n1    ARM2      AGE stats_t_…    estimate  Mean Dif…     0.185\n2    ARM2      AGE stats_t_…   estimate1  Group 1 …    75.209\n3    ARM2      AGE stats_t_…   estimate2  Group 2 …    75.024\n4    ARM2      AGE stats_t_…   statistic  t Statis…     0.166\n5    ARM2      AGE stats_t_…     p.value    p-value     0.868\n6    ARM2      AGE stats_t_…   parameter  Degrees …   162.643\n7    ARM2      AGE stats_t_…    conf.low  CI Lower…     -2.02\n8    ARM2      AGE stats_t_…   conf.high  CI Upper…     2.391\n9    ARM2      AGE stats_t_…      method     method Welch Tw…\n10   ARM2      AGE stats_t_… alternative  alternat… two.sided\n11   ARM2      AGE stats_t_…          mu    H0 Mean         0\n12   ARM2      AGE stats_t_…      paired  Paired t…     FALSE\n13   ARM2      AGE stats_t_…   var.equal  Equal Va…     FALSE\n14   ARM2      AGE stats_t_…  conf.level  CI Confi…      0.95\n\n\nℹ 3 more variables: fmt_fun, warning, error\n\n\n\n\n\n\n\nWhat to do if a method you need is not implemented?\nIt’s simple to wrap existing frameworks to customize.\nOne-sample t-test example utilizing cards::ard_continuous().\n\n\n\nadsl |&gt; \n  cards::ard_summary(\n    variables = AGE,\n    statistic = everything() ~ list(t_test = \\(x) t.test(x) |&gt; broom::tidy())\n  ) |&gt; \n  dplyr::mutate(context = \"t_test_one_sample\")\n\n{cards} data frame: 8 x 8\n\n\n  variable   context   stat_name stat_label      stat fmt_fun\n1      AGE t_test_o…    estimate   estimate    75.087       1\n2      AGE t_test_o…   statistic  statistic   145.119       1\n3      AGE t_test_o…     p.value    p.value         0       1\n4      AGE t_test_o…   parameter  parameter       253       1\n5      AGE t_test_o…    conf.low   conf.low    74.068       1\n6      AGE t_test_o…   conf.high  conf.high    76.106       1\n7      AGE t_test_o…      method     method One Samp…    &lt;fn&gt;\n8      AGE t_test_o… alternative  alternat… two.sided    &lt;fn&gt;\n\n\nℹ 2 more variables: warning, error\n\n\n\n\n\n\n\nHow to modify if we need a two-sample test, or more generally accessing other columns in the data frame.\n\n\n\nadsl |&gt; \n  cards::ard_mvsummary(\n    variables = AGE,\n    statistic = \n      ~ list(t_test = \\(x, data, ...) t.test(x ~ data$ARM2) |&gt; broom::tidy())\n  ) |&gt; \n  dplyr::mutate(group1 = \"ARM2\", context = \"t_test_two_sample\") |&gt; \n  cards::tidy_ard_column_order()\n\n{cards} data frame: 10 x 9\n\n\n   group1 variable   context   stat_name stat_label      stat\n1    ARM2      AGE t_test_t…    estimate   estimate     0.185\n2    ARM2      AGE t_test_t…   estimate1  estimate1    75.209\n3    ARM2      AGE t_test_t…   estimate2  estimate2    75.024\n4    ARM2      AGE t_test_t…   statistic  statistic     0.166\n5    ARM2      AGE t_test_t…     p.value    p.value     0.868\n6    ARM2      AGE t_test_t…   parameter  parameter   162.643\n7    ARM2      AGE t_test_t…    conf.low   conf.low     -2.02\n8    ARM2      AGE t_test_t…   conf.high  conf.high     2.391\n9    ARM2      AGE t_test_t…      method     method Welch Tw…\n10   ARM2      AGE t_test_t… alternative  alternat… two.sided\n\n\nℹ 3 more variables: fmt_fun, warning, error\n\n\n\n\n\n\nIncludes functionality to summarize nearly every type of regression model in the R ecosystem:\n\n\nbetareg::betareg(), biglm::bigglm(), brms::brm(), cmprsk::crr(), fixest::feglm(), fixest::femlm(), fixest::feNmlm(), fixest::feols(), gam::gam(), geepack::geeglm(), glmmTMB::glmmTMB(), glmtoolbox::glmgee(), lavaan::lavaan(), lfe::felm(), lme4::glmer.nb(), lme4::glmer(), lme4::lmer(), logitr::logitr(), MASS::glm.nb(), MASS::polr(), mgcv::gam(), mice::mira, mmrm::mmrm(), multgee::nomLORgee(), multgee::ordLORgee(), nnet::multinom(), ordinal::clm(), ordinal::clmm(), parsnip::model_fit, plm::plm(), pscl::hurdle(), pscl::zeroinfl(), rstanarm::stan_glm(), stats::aov(), stats::glm(), stats::lm(), stats::nls(), survey::svycoxph(), survey::svyglm(), survey::svyolr(), survival::cch(), survival::clogit(), survival::coxph(), survival::survreg(), svyVGAM::svy_vglm(), tidycmprsk::crr(), VGAM::vgam(), VGAM::vglm() (and more)\n\n\n\n\n\nThe cardx::ard_regression() does a lot for us in the background.\n\nIdentifies the variable from the regression terms (i.e. groups levels of the same variable)\nIdentifies reference groups from categorical covariates\nFinds variable labels from the source data frames\nKnows the total N of the model, the number of events, and can do the same for each level of categorical variables\nContextually aware of slopes, odds ratios, hazard ratios, and incidence rate ratios\nAnd much much more.\n\n\n\nlm(AGE ~ ARM2, data = adsl) |&gt;\n  cardx::ard_regression(add_estimate_to_reference_rows = TRUE)\n\n{cards} data frame: 27 x 9\n\n\n   variable variable_level   context      stat_name stat_label      stat\n1      ARM2        Placebo regressi…           term       term ARM2Plac…\n2      ARM2        Placebo regressi…      var_label      Label      ARM2\n3      ARM2        Placebo regressi…      var_class      Class character\n4      ARM2        Placebo regressi…       var_type       Type dichotom…\n5      ARM2        Placebo regressi…    var_nlevels   N Levels         2\n6      ARM2        Placebo regressi…      contrasts  contrasts contr.tr…\n7      ARM2        Placebo regressi… contrasts_type  Contrast… treatment\n8      ARM2        Placebo regressi…  reference_row  referenc…      TRUE\n9      ARM2        Placebo regressi…          label  Level La…   Placebo\n10     ARM2        Placebo regressi…          n_obs     N Obs.        86\n\n\nℹ 17 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 3 more variables: fmt_fun, warning, error\n\n\n\n\n\n\nWhat happens when statistics are un-calculable?\n\n\nard_gone_wrong &lt;- \n  adsl |&gt; \n  ard_summary(\n    by = ARM2,\n    variable = AGEGR1,\n    statistic = ~list(kurtosis = \\(x) e1071::kurtosis(x))\n  ) |&gt; \n  cards::replace_null_statistic()\nard_gone_wrong\n\n{cards} data frame: 2 x 10\n\n\n  group1 group1_level variable stat_name stat_label stat   warning     error\n1   ARM2      Placebo   AGEGR1  kurtosis   kurtosis   NA argument… non-nume…\n2   ARM2    Xanomeli…   AGEGR1  kurtosis   kurtosis   NA argument… non-nume…\n\n\nℹ 2 more variables: context, fmt_fun\n\n\n\ncards::print_ard_conditions(ard_gone_wrong)\n\n\n\n\nWhere is the statistic? AGEGR1 is character\nEven when there are errors or warnings, we still get the ARD with the expected structure returned.\n\nTHIS IS BIG! There are MANY circumstances, when you are designing TLGs early in a study when you do not have all the data required to calculate every statistic.\nThis allows you to design everything up-front.\n\nWe can also report these warnings and errors back to users. &lt;!CLICK!&gt;"
  },
  {
    "objectID": "slides/04-ARD/cards.html#cards-introduction",
    "href": "slides/04-ARD/cards.html#cards-introduction",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "Part of the Pharmaverse\nCollaboration between Roche, GSK, Novartis, Eli Lilly, Pfizer\nContains a variety of utilities for making ARDs\nCan be used within the ARS workflow and separately\n36k downloads per month 🤯"
  },
  {
    "objectID": "slides/04-ARD/cards.html#data-used-in-examples",
    "href": "slides/04-ARD/cards.html#data-used-in-examples",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "ADSL from pharmaverseadam\n\n\nCode\nadsl &lt;- pharmaverseadam::adsl |&gt; \n  dplyr::filter(SAFFL==\"Y\") |&gt; \n  dplyr::mutate(ARM2 = ifelse(startsWith(ARM, \"Xanomeline\"), \"Xanomeline\", ARM))\n\n\nADAE from pharmaverseadam\n\n\nCode\nadae &lt;- pharmaverseadam::adae |&gt; \n  dplyr::filter(SAFFL==\"Y\") |&gt; \n  dplyr::mutate(ARM2 = ifelse(startsWith(ARM, \"Xanomeline\"), \"Xanomeline\", ARM)) |&gt; \n  dplyr::filter(AESOC %in% unique(AESOC)[1:3]) |&gt; \n  dplyr::group_by(AESOC) |&gt; \n  dplyr::filter(AEDECOD %in% unique(AEDECOD)[1:3]) |&gt; \n  dplyr::ungroup()"
  },
  {
    "objectID": "slides/04-ARD/cards.html#cards-ard_tabulate",
    "href": "slides/04-ARD/cards.html#cards-ard_tabulate",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "includes n, %, N by default\nAny unobserved levels of the variables will be present in the resulting ARD.\n\n\n\nlibrary(cards)\n\nadsl |&gt; \n  ard_tabulate(\n    variables = AGEGR1\n  ) \n\n{cards} data frame: 6 x 9\n\n\n  variable variable_level  context stat_name stat_label stat\n1   AGEGR1            &gt;64 tabulate         n          n  221\n2   AGEGR1            &gt;64 tabulate         N          N  254\n3   AGEGR1            &gt;64 tabulate         p          % 0.87\n4   AGEGR1          18-64 tabulate         n          n   33\n5   AGEGR1          18-64 tabulate         N          N  254\n6   AGEGR1          18-64 tabulate         p          % 0.13\n\n\nℹ 3 more variables: fmt_fun, warning, error"
  },
  {
    "objectID": "slides/04-ARD/cards.html#cards-ard_tabulate-1",
    "href": "slides/04-ARD/cards.html#cards-ard_tabulate-1",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "includes n, %, N by default\nAny unobserved levels of the variables will be present in the resulting ARD.\n\n\n\nadsl |&gt; \n  ard_tabulate(\n    by = ARM2,\n    variables = AGEGR1\n  ) \n\n{cards} data frame: 12 x 11\n\n\n   group1 group1_level variable variable_level stat_name stat_label  stat\n1    ARM2      Placebo   AGEGR1            &gt;64         n          n    72\n2    ARM2      Placebo   AGEGR1            &gt;64         N          N    86\n3    ARM2      Placebo   AGEGR1            &gt;64         p          % 0.837\n4    ARM2      Placebo   AGEGR1          18-64         n          n    14\n5    ARM2      Placebo   AGEGR1          18-64         N          N    86\n6    ARM2      Placebo   AGEGR1          18-64         p          % 0.163\n7    ARM2    Xanomeli…   AGEGR1            &gt;64         n          n   149\n8    ARM2    Xanomeli…   AGEGR1            &gt;64         N          N   168\n9    ARM2    Xanomeli…   AGEGR1            &gt;64         p          % 0.887\n10   ARM2    Xanomeli…   AGEGR1          18-64         n          n    19\n11   ARM2    Xanomeli…   AGEGR1          18-64         N          N   168\n12   ARM2    Xanomeli…   AGEGR1          18-64         p          % 0.113\n\n\nℹ 4 more variables: context, fmt_fun, warning, error"
  },
  {
    "objectID": "slides/04-ARD/cards.html#cards-ard_summary",
    "href": "slides/04-ARD/cards.html#cards-ard_summary",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "# create ARD with default summary statistics\nadsl |&gt; \n  ard_summary(\n    variables = AGE\n  )\n\n{cards} data frame: 8 x 8\n\n\n  variable context stat_name stat_label   stat fmt_fun\n1      AGE summary         N          N    254       0\n2      AGE summary      mean       Mean 75.087       1\n3      AGE summary        sd         SD  8.246       1\n4      AGE summary    median     Median     77       1\n5      AGE summary       p25         Q1     70       1\n6      AGE summary       p75         Q3     81       1\n7      AGE summary       min        Min     51       1\n8      AGE summary       max        Max     89       1\n\n\nℹ 2 more variables: warning, error"
  },
  {
    "objectID": "slides/04-ARD/cards.html#cards-ard_summary-by-variable",
    "href": "slides/04-ARD/cards.html#cards-ard_summary-by-variable",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "by: summary statistics are calculated by all combinations of the by variables, including unobserved factor levels\n\n\nadsl |&gt; \n  ard_summary(\n    variables = AGE,\n    by = ARM2         # stats by treatment arm\n  ) \n\n{cards} data frame: 16 x 10\n\n\n   group1 group1_level variable stat_name stat_label   stat\n1    ARM2      Placebo      AGE         N          N     86\n2    ARM2      Placebo      AGE      mean       Mean 75.209\n3    ARM2      Placebo      AGE        sd         SD   8.59\n4    ARM2      Placebo      AGE    median     Median     76\n5    ARM2      Placebo      AGE       p25         Q1     69\n6    ARM2      Placebo      AGE       p75         Q3     82\n7    ARM2      Placebo      AGE       min        Min     52\n8    ARM2      Placebo      AGE       max        Max     89\n9    ARM2    Xanomeli…      AGE         N          N    168\n10   ARM2    Xanomeli…      AGE      mean       Mean 75.024\n11   ARM2    Xanomeli…      AGE        sd         SD   8.09\n12   ARM2    Xanomeli…      AGE    median     Median     77\n13   ARM2    Xanomeli…      AGE       p25         Q1     71\n14   ARM2    Xanomeli…      AGE       p75         Q3     81\n15   ARM2    Xanomeli…      AGE       min        Min     51\n16   ARM2    Xanomeli…      AGE       max        Max     88\n\n\nℹ 4 more variables: context, fmt_fun, warning, error"
  },
  {
    "objectID": "slides/04-ARD/cards.html#cards-ard_summary-statistics",
    "href": "slides/04-ARD/cards.html#cards-ard_summary-statistics",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "statistic: specify univariate summary statistics. Accepts any function, base R, from a package, or user-defined.\n\n\ncv &lt;- function(x)  sd(x, na.rm = TRUE)/mean(x, na.rm = TRUE)\n\nadsl |&gt; \n  ard_summary(  \n    variables = AGE,\n    by = ARM2,\n    statistic = ~ list(cv = cv) # customize statistics\n  )\n\n{cards} data frame: 2 x 10\n\n\n  group1 group1_level variable stat_name stat_label  stat\n1   ARM2      Placebo      AGE        cv         cv 0.114\n2   ARM2    Xanomeli…      AGE        cv         cv 0.108\n\n\nℹ 4 more variables: context, fmt_fun, warning, error"
  },
  {
    "objectID": "slides/04-ARD/cards.html#cards-ard_summary-statistics-1",
    "href": "slides/04-ARD/cards.html#cards-ard_summary-statistics-1",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "Customize the statistics returned for each variable\n\n\nadsl |&gt; \n  dplyr::mutate(AGE2 = AGE) |&gt; \n  ard_summary(\n    variables = c(AGE, AGE2),\n    by = ARM2,\n    statistic = list(AGE = list(cv = cv),\n                     AGE2 = continuous_summary_fns(c(\"mean\",\"median\")))\n  )\n\n{cards} data frame: 6 x 10\n\n\n  group1 group1_level variable stat_name stat_label   stat\n1   ARM2      Placebo      AGE        cv         cv  0.114\n2   ARM2      Placebo     AGE2      mean       Mean 75.209\n3   ARM2      Placebo     AGE2    median     Median     76\n4   ARM2    Xanomeli…      AGE        cv         cv  0.108\n5   ARM2    Xanomeli…     AGE2      mean       Mean 75.024\n6   ARM2    Xanomeli…     AGE2    median     Median     77\n\n\nℹ 4 more variables: context, fmt_fun, warning, error"
  },
  {
    "objectID": "slides/04-ARD/cards.html#cards-ard_summary-fmt_fun",
    "href": "slides/04-ARD/cards.html#cards-ard_summary-fmt_fun",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "Override the default formatting functions\nCan also update later via update_ard_fmt_fun()\n\n\n\nadsl |&gt; \n  ard_summary(\n    variables = AGE,\n    by = ARM2,                               \n    fmt_fun = ~list(mean = 0)                \n  ) |&gt; \n  apply_fmt_fun() # add a character column of rounded results\n\n{cards} data frame: 16 x 11\n\n\n   group1 group1_level variable stat_name stat_label   stat stat_fmt\n1    ARM2      Placebo      AGE         N          N     86       86\n2    ARM2      Placebo      AGE      mean       Mean 75.209       75\n3    ARM2      Placebo      AGE        sd         SD   8.59      8.6\n4    ARM2      Placebo      AGE    median     Median     76     76.0\n5    ARM2      Placebo      AGE       p25         Q1     69     69.0\n6    ARM2      Placebo      AGE       p75         Q3     82     82.0\n7    ARM2      Placebo      AGE       min        Min     52     52.0\n8    ARM2      Placebo      AGE       max        Max     89     89.0\n9    ARM2    Xanomeli…      AGE         N          N    168      168\n10   ARM2    Xanomeli…      AGE      mean       Mean 75.024       75\n11   ARM2    Xanomeli…      AGE        sd         SD   8.09      8.1\n12   ARM2    Xanomeli…      AGE    median     Median     77     77.0\n13   ARM2    Xanomeli…      AGE       p25         Q1     71     71.0\n14   ARM2    Xanomeli…      AGE       p75         Q3     81     81.0\n15   ARM2    Xanomeli…      AGE       min        Min     51     51.0\n16   ARM2    Xanomeli…      AGE       max        Max     88     88.0\n\n\nℹ 4 more variables: context, fmt_fun, warning, error"
  },
  {
    "objectID": "slides/04-ARD/cards.html#cards-other-summary-functions",
    "href": "slides/04-ARD/cards.html#cards-other-summary-functions",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "ard_tabulate_value(): similar to ard_tabulate(), but for dichotomous tabulations\nard_hierarchical(): similar to ard_tabulate(), but built for nested tabulations, e.g. AE terms within SOC\nard_mvsummary(): similar to ard_summary(), for multivariate summaries. The function accepts other arguments like the full and subsetted (within the by groups) data sets.\nard_missing(): tabulates rates of missingness\n\nThe results from all these functions are entirely compatible with one another, and can be stacked into a single data frame. 🥞"
  },
  {
    "objectID": "slides/04-ARD/cards.html#cards-other-functions",
    "href": "slides/04-ARD/cards.html#cards-other-functions",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "In addition to exporting functions to prepare summaries, {cards} exports many utilities for wrangling ARDs and creating new ARDs.\nConstructing: bind_ard(), tidy_as_ard(), nest_for_ard(), check_ard_structure(), and many more\nWrangling: get_ard_statistics(), replace_null_statistic(), etc."
  },
  {
    "objectID": "slides/04-ARD/cards.html#cards-stacking-utilities",
    "href": "slides/04-ARD/cards.html#cards-stacking-utilities",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "data and .by are shared by all ard_* calls\nAdditional Options .overall, .missing, .attributes, and .total_n provide even more results\nBy default, summaries of the .by variable are included\n\n\n\nadsl |&gt; \n  ard_stack( \n    .by = ARM2,      \n    ard_summary(variables = AGE, statistic = ~ continuous_summary_fns(c(\"mean\",\"sd\"))), \n    ard_tabulate(variables = AGEGR1, statistic = ~ \"p\")\n  )  \n\n{cards} data frame: 14 x 11\n\n\n   group1 group1_level variable variable_level stat_name stat_label   stat\n1    ARM2      Placebo      AGE                     mean       Mean 75.209\n2    ARM2      Placebo      AGE                       sd         SD   8.59\n3    ARM2      Placebo   AGEGR1            &gt;64         p          %  0.837\n4    ARM2      Placebo   AGEGR1          18-64         p          %  0.163\n5    ARM2    Xanomeli…      AGE                     mean       Mean 75.024\n6    ARM2    Xanomeli…      AGE                       sd         SD   8.09\n7    ARM2    Xanomeli…   AGEGR1            &gt;64         p          %  0.887\n8    ARM2    Xanomeli…   AGEGR1          18-64         p          %  0.113\n9    &lt;NA&gt;                  ARM2        Placebo         n          n     86\n10   &lt;NA&gt;                  ARM2        Placebo         N          N    254\n11   &lt;NA&gt;                  ARM2        Placebo         p          %  0.339\n12   &lt;NA&gt;                  ARM2      Xanomeli…         n          n    168\n13   &lt;NA&gt;                  ARM2      Xanomeli…         N          N    254\n14   &lt;NA&gt;                  ARM2      Xanomeli…         p          %  0.661\n\n\nℹ 4 more variables: context, fmt_fun, warning, error"
  },
  {
    "objectID": "slides/04-ARD/cards.html#quick-recap",
    "href": "slides/04-ARD/cards.html#quick-recap",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "Let’s compute summaries for a demography table that includes age (AGE), age group (AGEGR1), and sex (SEX) by treatment (ARM2)\nFirst, we compute the continuous summaries for AGE by ARM2\n\n\n\nard_summary(\n  data = adsl,\n  by = ,\n  variables = \n)"
  },
  {
    "objectID": "slides/04-ARD/cards.html#quick-recap-1",
    "href": "slides/04-ARD/cards.html#quick-recap-1",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "Let’s compute summaries for a demography table that includes age (AGE), age group (AGEGR1), and sex (SEX) by treatment (ARM2)\nFirst, we compute the continuous summaries for AGE by ARM2\n\n\n\nard_summary(\n  data = adsl,\n  by = ARM2,\n  variables = AGE \n)\n\n{cards} data frame: 16 x 10\n\n\n   group1 group1_level variable stat_name stat_label   stat\n1    ARM2      Placebo      AGE         N          N     86\n2    ARM2      Placebo      AGE      mean       Mean 75.209\n3    ARM2      Placebo      AGE        sd         SD   8.59\n4    ARM2      Placebo      AGE    median     Median     76\n5    ARM2      Placebo      AGE       p25         Q1     69\n6    ARM2      Placebo      AGE       p75         Q3     82\n7    ARM2      Placebo      AGE       min        Min     52\n8    ARM2      Placebo      AGE       max        Max     89\n9    ARM2    Xanomeli…      AGE         N          N    168\n10   ARM2    Xanomeli…      AGE      mean       Mean 75.024\n11   ARM2    Xanomeli…      AGE        sd         SD   8.09\n12   ARM2    Xanomeli…      AGE    median     Median     77\n13   ARM2    Xanomeli…      AGE       p25         Q1     71\n14   ARM2    Xanomeli…      AGE       p75         Q3     81\n15   ARM2    Xanomeli…      AGE       min        Min     51\n16   ARM2    Xanomeli…      AGE       max        Max     88\n\n\nℹ 4 more variables: context, fmt_fun, warning, error"
  },
  {
    "objectID": "slides/04-ARD/cards.html#quick-recap-2",
    "href": "slides/04-ARD/cards.html#quick-recap-2",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "Let’s compute summaries for a demography table that includes age (AGE), age group (AGEGR1), and sex (SEX) by treatment (ARM2)\nNext, we compute the categorical summaries for AGEGR1 and SEX by ARM2\n\n\n\nard_tabulate(\n  data = adsl,\n  by = ,\n  variables = \n)"
  },
  {
    "objectID": "slides/04-ARD/cards.html#quick-recap-3",
    "href": "slides/04-ARD/cards.html#quick-recap-3",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "Let’s compute summaries for a demography table that includes age (AGE), age group (AGEGR1), and sex (SEX) by treatment (ARM2)\nNext, we compute the categorical summaries for AGEGR1 and SEX by ARM2\n\n\n\nard_tabulate(\n  data = adsl,\n  by = ARM2,\n  variables = c(AGEGR1, SEX) \n)\n\n{cards} data frame: 24 x 11\n\n\n   group1 group1_level variable variable_level stat_name stat_label  stat\n1    ARM2      Placebo   AGEGR1            &gt;64         n          n    72\n2    ARM2      Placebo   AGEGR1            &gt;64         N          N    86\n3    ARM2      Placebo   AGEGR1            &gt;64         p          % 0.837\n4    ARM2      Placebo   AGEGR1          18-64         n          n    14\n5    ARM2      Placebo   AGEGR1          18-64         N          N    86\n6    ARM2      Placebo   AGEGR1          18-64         p          % 0.163\n7    ARM2      Placebo      SEX              F         n          n    53\n8    ARM2      Placebo      SEX              F         N          N    86\n9    ARM2      Placebo      SEX              F         p          % 0.616\n10   ARM2      Placebo      SEX              M         n          n    33\n\n\nℹ 14 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fun, warning, error"
  },
  {
    "objectID": "slides/04-ARD/cards.html#quick-recap-4",
    "href": "slides/04-ARD/cards.html#quick-recap-4",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "Let’s compute summaries for a demography table that includes age (AGE), age group (AGEGR1), and sex (SEX) by treatment (ARM2) in a *single ard_stack() call, including:\n\nsummaries by ARM2 as performed above\ncontinuous summaries from part A for AGE\ncategorical summaries from part B for AGEGR1 and SEX\n\n\n\nard_stack(\n  data = adsl,\n  .by = ARM2,\n  \n  # add ard_* calls here\n  \n)"
  },
  {
    "objectID": "slides/04-ARD/cards.html#quick-recap-5",
    "href": "slides/04-ARD/cards.html#quick-recap-5",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "Let’s compute summaries for a demography table that includes age (AGE), age group (AGEGR1), and sex (SEX) by treatment (ARM2) in a *single ard_stack() call, including:\n\nsummaries by ARM2 as performed above\ncontinuous summaries from part A for AGE\ncategorical summaries from part B for AGEGR1 and SEX\n\n\n\nard_stack(\n  data = adsl,\n  .by = ARM2,\n  ard_continuous(variables = AGE),\n  ard_categorical(variables = c(AGEGR1, SEX))\n)\n\n{cards} data frame: 46 x 11\n\n\n   group1 group1_level variable variable_level stat_name stat_label   stat\n1    ARM2      Placebo      AGE                        N          N     86\n2    ARM2      Placebo      AGE                     mean       Mean 75.209\n3    ARM2      Placebo      AGE                       sd         SD   8.59\n4    ARM2      Placebo      AGE                   median     Median     76\n5    ARM2      Placebo      AGE                      p25         Q1     69\n6    ARM2      Placebo      AGE                      p75         Q3     82\n7    ARM2      Placebo      AGE                      min        Min     52\n8    ARM2      Placebo      AGE                      max        Max     89\n9    ARM2      Placebo   AGEGR1            &gt;64         n          n     72\n10   ARM2      Placebo   AGEGR1            &gt;64         N          N     86\n\n\nℹ 36 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fun, warning, error"
  },
  {
    "objectID": "slides/04-ARD/cards.html#quick-recap-6",
    "href": "slides/04-ARD/cards.html#quick-recap-6",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "We can also add:\n\nOverall summaries for all variables\nTotal N\n\n\n\nard_stack(\n  data = adsl,\n  .by = ARM2,\n  ard_continuous(variables = AGE),\n  ard_categorical(variables = c(AGEGR1, SEX)),\n  .overall = TRUE,\n  .total_n = TRUE\n)\n\n{cards} data frame: 67 x 11\n\n\n   group1 group1_level variable variable_level stat_name stat_label   stat\n1    ARM2      Placebo      AGE                        N          N     86\n2    ARM2      Placebo      AGE                     mean       Mean 75.209\n3    ARM2      Placebo      AGE                       sd         SD   8.59\n4    ARM2      Placebo      AGE                   median     Median     76\n5    ARM2      Placebo      AGE                      p25         Q1     69\n6    ARM2      Placebo      AGE                      p75         Q3     82\n7    ARM2      Placebo      AGE                      min        Min     52\n8    ARM2      Placebo      AGE                      max        Max     89\n9    ARM2      Placebo   AGEGR1            &gt;64         n          n     72\n10   ARM2      Placebo   AGEGR1            &gt;64         N          N     86\n\n\nℹ 57 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fun, warning, error"
  },
  {
    "objectID": "slides/04-ARD/cards.html#cards-hierarchical-summary-functions",
    "href": "slides/04-ARD/cards.html#cards-hierarchical-summary-functions",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "Following hierarchical summary functions aid in nested tabulations (e.g. AE terms within SOC):\n\nard_hierarchical(): calculating nested subject-level rates\nard_hierarchical_count(): calculating nested event-level counts"
  },
  {
    "objectID": "slides/04-ARD/cards.html#cards-ard_hierarchical",
    "href": "slides/04-ARD/cards.html#cards-ard_hierarchical",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "This function specializes in calculating subject-level rates.\n\nRates computed on lowest level variables, nested within others\nid helps to check that no duplicate rows exist within the c(id, variables) columns\ndenominator dictates the denominator for the rates\n\n\n\nadae |&gt; \n  dplyr::slice_tail(n = 1L, by = c(USUBJID, ARM, AESOC, AEDECOD)) |&gt; \n  ard_hierarchical(\n    variables = c(AESOC, AEDECOD),\n    by = TRT01A,\n    id = USUBJID,\n    denominator = adsl\n  )\n\n{cards} data frame: 81 x 13\n\n\n   group1 group1_level group2 group2_level variable variable_level stat_name\n1  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         n\n2  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         N\n3  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         p\n4  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      HIATUS H…         n\n5  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      HIATUS H…         N\n6  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      HIATUS H…         p\n7  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD       VOMITING         n\n8  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD       VOMITING         N\n9  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD       VOMITING         p\n10 TRT01A      Placebo  AESOC    GENERAL …  AEDECOD      APPLICAT…         n\n   stat_label  stat\n1           n     9\n2           N    86\n3           % 0.105\n4           n     1\n5           N    86\n6           % 0.012\n7           n     3\n8           N    86\n9           % 0.035\n10          n     3\n\n\nℹ 71 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fun, warning, error"
  },
  {
    "objectID": "slides/04-ARD/cards.html#cards-ard_hierarchical_count",
    "href": "slides/04-ARD/cards.html#cards-ard_hierarchical_count",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "This function specializes in calculating event-level frequencies.\n\n\nadae |&gt; \n  ard_hierarchical_count( \n    variables = c(AESOC, AEDECOD),\n    by = TRT01A\n  )\n\n{cards} data frame: 27 x 13\n\n\n   group1 group1_level group2 group2_level variable variable_level stat_name\n1  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         n\n2  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      HIATUS H…         n\n3  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD       VOMITING         n\n4  TRT01A      Placebo  AESOC    GENERAL …  AEDECOD      APPLICAT…         n\n5  TRT01A      Placebo  AESOC    GENERAL …  AEDECOD      APPLICAT…         n\n6  TRT01A      Placebo  AESOC    GENERAL …  AEDECOD        FATIGUE         n\n7  TRT01A      Placebo  AESOC    SKIN AND…  AEDECOD       ERYTHEMA         n\n8  TRT01A      Placebo  AESOC    SKIN AND…  AEDECOD       PRURITUS         n\n9  TRT01A      Placebo  AESOC    SKIN AND…  AEDECOD      PRURITUS…         n\n10 TRT01A    Xanomeli…  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         n\n   stat_label stat\n1           n   10\n2           n    2\n3           n    3\n4           n    3\n5           n   10\n6           n    2\n7           n   13\n8           n   11\n9           n    0\n10          n    3\n\n\nℹ 17 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fun, warning, error"
  },
  {
    "objectID": "slides/04-ARD/cards.html#hierarchical-summaries-many-ways",
    "href": "slides/04-ARD/cards.html#hierarchical-summaries-many-ways",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "Displays for hierarchical data typically report on each level of the hierarchy (Any AE Overall, by System Organ Class, by Preferred Term)\nThis can mean several calls to the ard_hierarchical_* functions\nFurther, subject-level summaries require a different subset of the data each time. For example, to calculate Overall rates, we need to subset to 1 record per subject in ADAE.\n\n\n\nIs there an easier way?"
  },
  {
    "objectID": "slides/04-ARD/cards.html#cards-stacking-function-for-ard_hierarchical",
    "href": "slides/04-ARD/cards.html#cards-stacking-function-for-ard_hierarchical",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "ard_hierarchical stacking functions simplify this multi-step process into a single step\nThe id argument is used to subset the data along the way\n\n\n\nadae |&gt; \n  ard_stack_hierarchical(\n    variables = c(AESOC, AEDECOD),\n    by = TRT01A,\n    id = USUBJID,\n    denominator = pharmaverseadam::adsl\n  )\n\n\n\n{cards} data frame: 12 x 13\n\n\n   group1 group1_level group2 group2_level variable variable_level stat_name\n1  TRT01A      Placebo   &lt;NA&gt;                 AESOC      GASTROIN…         n\n2  TRT01A      Placebo   &lt;NA&gt;                 AESOC      GASTROIN…         N\n3  TRT01A      Placebo   &lt;NA&gt;                 AESOC      GASTROIN…         p\n4  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         n\n5  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         N\n6  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         p\n7  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      HIATUS H…         n\n8  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      HIATUS H…         N\n9  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      HIATUS H…         p\n10 TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD       VOMITING         n\n11 TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD       VOMITING         N\n12 TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD       VOMITING         p\n   stat_label  stat\n1           n    12\n2           N    86\n3           %  0.14\n4           n     9\n5           N    86\n6           % 0.105\n7           n     1\n8           N    86\n9           % 0.012\n10          n     3\n11          N    86\n12          % 0.035\n\n\nℹ 4 more variables: context, fmt_fun, warning, error"
  },
  {
    "objectID": "slides/04-ARD/cards.html#cards-stacking-function-for-ard_hierarchical_count",
    "href": "slides/04-ARD/cards.html#cards-stacking-function-for-ard_hierarchical_count",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "Below is the stacking function for event-level summaries, aligned with ard_hierarchical_count()\n\n\n\nadae |&gt; \n  ard_stack_hierarchical_count(\n    variables = c(AESOC, AEDECOD),\n    by = TRT01A, \n    denominator = pharmaverseadam::adsl\n  )\n\n\n\n{cards} data frame: 4 x 13\n\n\n  group1 group1_level group2 group2_level variable variable_level stat_name\n1 TRT01A      Placebo   &lt;NA&gt;                 AESOC      GASTROIN…         n\n2 TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         n\n3 TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      HIATUS H…         n\n4 TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD       VOMITING         n\n  stat_label stat\n1          n   15\n2          n   10\n3          n    2\n4          n    3\n\n\nℹ 4 more variables: context, fmt_fun, warning, error"
  },
  {
    "objectID": "slides/04-ARD/cards.html#exercise",
    "href": "slides/04-ARD/cards.html#exercise",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "Navigate to Posit Cloud script exercises/04-ARD.R\nCompute the nested AE tabulations as described.\nAdd the “completed” sticky note to your laptop when complete.\n\n\n\n\n−+\n10:00"
  },
  {
    "objectID": "slides/04-ARD/cards.html#cardx",
    "href": "slides/04-ARD/cards.html#cardx",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "Extension of the {cards} package, providing additional functions to create Analysis Results Datasets (ARDs)\nThe {cardx} package exports many ard_*() function for statistical methods."
  },
  {
    "objectID": "slides/04-ARD/cards.html#cardx-1",
    "href": "slides/04-ARD/cards.html#cardx-1",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "Exports ARD frameworks for statistical analyses from many packages\n\n\n  - {stats}\n  - {car}\n  - {effectsize}\n  - {emmeans}\n  - {geepack}\n  - {lme4}\n  - {parameters}\n  - {smd}\n  - {survey}\n  - {survival}\n\n\nThis list is growing (rather quickly) 🌱"
  },
  {
    "objectID": "slides/04-ARD/cards.html#cardx-t-test-example",
    "href": "slides/04-ARD/cards.html#cardx-t-test-example",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "We see the results like the mean difference, the confidence interval, and p-value as expected.\nAnd we also see the function’s inputs, which is incredibly useful for re-use, e.g. we know the we did not use equal variances.\n\n\n\nadsl |&gt; \n  cardx::ard_stats_t_test(by = ARM2, variables = AGE)\n\n{cards} data frame: 14 x 9\n\n\n   group1 variable   context   stat_name stat_label      stat\n1    ARM2      AGE stats_t_…    estimate  Mean Dif…     0.185\n2    ARM2      AGE stats_t_…   estimate1  Group 1 …    75.209\n3    ARM2      AGE stats_t_…   estimate2  Group 2 …    75.024\n4    ARM2      AGE stats_t_…   statistic  t Statis…     0.166\n5    ARM2      AGE stats_t_…     p.value    p-value     0.868\n6    ARM2      AGE stats_t_…   parameter  Degrees …   162.643\n7    ARM2      AGE stats_t_…    conf.low  CI Lower…     -2.02\n8    ARM2      AGE stats_t_…   conf.high  CI Upper…     2.391\n9    ARM2      AGE stats_t_…      method     method Welch Tw…\n10   ARM2      AGE stats_t_… alternative  alternat… two.sided\n11   ARM2      AGE stats_t_…          mu    H0 Mean         0\n12   ARM2      AGE stats_t_…      paired  Paired t…     FALSE\n13   ARM2      AGE stats_t_…   var.equal  Equal Va…     FALSE\n14   ARM2      AGE stats_t_…  conf.level  CI Confi…      0.95\n\n\nℹ 3 more variables: fmt_fun, warning, error"
  },
  {
    "objectID": "slides/04-ARD/cards.html#cardx-t-test-example-1",
    "href": "slides/04-ARD/cards.html#cardx-t-test-example-1",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "What to do if a method you need is not implemented?\nIt’s simple to wrap existing frameworks to customize.\nOne-sample t-test example utilizing cards::ard_continuous().\n\n\n\nadsl |&gt; \n  cards::ard_summary(\n    variables = AGE,\n    statistic = everything() ~ list(t_test = \\(x) t.test(x) |&gt; broom::tidy())\n  ) |&gt; \n  dplyr::mutate(context = \"t_test_one_sample\")\n\n{cards} data frame: 8 x 8\n\n\n  variable   context   stat_name stat_label      stat fmt_fun\n1      AGE t_test_o…    estimate   estimate    75.087       1\n2      AGE t_test_o…   statistic  statistic   145.119       1\n3      AGE t_test_o…     p.value    p.value         0       1\n4      AGE t_test_o…   parameter  parameter       253       1\n5      AGE t_test_o…    conf.low   conf.low    74.068       1\n6      AGE t_test_o…   conf.high  conf.high    76.106       1\n7      AGE t_test_o…      method     method One Samp…    &lt;fn&gt;\n8      AGE t_test_o… alternative  alternat… two.sided    &lt;fn&gt;\n\n\nℹ 2 more variables: warning, error"
  },
  {
    "objectID": "slides/04-ARD/cards.html#cardx-t-test-example-2",
    "href": "slides/04-ARD/cards.html#cardx-t-test-example-2",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "How to modify if we need a two-sample test, or more generally accessing other columns in the data frame.\n\n\n\nadsl |&gt; \n  cards::ard_mvsummary(\n    variables = AGE,\n    statistic = \n      ~ list(t_test = \\(x, data, ...) t.test(x ~ data$ARM2) |&gt; broom::tidy())\n  ) |&gt; \n  dplyr::mutate(group1 = \"ARM2\", context = \"t_test_two_sample\") |&gt; \n  cards::tidy_ard_column_order()\n\n{cards} data frame: 10 x 9\n\n\n   group1 variable   context   stat_name stat_label      stat\n1    ARM2      AGE t_test_t…    estimate   estimate     0.185\n2    ARM2      AGE t_test_t…   estimate1  estimate1    75.209\n3    ARM2      AGE t_test_t…   estimate2  estimate2    75.024\n4    ARM2      AGE t_test_t…   statistic  statistic     0.166\n5    ARM2      AGE t_test_t…     p.value    p.value     0.868\n6    ARM2      AGE t_test_t…   parameter  parameter   162.643\n7    ARM2      AGE t_test_t…    conf.low   conf.low     -2.02\n8    ARM2      AGE t_test_t…   conf.high  conf.high     2.391\n9    ARM2      AGE t_test_t…      method     method Welch Tw…\n10   ARM2      AGE t_test_t… alternative  alternat… two.sided\n\n\nℹ 3 more variables: fmt_fun, warning, error"
  },
  {
    "objectID": "slides/04-ARD/cards.html#cardx-regression",
    "href": "slides/04-ARD/cards.html#cardx-regression",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "Includes functionality to summarize nearly every type of regression model in the R ecosystem:\n\n\nbetareg::betareg(), biglm::bigglm(), brms::brm(), cmprsk::crr(), fixest::feglm(), fixest::femlm(), fixest::feNmlm(), fixest::feols(), gam::gam(), geepack::geeglm(), glmmTMB::glmmTMB(), glmtoolbox::glmgee(), lavaan::lavaan(), lfe::felm(), lme4::glmer.nb(), lme4::glmer(), lme4::lmer(), logitr::logitr(), MASS::glm.nb(), MASS::polr(), mgcv::gam(), mice::mira, mmrm::mmrm(), multgee::nomLORgee(), multgee::ordLORgee(), nnet::multinom(), ordinal::clm(), ordinal::clmm(), parsnip::model_fit, plm::plm(), pscl::hurdle(), pscl::zeroinfl(), rstanarm::stan_glm(), stats::aov(), stats::glm(), stats::lm(), stats::nls(), survey::svycoxph(), survey::svyglm(), survey::svyolr(), survival::cch(), survival::clogit(), survival::coxph(), survival::survreg(), svyVGAM::svy_vglm(), tidycmprsk::crr(), VGAM::vgam(), VGAM::vglm() (and more)"
  },
  {
    "objectID": "slides/04-ARD/cards.html#cardx-regression-1",
    "href": "slides/04-ARD/cards.html#cardx-regression-1",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "The cardx::ard_regression() does a lot for us in the background.\n\nIdentifies the variable from the regression terms (i.e. groups levels of the same variable)\nIdentifies reference groups from categorical covariates\nFinds variable labels from the source data frames\nKnows the total N of the model, the number of events, and can do the same for each level of categorical variables\nContextually aware of slopes, odds ratios, hazard ratios, and incidence rate ratios\nAnd much much more.\n\n\n\nlm(AGE ~ ARM2, data = adsl) |&gt;\n  cardx::ard_regression(add_estimate_to_reference_rows = TRUE)\n\n{cards} data frame: 27 x 9\n\n\n   variable variable_level   context      stat_name stat_label      stat\n1      ARM2        Placebo regressi…           term       term ARM2Plac…\n2      ARM2        Placebo regressi…      var_label      Label      ARM2\n3      ARM2        Placebo regressi…      var_class      Class character\n4      ARM2        Placebo regressi…       var_type       Type dichotom…\n5      ARM2        Placebo regressi…    var_nlevels   N Levels         2\n6      ARM2        Placebo regressi…      contrasts  contrasts contr.tr…\n7      ARM2        Placebo regressi… contrasts_type  Contrast… treatment\n8      ARM2        Placebo regressi…  reference_row  referenc…      TRUE\n9      ARM2        Placebo regressi…          label  Level La…   Placebo\n10     ARM2        Placebo regressi…          n_obs     N Obs.        86\n\n\nℹ 17 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 3 more variables: fmt_fun, warning, error"
  },
  {
    "objectID": "slides/04-ARD/cards.html#when-things-go-wrong",
    "href": "slides/04-ARD/cards.html#when-things-go-wrong",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "What happens when statistics are un-calculable?\n\n\nard_gone_wrong &lt;- \n  adsl |&gt; \n  ard_summary(\n    by = ARM2,\n    variable = AGEGR1,\n    statistic = ~list(kurtosis = \\(x) e1071::kurtosis(x))\n  ) |&gt; \n  cards::replace_null_statistic()\nard_gone_wrong\n\n{cards} data frame: 2 x 10\n\n\n  group1 group1_level variable stat_name stat_label stat   warning     error\n1   ARM2      Placebo   AGEGR1  kurtosis   kurtosis   NA argument… non-nume…\n2   ARM2    Xanomeli…   AGEGR1  kurtosis   kurtosis   NA argument… non-nume…\n\n\nℹ 2 more variables: context, fmt_fun\n\n\n\ncards::print_ard_conditions(ard_gone_wrong)\n\n\n\n\nWhere is the statistic? AGEGR1 is character\nEven when there are errors or warnings, we still get the ARD with the expected structure returned.\n\nTHIS IS BIG! There are MANY circumstances, when you are designing TLGs early in a study when you do not have all the data required to calculate every statistic.\nThis allows you to design everything up-front.\n\nWe can also report these warnings and errors back to users. &lt;!CLICK!&gt;"
  },
  {
    "objectID": "slides/03-ADaM/admiral.html",
    "href": "slides/03-ADaM/admiral.html",
    "title": "Set the Stage",
    "section": "",
    "text": "By the end of this ADaM section you will have:\n\nGained an understanding of how to use admiral, metatools/metacore, and xportr packages to create ADaMs\nSeen code executed to create variables and records common to ADSL and ADVS.\nSeen small code snippets of certain functions with play data.\nChecked in on our fav participant - Barb.\nCompleted two short exercises using functions from admiral package."
  },
  {
    "objectID": "slides/03-ADaM/admiral.html#objectives",
    "href": "slides/03-ADaM/admiral.html#objectives",
    "title": "Set the Stage",
    "section": "",
    "text": "By the end of this ADaM section you will have:\n\nGained an understanding of how to use admiral, metatools/metacore, and xportr packages to create ADaMs\nSeen code executed to create variables and records common to ADSL and ADVS.\nSeen small code snippets of certain functions with play data.\nChecked in on our fav participant - Barb.\nCompleted two short exercises using functions from admiral package."
  },
  {
    "objectID": "slides/03-ADaM/admiral.html#play-by-play-to-achieve-our-objectives",
    "href": "slides/03-ADaM/admiral.html#play-by-play-to-achieve-our-objectives",
    "title": "Set the Stage",
    "section": "Play by Play to achieve our Objectives",
    "text": "Play by Play to achieve our Objectives\n\n\n🕙11:00 - 11:15 Set the Stage: Overview of how we will work, datasets, specs, packages, functions\n🕥11:15 - 11:40 Subject-level dataset: ADSL\n🕚11:40 - 11:50 Check in on Barb / Exercise\n🕦11:50 - 12:20 Basic Data Structure: ADVS\n🕚12:20 - 12:30 Check in on Barb / Exercise\n🕚12:30 Lunch!"
  },
  {
    "objectID": "slides/03-ADaM/admiral.html#end-to-end-with-barb",
    "href": "slides/03-ADaM/admiral.html#end-to-end-with-barb",
    "title": "Set the Stage",
    "section": "End to End with Barb!!",
    "text": "End to End with Barb!!\n\n\n\n\n\n\n\n\nflowchart LR\n  A[Raw] --&gt; B[SDTM]\n  B[SDTM] --&gt; C[ADaM]\n  C[ADaM] --&gt; D[ARD]\n  D[ARD] --&gt; E[TFL]\n  \n%% Apply the custom class \"highlight\" to node B\nclass C highlight;\n\n%% Define the style for the \"highlight\" class:\nclassDef highlight fill:#F9B, stroke:#333, stroke-width:2px;  \n\n\n\n\n\n\n\nWe are going to take a glimpse of where Barb is in ADSL and ADVS"
  },
  {
    "objectID": "slides/03-ADaM/admiral.html#set-the-stage-1",
    "href": "slides/03-ADaM/admiral.html#set-the-stage-1",
    "title": "Set the Stage",
    "section": "Set the Stage",
    "text": "Set the Stage\n\n\nHow we will work for the next 90 minutes?\nData (SDTMs, ADSL, and ADVS)\nSpecs (Excel document with lots of tabs)\npharmaverse packages\n\nplaying nice with tidyverse and base R!!\n\nFunctions to make ADaM variables and records."
  },
  {
    "objectID": "slides/03-ADaM/admiral.html#how-we-will-proceed-today-1",
    "href": "slides/03-ADaM/admiral.html#how-we-will-proceed-today-1",
    "title": "Set the Stage",
    "section": "How we will proceed today?",
    "text": "How we will proceed today?\n\n\nI will pull out certain functions of the ADSL and ADVS R scripts.\n\nLet’s take a quick peek at the scripts.\nI will discuss certain functions and function arguments from scripts for deriving variables/records.\nWill pull up full function arguments to briefly highlight other powers. 💡\nWhen possible will have some play data and mini-runs of the function. 🏸"
  },
  {
    "objectID": "slides/03-ADaM/admiral.html#how-we-will-proceed-today-continued",
    "href": "slides/03-ADaM/admiral.html#how-we-will-proceed-today-continued",
    "title": "Set the Stage",
    "section": "How we will proceed today continued?",
    "text": "How we will proceed today continued?\n\n\nTwo exercises set up to help explore two key functions discussed:\n\nderive_vars_dtm() at end of ADSL.\nderive_param_computed() at end of ADVS.\n\nBrief notes on the code in script and exercises:\n\nCode in scripts should run out of the box.\nYou can run now, but if something doesn’t work let’s fix at the exercises.\nExercises will need some minor updates.\n3 folks not presenting can help diagnose issues during exercises."
  },
  {
    "objectID": "slides/03-ADaM/admiral.html#adsl---subject-level-dataset",
    "href": "slides/03-ADaM/admiral.html#adsl---subject-level-dataset",
    "title": "Set the Stage",
    "section": "ADSL - Subject Level Dataset",
    "text": "ADSL - Subject Level Dataset\n\n\n\n\nADSL - Subject Level Dataset, i.e each subject has a record. Focus on adding variables.\nWe will use SDTM data from the pharmaversesdtm package.\n\nADSL is available in the pharmaverseadam package"
  },
  {
    "objectID": "slides/03-ADaM/admiral.html#advs---vital-signs-dataset",
    "href": "slides/03-ADaM/admiral.html#advs---vital-signs-dataset",
    "title": "Set the Stage",
    "section": "ADVS - Vital Signs Dataset",
    "text": "ADVS - Vital Signs Dataset\n\n\n\n\nADVS - Is a Basic Data Structure (BDS) Dataset. Focus on adding records, but also some variables!\nWe will use SDTM data vs from the pharmaversesdtm package and ADSL from dataset created by the adsl.R script.\nADVS is available in the pharmaverseadam package"
  },
  {
    "objectID": "slides/03-ADaM/admiral.html#spec-details",
    "href": "slides/03-ADaM/admiral.html#spec-details",
    "title": "Set the Stage",
    "section": "Spec-details",
    "text": "Spec-details\n\nGives specifics on how we derive variables in the ADaMs (extreme traceability)\nP21-like spec\n\nP21 is spec/data validation tool widely used in the industry for creating and validating SDTMs and ADaMs.\n\nThese specs are not fit for purpose - just a helpful guide\nWhat is in the the Specs:\n\nTwo datasets, dataset labels and variable keys\nVariables - labels, lengths, types, linked to method\nCodelists / Control Terms!!"
  },
  {
    "objectID": "slides/03-ADaM/admiral.html#spec-peek",
    "href": "slides/03-ADaM/admiral.html#spec-peek",
    "title": "Set the Stage",
    "section": "Spec-peek",
    "text": "Spec-peek\n\nLet’s take a quick peek at metadata"
  },
  {
    "objectID": "slides/03-ADaM/admiral.html#the-core-pharmaverse-packages-for-creating-adams",
    "href": "slides/03-ADaM/admiral.html#the-core-pharmaverse-packages-for-creating-adams",
    "title": "Set the Stage",
    "section": "The core pharmaverse packages for creating ADaMs",
    "text": "The core pharmaverse packages for creating ADaMs\n \nFocus on applying information from our Specs to the ADaMs\n\nFocus on deriving variables and records driven by our Specs\n\nFocus on preparing the dataset as an xpt file to be sent to regulatory agencies."
  },
  {
    "objectID": "slides/03-ADaM/admiral.html#pharmaverse-plays-nice",
    "href": "slides/03-ADaM/admiral.html#pharmaverse-plays-nice",
    "title": "Set the Stage",
    "section": "pharmaverse plays nice!",
    "text": "pharmaverse plays nice!\n   \n\n\nThe ADaM code presented today utilizes all the previously mentioned packages, but also makes use of tidyverse and base R code.\nIf a function isn’t meeting your needs or looks too cumbersome, then that is okay!\nThese packages are all modular and play well with others."
  },
  {
    "objectID": "slides/03-ADaM/admiral.html#admiral",
    "href": "slides/03-ADaM/admiral.html#admiral",
    "title": "Set the Stage",
    "section": "admiral",
    "text": "admiral\n\n\n\n\n\n\n\n\nPackage\nFunction\nPurpose\n\n\n\n\nadmiral\nderive_vars_merged()\nleft_join on steroids\n\n\nadmiral\nderive_param_computed()\nCore function for wrappers used in ADVS\n\n\nadmiral\nderive_vars_dy()\nCreate the relative study day\n\n\nadmiral\nderive_vars_dtm()\nTake a ---DTC variable and turn it into a ---DTM variable\n\n\nadmiral\nderive_vars_duration()\nDuration between timepoints\n\n\nadmiral\nrestrict_derivation()\nHOF: Execute a derivation on a subset of the input dataset.\n\n\n\nMost functions in admiral follow these conventions:\n\n\nvar_ or _vars_ functions add variable(s) to ADaMs\n_param_ functions add records to ADaMs\nOther not following this convention typically execute more advanced stuff!!"
  },
  {
    "objectID": "slides/03-ADaM/admiral.html#metacore-metatools-and-xportr",
    "href": "slides/03-ADaM/admiral.html#metacore-metatools-and-xportr",
    "title": "Set the Stage",
    "section": "metacore, metatools and xportr",
    "text": "metacore, metatools and xportr\n\n\n\n\n\n\n\n\nPackage\nFunction\nPurpose\n\n\n\n\nmetacore\nspec_to_metacore()\nCreates a “special” object from your specs\n\n\nmetatools\ncombine_supp()\nJoin Parent and Supplementary Datasets\n\n\nmetatools\ncreate_var_from_codelist()\nNumeric Vars from Specs!\n\n\nmetatools\ndrop_unspec_vars()\nEasily drop variables not in Spec\n\n\nxportr\nxportr_label()\nApply labels from Spec\n\n\nxportr\nxportr_write()\nWrite out an xpt file\n\n\n\n\nMost functions from these packages are about applying metadata from specs to your dataset.\nxportr follows a standard naming convention with xportr_."
  },
  {
    "objectID": "slides/03-ADaM/admiral.html#the-big-picture-of-adsl",
    "href": "slides/03-ADaM/admiral.html#the-big-picture-of-adsl",
    "title": "Set the Stage",
    "section": "The Big Picture of ADSL",
    "text": "The Big Picture of ADSL\n\nWe have an ADSL script:\n\n\n\nUsing {pharmaversesdtm} data: dm, suppdm, ex, ae, vs, etc\nUses the ADSL section of our spec file\nCreating a single record for each subject with a lot of variables.\n306 observations and 54 variables.\nWrite out an xpt file for regulatory send-off!"
  },
  {
    "objectID": "slides/03-ADaM/admiral.html#reading-in-our-spec-for-adsl",
    "href": "slides/03-ADaM/admiral.html#reading-in-our-spec-for-adsl",
    "title": "Set the Stage",
    "section": "Reading in our spec for ADSL 1",
    "text": "Reading in our spec for ADSL 1\nadsl_spec &lt;- spec_to_metacore(\n  path = \"slides/03-ADaM/metadata/posit_specs.xlsx\",\n  where_sep_sheet = FALSE,\n  quiet = TRUE\n) %&gt;%\n  select_dataset(\"ADSL\")\n\nTakes a P21-like spec and makes it into an object we can easily access.\nwhere_sep_sheet - option to tell if the information for the dataset is in a separate sheet, like in older p21 specs or in a single sheet like newer p21 specs\nquiet argument should be set to TRUE while developing your spec and ADaMs.\nSame call in ADVS script."
  },
  {
    "objectID": "slides/03-ADaM/admiral.html#combine-parent-and-supplementary-data",
    "href": "slides/03-ADaM/admiral.html#combine-parent-and-supplementary-data",
    "title": "Set the Stage",
    "section": "Combine Parent and Supplementary Data 2",
    "text": "Combine Parent and Supplementary Data 2\ndm_suppdm &lt;- combine_supp(dm, suppdm)\n\nOne line of code to join two datasets: parent and supplementary!\nSupps usually are a collection non-standard data and linking to parent\nFunction is from {metatools}"
  },
  {
    "objectID": "slides/03-ADaM/admiral.html#lets-turn-a---dtc-to-a-dtm-or-dt-variable",
    "href": "slides/03-ADaM/admiral.html#lets-turn-a---dtc-to-a-dtm-or-dt-variable",
    "title": "Set the Stage",
    "section": "Let’s turn a --DTC to a *DTM or *DT variable 3",
    "text": "Let’s turn a --DTC to a *DTM or *DT variable 3\nex_ext &lt;- ex %&gt;%\n  derive_vars_dtm(\n    dtc = EXSTDTC,\n    new_vars_prefix = \"EXST\",\n    time_imputation = \"last\",\n    flag_imputation = \"time\"\n)\nds_ext &lt;- derive_vars_dt(\n  ds,\n  dtc = DSSTDTC,\n  new_vars_prefix = \"DSST\"\n)\nadsl11 &lt;- adsl10 %&gt;%\n  derive_vars_dt(\n    dtc = DTHDTC,\n    new_vars_prefix = \"DTH\",\n    highest_imputation = \"M\",\n    date_imputation = \"first\"\n  )"
  },
  {
    "objectID": "slides/03-ADaM/admiral.html#example-from-documentation",
    "href": "slides/03-ADaM/admiral.html#example-from-documentation",
    "title": "Set the Stage",
    "section": "Example from documentation",
    "text": "Example from documentation\n\nmhdt &lt;- tribble(\n  ~MHSTDTC,\n  \"2019-07-18T15:25:40\",\n  \"2019-07-18T15:25\",\n  \"2019-07-18\",\n  \"2019-02\",\n  \"2019\",\n  \"2019---07\",\n  \"\"\n)\n\nderive_vars_dtm(\n mhdt,\n new_vars_prefix = \"AST\",\n dtc = MHSTDTC,\n highest_imputation = \"M\",\n date_imputation = \"last\",\n time_imputation = \"last\",\n)\n\n# A tibble: 7 × 4\n  MHSTDTC               ASTDTM              ASTDTF ASTTMF\n  &lt;chr&gt;                 &lt;dttm&gt;              &lt;chr&gt;  &lt;chr&gt; \n1 \"2019-07-18T15:25:40\" 2019-07-18 15:25:40 &lt;NA&gt;   &lt;NA&gt;  \n2 \"2019-07-18T15:25\"    2019-07-18 15:25:59 &lt;NA&gt;   S     \n3 \"2019-07-18\"          2019-07-18 23:59:59 &lt;NA&gt;   H     \n4 \"2019-02\"             2019-02-28 23:59:59 D      H     \n5 \"2019\"                2019-12-31 23:59:59 M      H     \n6 \"2019---07\"           2019-12-31 23:59:59 M      H     \n7 \"\"                    NA                  &lt;NA&gt;   &lt;NA&gt;"
  },
  {
    "objectID": "slides/03-ADaM/admiral.html#woahthere-is-more",
    "href": "slides/03-ADaM/admiral.html#woahthere-is-more",
    "title": "Set the Stage",
    "section": "Woah…there is more!!",
    "text": "Woah…there is more!!\n\nderive_vars_dtm(\n  dataset,\n  new_vars_prefix,\n  dtc,\n  highest_imputation = \"h\",\n  date_imputation = \"first\",\n  time_imputation = \"first\",\n  flag_imputation = \"auto\",\n  min_dates = NULL,\n  max_dates = NULL,\n  preserve = FALSE,\n  ignore_seconds_flag = FALSE\n)"
  },
  {
    "objectID": "slides/03-ADaM/admiral.html#a-simple-merge",
    "href": "slides/03-ADaM/admiral.html#a-simple-merge",
    "title": "Set the Stage",
    "section": "A Simple merge 4",
    "text": "A Simple merge 4\nadsl10 &lt;- adsl09 %&gt;%\n  derive_vars_merged(\n    dataset_add = ds_ext,\n    by_vars = exprs(STUDYID, USUBJID),\n    new_vars = exprs(RANDDT = DSSTDT),\n    filter_add = DSDECOD == \"RANDOMIZED\",\n  )\n\nFilter, arrange, join and rename is a common pattern in ADaMs.\nby_vars are going to be the shared variables to connect the two datasets\nIn admiral, all arguments which can be set to multiple variables, a calculation, or an assignment must be started with rlang::exprs().\nCheck out Programming Concepts and Conventions"
  },
  {
    "objectID": "slides/03-ADaM/admiral.html#lets-get-a-more-complicated-merge",
    "href": "slides/03-ADaM/admiral.html#lets-get-a-more-complicated-merge",
    "title": "Set the Stage",
    "section": "Let’s get a more complicated merge 5",
    "text": "Let’s get a more complicated merge 5\nderive_vars_merged(\n  dataset_add = ex_ext,\n  by_vars = exprs(STUDYID, USUBJID),\n  order = exprs(EXSTDTM, EXSEQ),\n  new_vars = exprs(TRTSDTM = EXSTDTM, TRTSTMF = EXSTTMF),\n  filter_add = (EXDOSE &gt; 0 |\n    (EXDOSE == 0 &\n      str_detect(EXTRT, \"PLACEBO\"))) &\n    !is.na(EXSTDTM),\n  mode = \"first\",\n)\n\norder - for each by group the first or last observation from the additional dataset is selected with respect to the specified order.\nmode - Determines if the first or last observation is selected"
  },
  {
    "objectID": "slides/03-ADaM/admiral.html#whoa-way-more-options",
    "href": "slides/03-ADaM/admiral.html#whoa-way-more-options",
    "title": "Set the Stage",
    "section": "Whoa!!! Way more options!!",
    "text": "Whoa!!! Way more options!!\n\nderive_vars_merged(\n  dataset,\n  dataset_add,\n  by_vars,\n  order = NULL,\n  new_vars = NULL,\n  filter_add = NULL,\n  mode = NULL,\n  exist_flag = NULL,\n  true_value = \"Y\",\n  false_value = NA_character_,\n  missing_values = NULL,\n  check_type = \"warning\",\n  duplicate_msg = NULL,\n  relationship = NULL\n)"
  },
  {
    "objectID": "slides/03-ADaM/admiral.html#lets-derive-a-duration-variable",
    "href": "slides/03-ADaM/admiral.html#lets-derive-a-duration-variable",
    "title": "Set the Stage",
    "section": "Let’s derive a Duration Variable 6",
    "text": "Let’s derive a Duration Variable 6\nderive_vars_duration(\n    new_var = DTHADY,\n    start_date = TRTSDT,\n    end_date = DTHDT\n  )"
  },
  {
    "objectID": "slides/03-ADaM/admiral.html#example-from-documentation-1",
    "href": "slides/03-ADaM/admiral.html#example-from-documentation-1",
    "title": "Set the Stage",
    "section": "Example from documentation",
    "text": "Example from documentation\n\n# Derive age in years\ndata &lt;- tribble(\n  ~USUBJID, ~BRTHDT,           ~RANDDT,\n  \"P01\",    ymd(\"1984-09-06\"), ymd(\"2020-02-24\"),\n  \"P02\",    ymd(\"1985-01-01\"), NA,\n  \"P03\",    NA,                ymd(\"2021-03-10\"),\n  \"P04\",    NA,                NA\n)\n\nderive_vars_duration(data,\n  new_var = AAGE,\n  new_var_unit = AAGEU,\n  start_date = BRTHDT,\n  end_date = RANDDT,\n  out_unit = \"years\",\n  add_one = FALSE,\n  trunc_out = TRUE\n)\n\n# A tibble: 4 × 5\n  USUBJID BRTHDT     RANDDT      AAGE AAGEU\n  &lt;chr&gt;   &lt;date&gt;     &lt;date&gt;     &lt;dbl&gt; &lt;chr&gt;\n1 P01     1984-09-06 2020-02-24    35 years\n2 P02     1985-01-01 NA            NA &lt;NA&gt; \n3 P03     NA         2021-03-10    NA &lt;NA&gt; \n4 P04     NA         NA            NA &lt;NA&gt;"
  },
  {
    "objectID": "slides/03-ADaM/admiral.html#ohhh-there-is-more",
    "href": "slides/03-ADaM/admiral.html#ohhh-there-is-more",
    "title": "Set the Stage",
    "section": "Ohhh there is more!!",
    "text": "Ohhh there is more!!\n\nderive_vars_duration(\n  dataset,\n  new_var,\n  new_var_unit = NULL,\n  start_date,\n  end_date,\n  in_unit = \"days\",\n  out_unit = \"DAYS\",\n  floor_in = TRUE,\n  add_one = TRUE,\n  trunc_out = FALSE,\n  type = \"duration\"\n)"
  },
  {
    "objectID": "slides/03-ADaM/admiral.html#duration-versus-interval",
    "href": "slides/03-ADaM/admiral.html#duration-versus-interval",
    "title": "Set the Stage",
    "section": "Duration versus Interval",
    "text": "Duration versus Interval\n\nThe lubridate package calculates two types of spans between two dates: duration and interval. While these calculations are largely the same, when the unit of the time period is month or year the result can be slightly different.\nThe difference arises from the ambiguity in the length of “1 month” or “1 year”. Months may have 31, 30, 28, or 29 days, and years are 365 days and 366 during leap years. Durations and intervals help solve the ambiguity in these measures."
  },
  {
    "objectID": "slides/03-ADaM/admiral.html#lets-apply-control-terms-code-lists",
    "href": "slides/03-ADaM/admiral.html#lets-apply-control-terms-code-lists",
    "title": "Set the Stage",
    "section": "Let’s apply Control Terms / Code Lists 7",
    "text": "Let’s apply Control Terms / Code Lists 7\nadsl16 %&gt;%\n  create_var_from_codelist(adsl_spec, input_var = AGEGR1, out_var = AGEGR1N) %&gt;%\n  create_var_from_codelist(adsl_spec, input_var = RACE, out_var = RACEN) %&gt;%\n  create_var_from_codelist(adsl_spec, input_var = RACEGR1, out_var = RACEGR1N) %&gt;%\n  create_var_from_codelist(adsl_spec, input_var = REGION1, out_var = REGION1N) %&gt;%\n  create_var_from_codelist(adsl_spec, input_var = TRT01P, out_var = TRT01PN) %&gt;%\n  create_var_from_codelist(adsl_spec, input_var = TRT01A, out_var = TRT01AN)\n\nNumeric Variables like the above are helpful for sorting options in Tables."
  },
  {
    "objectID": "slides/03-ADaM/admiral.html#more-details",
    "href": "slides/03-ADaM/admiral.html#more-details",
    "title": "Set the Stage",
    "section": "More details",
    "text": "More details\n\ncreate_var_from_codelist(\n  data,\n  metacore,\n  input_var,\n  out_var,\n  codelist = NULL,\n  decode_to_code = TRUE,\n  strict = TRUE\n)"
  },
  {
    "objectID": "slides/03-ADaM/admiral.html#check-in-on-barb-in-adsl",
    "href": "slides/03-ADaM/admiral.html#check-in-on-barb-in-adsl",
    "title": "Set the Stage",
    "section": "Check in on Barb in ADSL",
    "text": "Check in on Barb in ADSL\n\n\n\n\n\n\n\n\n\n\nflowchart LR\n  B[SDTM] --&gt; C[ADaM]\n  C[ADaM] --&gt; D[ARDs/TFLs]\n  \n%% Apply the custom class \"highlight\" to node B\nclass C highlight;\n\n%% Define the style for the \"highlight\" class:\nclassDef highlight fill:#F9B, stroke:#333, stroke-width:2px;  \n\n\n\n\n\n\n\n\nUSUBJID: 01-701-1034\nSEX: F\nAGE: 77\nRANDDT: 2014-07-01\nTRTSDT: 2014-07-01\nTRTSDTM: 2014-07-01 23:59:59\nTRTEDT: 2014-12-30\nTRTDURD: 183\nEOSDT: 2014-12-30\nEOSSTT: COMPLETED"
  },
  {
    "objectID": "slides/03-ADaM/admiral.html#check-in-exercise",
    "href": "slides/03-ADaM/admiral.html#check-in-exercise",
    "title": "Set the Stage",
    "section": "Check-in Exercise",
    "text": "Check-in Exercise\n\nImpute the date and time to be last month/day and 23:59:59\nTwo arguments to update: ????\nCheck out admiral derive_vars_dtm() documentation\n\n\nlibrary(tibble)\nlibrary(lubridate)\nlibrary(admiral)\n\nposit_mh &lt;- tribble(\n  ~USUBJID, ~MHSTDTC,\n  1,        \"2019-07-18T15:25:40\",\n  1,        \"2019-07-18T15:25\",\n  1,        \"2019-07-18\",\n  2,        \"2024-02\",\n  2,        \"2019\",\n  2,        \"2019---07\",\n  3,        \"\"\n)\n\nderive_vars_dtm(\n  dataset = posit_mh,\n  new_vars_prefix = \"AST\",\n  dtc = MHSTDTC,\n  highest_imputation = \"M\",\n  date_imputation = \"????\",\n  time_imputation = \"????\"\n)"
  },
  {
    "objectID": "slides/03-ADaM/admiral.html#check-in-exercise-solution",
    "href": "slides/03-ADaM/admiral.html#check-in-exercise-solution",
    "title": "Set the Stage",
    "section": "Check-in Exercise Solution",
    "text": "Check-in Exercise Solution\n\nposit_mh &lt;- tribble(\n  ~USUBJID, ~MHSTDTC,\n  1,        \"2019-07-18T15:25:40\",\n  1,        \"2019-07-18T15:25\",\n  1,        \"2019-07-18\",\n  2,        \"2024-02\",\n  2,        \"2019\",\n  2,        \"2019---07\",\n  3,        \"\"\n)\n\nderive_vars_dtm(\n  dataset = posit_mh,\n  new_vars_prefix = \"AST\",\n  dtc = MHSTDTC,\n  highest_imputation = \"M\",\n  date_imputation = \"last\",\n  time_imputation = \"last\"\n)\n\n# A tibble: 7 × 5\n  USUBJID MHSTDTC               ASTDTM              ASTDTF ASTTMF\n    &lt;dbl&gt; &lt;chr&gt;                 &lt;dttm&gt;              &lt;chr&gt;  &lt;chr&gt; \n1       1 \"2019-07-18T15:25:40\" 2019-07-18 15:25:40 &lt;NA&gt;   &lt;NA&gt;  \n2       1 \"2019-07-18T15:25\"    2019-07-18 15:25:59 &lt;NA&gt;   S     \n3       1 \"2019-07-18\"          2019-07-18 23:59:59 &lt;NA&gt;   H     \n4       2 \"2024-02\"             2024-02-29 23:59:59 D      H     \n5       2 \"2019\"                2019-12-31 23:59:59 M      H     \n6       2 \"2019---07\"           2019-12-31 23:59:59 M      H     \n7       3 \"\"                    NA                  &lt;NA&gt;   &lt;NA&gt;"
  },
  {
    "objectID": "slides/03-ADaM/admiral.html#the-big-picture-of-advs",
    "href": "slides/03-ADaM/admiral.html#the-big-picture-of-advs",
    "title": "Set the Stage",
    "section": "The Big Picture of ADVS",
    "text": "The Big Picture of ADVS\n\nWe have an ADVS script:\n\nUsing pharmaversesdtm data: vs\nUsing the ADVS section of our spec file.\nCreating multiple records for each subject.\nSome ADSL variables included.\n60K records and 106 variables.\nLot’s of functions are repeated within the ADVS script used in ADSL script."
  },
  {
    "objectID": "slides/03-ADaM/admiral.html#lets-talk-about-lookup-tables",
    "href": "slides/03-ADaM/admiral.html#lets-talk-about-lookup-tables",
    "title": "Set the Stage",
    "section": "Let’s talk about lookup tables 8",
    "text": "Let’s talk about lookup tables 8\n  derive_vars_merged_lookup(\n    dataset_add = param_lookup,\n    new_vars = exprs(PARAMCD),\n    by_vars = exprs(VSTESTCD),\n    print_not_mapped = TRUE \n  ) \n\nMoving from **TEST/**TESTCD to PARAM/PARAMCD.\nMore information in the PARAM/PARAMCD - useful for displays.\nCan be used for other lookup tables, e.g. Grading/Toxicity."
  },
  {
    "objectID": "slides/03-ADaM/admiral.html#a-fuller-look",
    "href": "slides/03-ADaM/admiral.html#a-fuller-look",
    "title": "Set the Stage",
    "section": "A Fuller Look!",
    "text": "A Fuller Look!\n\nderive_vars_merged_lookup(\n  dataset,\n  dataset_add,\n  by_vars,\n  order = NULL,\n  new_vars = NULL,\n  mode = NULL,\n  filter_add = NULL,\n  check_type = \"warning\",\n  duplicate_msg = NULL,\n  print_not_mapped = TRUE\n)"
  },
  {
    "objectID": "slides/03-ADaM/admiral.html#lets-add-more-records-for-each-subject",
    "href": "slides/03-ADaM/admiral.html#lets-add-more-records-for-each-subject",
    "title": "Set the Stage",
    "section": "Let’s add more records for each subject 9",
    "text": "Let’s add more records for each subject 9\nadvs &lt;- advs %&gt;%\n  derive_param_computed(\n    by_vars = exprs(STUDYID, USUBJID, VISIT, VISITNUM, ADT, ADY, VSTPT, VSTPTNUM),\n    parameters = \"WEIGHT\",\n    set_values_to = exprs(\n      AVAL = AVAL.WEIGHT / (AVAL.HEIGHT / 100)^2,\n      PARAMCD = \"BMI\",\n      PARAM = \"Body Mass Index (kg/m^2)\",\n      AVALU = \"kg/m^2\"\n    ),\n    constant_parameters = c(\"HEIGHT\"),\n    constant_by_vars = exprs(USUBJID)\n)"
  },
  {
    "objectID": "slides/03-ADaM/admiral.html#only-two-arguments-not-used",
    "href": "slides/03-ADaM/admiral.html#only-two-arguments-not-used",
    "title": "Set the Stage",
    "section": "Only two arguments not used!",
    "text": "Only two arguments not used!\n\nderive_param_computed(\n  dataset = NULL,\n  dataset_add = NULL,\n  by_vars,\n  parameters,\n  set_values_to,\n  filter = NULL,\n  constant_by_vars = NULL,\n  constant_parameters = NULL,\n  keep_nas = FALSE\n)"
  },
  {
    "objectID": "slides/03-ADaM/admiral.html#lets-derive-dtype-summary-records",
    "href": "slides/03-ADaM/admiral.html#lets-derive-dtype-summary-records",
    "title": "Set the Stage",
    "section": "Let’s derive DTYPE summary records 10",
    "text": "Let’s derive DTYPE summary records 10\nderive_summary_records(\n    dataset_add = advs_2, \n    by_vars = exprs(STUDYID, USUBJID, !!!adsl_vars, PARAMCD, AVISITN, AVISIT, ADT, ADY, AVALU),\n    filter_add = !is.na(AVAL),\n    set_values_to = exprs(\n      AVAL = mean(AVAL),\n      DTYPE = \"AVERAGE\"\n  )\n)\n\nA DTYPE variable indicates a record within a parameter has been imputed or modified, DTYPE will indicate the method used to populate the analysis value, e.g AVERAGE, MAXIMUM, MINIMUM, LOCF, PHANTOM."
  },
  {
    "objectID": "slides/03-ADaM/admiral.html#lets-restrict",
    "href": "slides/03-ADaM/admiral.html#lets-restrict",
    "title": "Set the Stage",
    "section": "Let’s restrict! 11",
    "text": "Let’s restrict! 11\nrestrict_derivation(\n  derivation = derive_var_extreme_flag,\n  args = params(\n    by_vars = exprs(STUDYID, USUBJID, BASETYPE, PARAMCD),\n    order = exprs(ADT, VISITNUM, VSSEQ),\n    new_var = ABLFL,\n    mode = \"last\",\n    true_value = \"Y\"\n  ),\n  filter = (!is.na(AVAL) &\n    ADT &lt;= TRTSDT & !is.na(BASETYPE) & is.na(DTYPE))\n)\n\nCheck out Higher Order Functions for more information.\ncall_derivation() is super handy iF you are doing similar calls with same function, but just changing one or two arguments."
  },
  {
    "objectID": "slides/03-ADaM/admiral.html#lets-add-a-base-variable",
    "href": "slides/03-ADaM/admiral.html#lets-add-a-base-variable",
    "title": "Set the Stage",
    "section": "Let’s add a BASE variable 12",
    "text": "Let’s add a BASE variable 12\nadvs &lt;- derive_var_base(\n  advs,\n  by_vars = exprs(STUDYID, USUBJID, PARAMCD, BASETYPE),\n  source_var = AVAL,\n  new_var = BASE,\n  # Below arguments are default values and not necessary to add in our case\n  filter = ABLFL == \"Y\"\n)\n\nUsed to calculate CHG and PCHG variables"
  },
  {
    "objectID": "slides/03-ADaM/admiral.html#lets-add-an-analysis-sequence-variable",
    "href": "slides/03-ADaM/admiral.html#lets-add-an-analysis-sequence-variable",
    "title": "Set the Stage",
    "section": "Let’s add an Analysis Sequence Variable 13",
    "text": "Let’s add an Analysis Sequence Variable 13\nadvs &lt;- derive_var_obs_number(\n  advs,\n  new_var = ASEQ,\n  by_vars = exprs(STUDYID, USUBJID),\n  order = exprs(PARAMCD, ADT, AVISITN, VISITNUM, ATPTN, DTYPE),\n  check_type = \"error\"\n)\n\nASEQ uniquely indexes records within a subject within an ADaM dataset.\nASEQ is useful for traceability when the dataset is used as input to another ADaM dataset\ncheck_type - If “message”, “warning” or “error” is specified, the specified message is issued if the observations of the input dataset are not unique with respect to the by variables and the order."
  },
  {
    "objectID": "slides/03-ADaM/admiral.html#lets-get-that-adam-ready-for-regulatory-agencies",
    "href": "slides/03-ADaM/admiral.html#lets-get-that-adam-ready-for-regulatory-agencies",
    "title": "Set the Stage",
    "section": "Let’s get that ADaM ready for regulatory agencies 14",
    "text": "Let’s get that ADaM ready for regulatory agencies 14\nadvs_prefinal &lt;- advs %&gt;%\n  drop_unspec_vars(advs_spec) %&gt;% \n  check_variables(advs_spec, dataset_name = \"ADVS\") %&gt;% \n  order_cols(advs_spec) %&gt;% \n  sort_by_key(advs_spec) \n\nFunctions from {metatools}\nNote similar code in ADSL script!"
  },
  {
    "objectID": "slides/03-ADaM/admiral.html#lets-get-that-data-read-for-regulatory-agencies",
    "href": "slides/03-ADaM/admiral.html#lets-get-that-data-read-for-regulatory-agencies",
    "title": "Set the Stage",
    "section": "Let’s get that data read for regulatory agencies 15",
    "text": "Let’s get that data read for regulatory agencies 15\nadvs_final &lt;- advs_prefinal %&gt;%\n  xportr_type(advs_spec) %&gt;%\n  xportr_length(advs_spec) %&gt;%\n  xportr_label(advs_spec) %&gt;%\n  xportr_format(advs_spec, domain = \"ADVS\") %&gt;%\n  xportr_df_label(advs_spec, domain = \"ADVS\") %&gt;%\n  xportr_write(file.path(dir, \"advs.xpt\"), metadata = advs_spec, domain = \"ADVS\")\n\nFunctions from {xportr}\nNote similar code in ADSL script!\ndomain is needed depending on how metacore object is created."
  },
  {
    "objectID": "slides/03-ADaM/admiral.html#check-in-on-barb-in-advs",
    "href": "slides/03-ADaM/admiral.html#check-in-on-barb-in-advs",
    "title": "Set the Stage",
    "section": "Check in on Barb in ADVS",
    "text": "Check in on Barb in ADVS\n\n\n\n\n\n\n\n\n\n\nflowchart LR\n  B[SDTM] --&gt; C[ADaM]\n  C[ADaM] --&gt; D[ARDs/TFLs]\n  \n%% Apply the custom class \"highlight\" to node B\nclass C highlight;\n\n%% Define the style for the \"highlight\" class:\nclassDef highlight fill:#F9B, stroke:#333, stroke-width:2px;  \n\n\n\n\n\n\n\n\nUSUBJID: 01-701-1034\nPARAM/PARAMCD: MAP / Mean Arterial Pressure (mmHg)\nABLFL/ADT: Y / 2014-07-01\nBASE: 94.33333\nAVIST/ADT: WEEK 2 / 2014-07-15\nAVAL: 115.0\nCHG: 20.6666667\nPCHG: 21.9081272"
  },
  {
    "objectID": "slides/03-ADaM/admiral.html#check-in-exercise-1",
    "href": "slides/03-ADaM/admiral.html#check-in-exercise-1",
    "title": "Set the Stage",
    "section": "Check-in Exercise",
    "text": "Check-in Exercise\n\nWe are going to update the function derive_param_computed() for Mean Arterial Pressure.\nFormula: \\[ \\frac{2DIABP + SYSBP}{3} \\]\n\nADVS &lt;- tribble(\n  ~USUBJID,      ~PARAMCD, ~PARAM,                            ~AVALU,  ~AVAL, ~VISIT,\n  \"01-701-1015\", \"DIABP\",  \"Diastolic Blood Pressure (mmHg)\", \"mmHg\",    51, \"BASELINE\",\n  \"01-701-1015\", \"SYSBP\",  \"Systolic Blood Pressure (mmHg)\",  \"mmHg\",   121, \"BASELINE\",\n  \"01-701-1028\", \"DIABP\",  \"Diastolic Blood Pressure (mmHg)\", \"mmHg\",    79, \"BASELINE\",\n  \"01-701-1028\", \"SYSBP\",  \"Systolic Blood Pressure (mmHg)\",  \"mmHg\",   130, \"BASELINE\",\n) \nderive_param_computed(\n  ADVS,\n  by_vars = exprs(USUBJID, VISIT),\n  parameters = c(\"????\", \"????\"),\n  set_values_to = exprs(\n    AVAL = (AVAL.SYSBP + ?? * AVAL.DIABP) / ??,\n    PARAMCD = \"MAP\",\n    PARAM = \"Mean Arterial Pressure (mmHg)\",\n    AVALU = \"mmHg\",\n  )\n)"
  },
  {
    "objectID": "slides/03-ADaM/admiral.html#check-in-exercise-solution-1",
    "href": "slides/03-ADaM/admiral.html#check-in-exercise-solution-1",
    "title": "Set the Stage",
    "section": "Check-in Exercise Solution",
    "text": "Check-in Exercise Solution\n\nADVS &lt;- tribble(\n  ~USUBJID,      ~PARAMCD, ~PARAM,                            ~AVALU,  ~AVAL, ~VISIT,\n  \"01-701-1015\", \"DIABP\",  \"Diastolic Blood Pressure (mmHg)\", \"mmHg\",    51, \"BASELINE\",\n  \"01-701-1015\", \"SYSBP\",  \"Systolic Blood Pressure (mmHg)\",  \"mmHg\",   121, \"BASELINE\",\n  \"01-701-1028\", \"DIABP\",  \"Diastolic Blood Pressure (mmHg)\", \"mmHg\",    79, \"BASELINE\",\n  \"01-701-1028\", \"SYSBP\",  \"Systolic Blood Pressure (mmHg)\",  \"mmHg\",   130, \"BASELINE\",\n) \n\nderive_param_computed(\n  ADVS,\n  by_vars = exprs(USUBJID, VISIT),\n  parameters = c(\"SYSBP\", \"DIABP\"),\n  set_values_to = exprs(\n    AVAL = (AVAL.SYSBP + 2 * AVAL.DIABP) / 3,\n    PARAMCD = \"MAP\",\n    PARAM = \"Mean Arterial Pressure (mmHg)\",\n    AVALU = \"mmHg\",\n  )\n)\n\n# A tibble: 6 × 6\n  USUBJID     PARAMCD PARAM                           AVALU  AVAL VISIT   \n  &lt;chr&gt;       &lt;chr&gt;   &lt;chr&gt;                           &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt;   \n1 01-701-1015 DIABP   Diastolic Blood Pressure (mmHg) mmHg   51   BASELINE\n2 01-701-1015 SYSBP   Systolic Blood Pressure (mmHg)  mmHg  121   BASELINE\n3 01-701-1028 DIABP   Diastolic Blood Pressure (mmHg) mmHg   79   BASELINE\n4 01-701-1028 SYSBP   Systolic Blood Pressure (mmHg)  mmHg  130   BASELINE\n5 01-701-1015 MAP     Mean Arterial Pressure (mmHg)   mmHg   74.3 BASELINE\n6 01-701-1028 MAP     Mean Arterial Pressure (mmHg)   mmHg   96   BASELINE"
  },
  {
    "objectID": "slides/03-ADaM/admiral.html#questions-and-resources",
    "href": "slides/03-ADaM/admiral.html#questions-and-resources",
    "title": "Set the Stage",
    "section": "Questions and Resources",
    "text": "Questions and Resources\n\n\nadmiraldiscovery\npharmaverse examples\npkgdown sites for xportr, metatools, metacore and admiral\nExtension packages for admiral: admiralophtha, admiralonco, admiralpeds"
  },
  {
    "objectID": "slides/03-ADaM/admiral.html#closing-thoughts",
    "href": "slides/03-ADaM/admiral.html#closing-thoughts",
    "title": "Set the Stage",
    "section": "Closing Thoughts",
    "text": "Closing Thoughts\n\n\nOnly able to show a small number of pharmaverse packages and functions today, but please delve deeper to explore the full breadth\nIf you’d like to contribute to pharmaverse, check out options at pharmaverse.org\nFinally, be sure to join our community on Slack!"
  },
  {
    "objectID": "slides/03-ADaM/admiral.html#packages-and-session-information",
    "href": "slides/03-ADaM/admiral.html#packages-and-session-information",
    "title": "Set the Stage",
    "section": "Packages and Session Information",
    "text": "Packages and Session Information\n\nsessionInfo()\n\nR version 4.5.1 (2025-06-13)\nPlatform: x86_64-pc-linux-gnu\nRunning under: Ubuntu 24.04.3 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 \nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.26.so;  LAPACK version 3.12.0\n\nlocale:\n [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8       \n [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8   \n [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C          \n[10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C   \n\ntime zone: UTC\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices datasets  utils     methods   base     \n\nother attached packages:\n[1] lubridate_1.9.4 admiral_1.3.1   tibble_3.3.0    countdown_0.4.0\n[5] glue_1.8.0     \n\nloaded via a namespace (and not attached):\n [1] jsonlite_2.0.0    dplyr_1.1.4       compiler_4.5.1    renv_1.1.5       \n [5] tidyselect_1.2.1  xml2_1.3.8        stringr_1.5.1     tidyr_1.3.1      \n [9] yaml_2.3.10       fastmap_1.2.0     R6_2.6.1          generics_0.1.4   \n[13] admiraldev_1.3.1  knitr_1.50        htmlwidgets_1.6.4 pillar_1.11.0    \n[17] rlang_1.1.6       utf8_1.2.6        stringi_1.8.7     roxygen2_7.3.2   \n[21] xfun_0.52         timechange_0.3.0  cli_3.6.5         withr_3.0.2      \n[25] magrittr_2.0.3    digest_0.6.37     hms_1.1.3         lifecycle_1.0.4  \n[29] vctrs_0.6.5       evaluate_1.0.4    rmarkdown_2.29    purrr_1.1.0      \n[33] tools_4.5.1       pkgconfig_2.0.3   htmltools_0.5.8.1"
  },
  {
    "objectID": "slides/03-ADaM/admiral.html#footnotes",
    "href": "slides/03-ADaM/admiral.html#footnotes",
    "title": "Set the Stage",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nLines: 20-25 ↩︎\nLines: 53↩︎\nLines: 57-69, 132-136, 198-204↩︎\nLines: 187-194↩︎\nLines: 72-84, and more!!↩︎\nLines: 122-126↩︎\nLines: 276-282↩︎\nLines: 72-80↩︎\nLines: 100-111↩︎\nLines: 144-153↩︎\nLines: 196-210↩︎\nLines: 210-217↩︎\nLines: 262-268↩︎\nLines: 305-310↩︎\nLines: 313-319↩︎"
  },
  {
    "objectID": "slides/01-intro/index.html#end-to-end-submissions-in-r-with-the-pharmaverse",
    "href": "slides/01-intro/index.html#end-to-end-submissions-in-r-with-the-pharmaverse",
    "title": "Welcome!",
    "section": "End-to-End Submissions in R with the Pharmaverse",
    "text": "End-to-End Submissions in R with the Pharmaverse\n\nFind a seat where you can see the screen!\n\n\n\nJoin the Posit Cloud workspace:\n\n\n\nJoin the Slack from\n\n\n\nWiFI: Posit Conf 2024 | conf2024"
  },
  {
    "objectID": "slides/01-intro/index.html#expected-background",
    "href": "slides/01-intro/index.html#expected-background",
    "title": "Welcome!",
    "section": "Expected Background",
    "text": "Expected Background\n\nBasic knowledge of R and packages in the tidyverse\nBasic knowledge of CDISC Standards (ADaM and SDTM Domains)\n\nCheck out the ADaM IG and other documents for CDISC\n\nThese are great but tome-like!!\n\nCheck out admiral and admiraldiscovery for CDISC implementation\n\nI always like to code immediately to understand a process!\n\n\n🦺 But even lacking CDISC knowledge, we still think you will gain some great learning today! 🦺"
  },
  {
    "objectID": "slides/01-intro/index.html#instructors",
    "href": "slides/01-intro/index.html#instructors",
    "title": "Welcome!",
    "section": "Instructors",
    "text": "Instructors\n\n\n\n\n\n\n\nWho are we?\nWhat do we do?\nWhy are we here?"
  },
  {
    "objectID": "slides/01-intro/index.html#workshop-outline",
    "href": "slides/01-intro/index.html#workshop-outline",
    "title": "Welcome!",
    "section": "Workshop outline",
    "text": "Workshop outline"
  },
  {
    "objectID": "slides/01-intro/index.html#end-to-end-with-barb",
    "href": "slides/01-intro/index.html#end-to-end-with-barb",
    "title": "Welcome!",
    "section": "End to End with Barb!!",
    "text": "End to End with Barb!!\n\n\n\n\n\n\n\n\nflowchart LR\n  A[Raw] --&gt; B[SDTM]\n  B[SDTM] --&gt; C[ADaM]\n  C[ADaM] --&gt; D[ARD]\n  D[ARD] --&gt; E[TFL]\n  \n%% Apply the custom class \"highlight\" to node B\nclass B highlight;\n\n%% Define the style for the \"highlight\" class:\nclassDef highlight fill:#F9B, stroke:#333, stroke-width:2px;  \n\n\n\n\n\n\n\nBarb is on a journey from raw to TFL.\nAt various points we will be finding Barb in our data as we transform from Raw to TFL."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "End-to-End Submissions in R with the Pharmaverse",
    "section": "",
    "text": "🗓️ September 16, 2025 09:00 - 17:00\n🏨 Hyatt Regency Atlanta, Room TBA\n📝 Workshop Registration",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "index.html#description",
    "href": "index.html#description",
    "title": "End-to-End Submissions in R with the Pharmaverse",
    "section": "Description",
    "text": "Description\nReady to optimize your regulatory submission process? This workshop offers a practical, end-to-end introduction to using R for a streamlined workflow from raw data to tables, listings, and graphs (TLGs). We’ll dive into the power of key R packages from the Pharmaverse, starting with SDTM data preparation; learn to effortlessly map, transform, and validate your data to CDISC standards, ensuring both quality and compliance. Next, create ADaM datasets using modular and pipe-able syntax. Finally, get ready to generate compelling TLGs supported by Analysis Results Datasets (ARDs). We’ll explore techniques for producing publication-ready output, customized to meet your specific reporting needs. Walk away with the skills to confidently use R for every stage of the submission process.",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "index.html#schedule",
    "href": "index.html#schedule",
    "title": "End-to-End Submissions in R with the Pharmaverse",
    "section": "Schedule",
    "text": "Schedule\n\n\n\n\n\n\n\n\nTime\nActivity\n\n\n\n\n09:00 - 9:30\nIntroduction + Overview\n\n\n09:30 - 10:30\nSDTM\n\n\n10:30 - 11:00\nCoffee Break\n\n\n11:00 - 12:30\nADaMs with {admiral} and friends\n\n\n12:30 - 13:30\nLunch\n\n\n13:30 - 14:15\nAnalysis Results Datasets\n\n\n14:15 - 15:00\nCreate Tables with {tfrmt}\n\n\n15:00 - 15:30\nCoffee Break\n\n\n15:30 - 16:15\nCreate Tables with {gtsummary}\n\n\n16:15 - 17:00\nOther Topics Overview + Wrap-up",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "index.html#pre-work",
    "href": "index.html#pre-work",
    "title": "End-to-End Submissions in R with the Pharmaverse",
    "section": "Pre-work",
    "text": "Pre-work\n\nBookmark this site. You’ll reference it throughout the workshop. \nSign up for a free Posit Cloud account.\nBring your laptop and charger to the workshop.",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "index.html#instructors",
    "href": "index.html#instructors",
    "title": "End-to-End Submissions in R with the Pharmaverse",
    "section": "Instructors",
    "text": "Instructors\n\nDaniel D. Sjoberg (he/him) is a Senior Principal Data Scientist at Genentech. Previously, he was a Lead Data Science Manager at the Prostate Cancer Clinical Trials Consortium, and a Senior Biostatistician at Memorial Sloan Kettering Cancer Center in New York City. He enjoys R package development, creating many packages available on CRAN, R-Universe, and GitHub. He’s a co-organizer of rainbowR (a community that supports, promotes and connects LGBTQ+ people who code in the R language) and of the R Medicine Conference. His research interests include adaptive methods in clinical trials, precision medicine, and predictive modeling. Daniel is the winner of the 2021 American Statistical Association (ASA) Innovation in Statistical Programming and Analytics award.\n   \n\nBecca Krouse is a data scientist in GSK’s Data Science Innovation and Engineering team where she focuses on enabling users across Biostatistics. A biostatistician by training, she has experience spanning 15 years in the field of clinical research and specializes in developing R-based tools.\n \nBen Straub is a Principal Programmer at GSK in the Immunology Therapeutic Area since 2018. He has led and helped with many initiatives around R Adoption activities within Clinical Programming since his start at GSK. He is also actively helping to develop and maintain an end-to-end R package pipeline (pharmaverse) that addresses all the needs of Clinical Reporting with many awesome companies and individuals. He is very excited for the future of using R and open source for Clinical Reporting.\n\nRammprasad Ganapathy (Ram) is a Principal Data Scientist at Roche/Genentech with over 15 years of experience in EDC clinical programming and statistical programming. He leads the OAK team and is the author of the R packages {roak} and its open-source counterpart, {sdtm.oak}. Ram and his team developed the R-based SDTM automation solution, OAK, taking it from a proof of concept to full-scale implementation.",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "exercises/exercises.html",
    "href": "exercises/exercises.html",
    "title": "Exercises + Solutions",
    "section": "",
    "text": "# Exercise 1\n# Update date and time imputation arguments\n\nlibrary(tibble)\nlibrary(lubridate)\nlibrary(admiral)\n\nposit_mh &lt;- tribble(\n  ~USUBJID, ~MHSTDTC,\n  1,        \"2019-07-18T15:25:40\",\n  1,        \"2019-07-18T15:25\",\n  1,        \"2019-07-18\",\n  2,        \"2024-02\",\n  2,        \"2019\",\n  2,        \"2019---07\",\n  3,        \"\"\n)\n\nderive_vars_dtm(\n  dataset = posit_mh,\n  new_vars_prefix = \"AST\",\n  dtc = MHSTDTC,\n  highest_imputation = \"M\",\n  date_imputation = \"????\",\n  time_imputation = \"????\"\n)\n\n# Exercise 2\n# Update the parameters argument\n# Update set_values_to argument for the formula\n# MAP Formula: MAP = (SYSBP + 2*DIABP) / 3\n\n\nADVS &lt;- tribble(\n  ~USUBJID,      ~PARAMCD, ~PARAM,                            ~AVALU,  ~AVAL, ~VISIT,\n  \"01-701-1015\", \"DIABP\",  \"Diastolic Blood Pressure (mmHg)\", \"mmHg\",    51, \"BASELINE\",\n  \"01-701-1015\", \"SYSBP\",  \"Systolic Blood Pressure (mmHg)\",  \"mmHg\",   121, \"BASELINE\",\n  \"01-701-1028\", \"DIABP\",  \"Diastolic Blood Pressure (mmHg)\", \"mmHg\",    79, \"BASELINE\",\n  \"01-701-1028\", \"SYSBP\",  \"Systolic Blood Pressure (mmHg)\",  \"mmHg\",   130, \"BASELINE\",\n) \n\nderive_param_computed(\n  ADVS,\n  by_vars = exprs(USUBJID, VISIT),\n  parameters = c(\"????\", \"????\"),\n  set_values_to = exprs(\n    AVAL = (AVAL.SYSBP + ?? * AVAL.DIABP) / ??,\n    PARAMCD = \"MAP\",\n    PARAM = \"Mean Arterial Pressure (mmHg)\",\n    AVALU = \"mmHg\",\n  )\n) \n\n\n\n\n\n\n\n# ARD Exercise: Adverse Events summaries using {cards}\n\n\n# Setup: run this first! --------------------------------------------------\n\n# Load necessary packages\nlibrary(cards) \n\n# Import & subset data\nadsl &lt;- pharmaverseadam::adsl |&gt; \n  dplyr::filter(SAFFL==\"Y\") |&gt; \n  dplyr::mutate(ARM2 = ifelse(startsWith(ARM, \"Xanomeline\"), \"Xanomeline\", ARM))\n\nadae &lt;- pharmaverseadam::adae |&gt; \n  dplyr::filter(SAFFL==\"Y\") |&gt; \n  dplyr::mutate(ARM2 = ifelse(startsWith(ARM, \"Xanomeline\"), \"Xanomeline\", ARM))\ndplyr::filter(AESOC %in% unique(AESOC)[1:3]) |&gt; \n  dplyr::group_by(AESOC) |&gt; \n  dplyr::filter(AEDECOD %in% unique(AEDECOD)[1:3]) |&gt; \n  dplyr::ungroup()\n\n\n# Exercise ----------------------------------------------------------------\n\n# A. Calculate the number and percentage of *unique* subjects with at least one AE:\n#  - By each SOC (AESOC)\n#  - By each Preferred term (AEDECOD) within SOC (AESOC)\n# By every combination of treatment group (ARM2) \n\nard_stack_hierarchical(\n  data = ,\n  variables = ,\n  by = , \n  id = ,\n  denominator = \n) \n\n# B. [*BONUS*] Modify the code from part A to include overall number/percentage of\n# subjects with at least one AE, regardless of SOC and PT\n\n\n\n\n\n\n\n# Table Exercise: AE summary table using {tfrmt}\n\n# For this exercise, we will use the AE ARD from the last section to\n# create a {tfrmt} table\n\n\n# Setup: run this first! --------------------------------------------------\n\n## Load necessary packages\nlibrary(cards)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(tfrmt)\n\n## Import & subset data\nadsl &lt;- pharmaverseadam::adsl |&gt; \n  dplyr::filter(SAFFL==\"Y\") |&gt; \n  dplyr::mutate(ARM2 = ifelse(startsWith(ARM, \"Xanomeline\"), \"Xanomeline\", ARM))\n\nadae &lt;- pharmaverseadam::adae |&gt; \n  dplyr::filter(SAFFL==\"Y\") |&gt; \n  dplyr::mutate(ARM2 = ifelse(startsWith(ARM, \"Xanomeline\"), \"Xanomeline\", ARM)) |&gt; \n  dplyr::filter(AESOC %in% unique(AESOC)[1:3]) |&gt; \n  dplyr::group_by(AESOC) |&gt; \n  dplyr::filter(AEDECOD %in% unique(AEDECOD)[1:3]) |&gt; \n  dplyr::ungroup()\n\n## Create AE Summary using cards\nard_ae &lt;- ard_stack_hierarchical(\n  data = adae,\n  variables = c(AESOC, AEDECOD),\n  by = ARM2, \n  id = USUBJID,\n  denominator = adsl,\n  over_variables = TRUE,\n  statistic = ~ c(\"n\", \"p\")\n) \n\n\n# Exercise ----------------------------------------------------------------\n\n# A. Convert `cards` object into a tidy data frame ready for {tfrmt}. \n#    Nothing to do besides run each step & explore the output!\n\nard_ae_tidy &lt;- ard_ae |&gt; \n  shuffle_card(fill_hierarchical_overall = \"ANY EVENT\") |&gt; \n  prep_big_n(vars = \"ARM2\") |&gt; \n  prep_hierarchical_fill(vars = c(\"AESOC\",\"AEDECOD\"),\n                       fill_from_left = TRUE)|&gt; \n  dplyr::select(-c(context, stat_label, stat_variable)) \n\n\n# B. Create a basic tfrmt, filling in the missing variable names\n\nae_tfrmt &lt;- tfrmt(\n  group = AESOC,\n  label = AEDECOD,\n  param = , # fill\n  value = , # fill\n  column = , # fill\n  body_plan = body_plan(\n    frmt_structure(group_val = \".default\", label_val = \".default\", \n                   frmt_combine(\n                     \"{n} ({p}%)\",\n                     n = frmt(\"xx\"),\n                     p = frmt(\"xx\", transform = ~ . *100)\n                   )\n    )\n  ),\n  big_n = big_n_structure(param_val = \"bigN\") \n) \n\nprint_to_gt(ae_tfrmt,\n            ard_ae_tidy)\n\n\n# C. Switch the order of the columns so Placebo is last\n\nae_tfrmt &lt;- ae_tfrmt |&gt; \n  tfrmt(\n    col_plan = col_plan(\n      \"Placebo\",\n      \"Xanomeline\"\n    )\n  )  \n\nprint_to_gt(ae_tfrmt, ard_ae_tidy)\n\n\n# D. Add a title and source note for the table\n\nae_tfrmt &lt;- ae_tfrmt |&gt; \n  tfrmt(\n    title = \"\", # fill\n    footnote_plan = footnote_plan(\n      footnote_structure(\"\") # fill with footnote text\n    ) \n  )\n\nprint_to_gt(ae_tfrmt, ard_ae_tidy)\n\n\n\n\n\n\n\n# Table Exercise: Demographic summary table using {gtsummary}\n\n# Create a Demography table split by treatment\n\n# Setup\n## Load necessary packages\nlibrary(gtsummary)\nlibrary(tidyverse)\n\n## Import data\ndf_gtsummary_exercise &lt;- pharmaverseadam::adsl |&gt;\n  filter(SAFFL == \"Y\") |&gt;\n  left_join(\n    pharmaverseadam::advs |&gt;\n      filter(PARAMCD %in% c(\"BMI\", \"HEIGHT\", \"WEIGHT\"), !is.na(AVAL)) |&gt;\n      arrange(ADY) |&gt;\n      slice(1, .by = c(USUBJID, PARAMCD)) |&gt;\n      pivot_wider(id_cols = USUBJID, names_from = PARAMCD, values_from = AVAL),\n    by = \"USUBJID\"\n  ) |&gt;\n  select(USUBJID, TRT01A, AGE, AGEGR1, SEX, RACE, ETHNIC, BMI, HEIGHT, WEIGHT) |&gt;\n  labelled::set_variable_labels(\n    BMI = \"BMI\",\n    HEIGHT = \"Height, cm\",\n    WEIGHT = \"Weight, kg\"\n  )\n\n# 1. Use tbl_summary() to summarize AGE, AGEGR1, SEX, RACE, ETHNIC, BMI, HEIGHT, WEIGHT by TRT01A\n# 2. For all continuous variables, present the following stats: c(\"{mean} ({sd})\", \"{median} ({p25}, {p75})\", \"{min}, {max}\")\n# 3. Ensure the AGEGR1 levels are reported in the correct order\n# 4. View the ARD saved in the gtsummary table using `gather_ard()` function\n# BONUS!\n# 5. Add the header \"**Active Treatment**\" over the 'Xanomeline' treatments using the `modify_spanning_header()` function\n\ntbl &lt;-\n  df_gtsummary_exercise |&gt;\n  mutate(AGEGR1 = factor()) |&gt;\n  tbl_summary(\n    by = ,\n    include = ,\n    type = ,\n    statistic = ,\n    label =  # add a label for AGEGR1\n  ) |&gt;\n  # add a header above the 'Xanomeline' treatments. HINT: Use `show_header_names()` to know the column names\n  modify_spanning_header()\n\ntbl\n\n# extract the ARD from the table",
    "crumbs": [
      "Exercises + Solutions"
    ]
  },
  {
    "objectID": "exercises/exercises.html#adam.r",
    "href": "exercises/exercises.html#adam.r",
    "title": "Exercises + Solutions",
    "section": "",
    "text": "# Exercise 1\n# Update date and time imputation arguments\n\nlibrary(tibble)\nlibrary(lubridate)\nlibrary(admiral)\n\nposit_mh &lt;- tribble(\n  ~USUBJID, ~MHSTDTC,\n  1,        \"2019-07-18T15:25:40\",\n  1,        \"2019-07-18T15:25\",\n  1,        \"2019-07-18\",\n  2,        \"2024-02\",\n  2,        \"2019\",\n  2,        \"2019---07\",\n  3,        \"\"\n)\n\nderive_vars_dtm(\n  dataset = posit_mh,\n  new_vars_prefix = \"AST\",\n  dtc = MHSTDTC,\n  highest_imputation = \"M\",\n  date_imputation = \"????\",\n  time_imputation = \"????\"\n)\n\n# Exercise 2\n# Update the parameters argument\n# Update set_values_to argument for the formula\n# MAP Formula: MAP = (SYSBP + 2*DIABP) / 3\n\n\nADVS &lt;- tribble(\n  ~USUBJID,      ~PARAMCD, ~PARAM,                            ~AVALU,  ~AVAL, ~VISIT,\n  \"01-701-1015\", \"DIABP\",  \"Diastolic Blood Pressure (mmHg)\", \"mmHg\",    51, \"BASELINE\",\n  \"01-701-1015\", \"SYSBP\",  \"Systolic Blood Pressure (mmHg)\",  \"mmHg\",   121, \"BASELINE\",\n  \"01-701-1028\", \"DIABP\",  \"Diastolic Blood Pressure (mmHg)\", \"mmHg\",    79, \"BASELINE\",\n  \"01-701-1028\", \"SYSBP\",  \"Systolic Blood Pressure (mmHg)\",  \"mmHg\",   130, \"BASELINE\",\n) \n\nderive_param_computed(\n  ADVS,\n  by_vars = exprs(USUBJID, VISIT),\n  parameters = c(\"????\", \"????\"),\n  set_values_to = exprs(\n    AVAL = (AVAL.SYSBP + ?? * AVAL.DIABP) / ??,\n    PARAMCD = \"MAP\",\n    PARAM = \"Mean Arterial Pressure (mmHg)\",\n    AVALU = \"mmHg\",\n  )\n)",
    "crumbs": [
      "Exercises + Solutions"
    ]
  },
  {
    "objectID": "exercises/exercises.html#ard.r",
    "href": "exercises/exercises.html#ard.r",
    "title": "Exercises + Solutions",
    "section": "",
    "text": "# ARD Exercise: Adverse Events summaries using {cards}\n\n\n# Setup: run this first! --------------------------------------------------\n\n# Load necessary packages\nlibrary(cards) \n\n# Import & subset data\nadsl &lt;- pharmaverseadam::adsl |&gt; \n  dplyr::filter(SAFFL==\"Y\") |&gt; \n  dplyr::mutate(ARM2 = ifelse(startsWith(ARM, \"Xanomeline\"), \"Xanomeline\", ARM))\n\nadae &lt;- pharmaverseadam::adae |&gt; \n  dplyr::filter(SAFFL==\"Y\") |&gt; \n  dplyr::mutate(ARM2 = ifelse(startsWith(ARM, \"Xanomeline\"), \"Xanomeline\", ARM))\ndplyr::filter(AESOC %in% unique(AESOC)[1:3]) |&gt; \n  dplyr::group_by(AESOC) |&gt; \n  dplyr::filter(AEDECOD %in% unique(AEDECOD)[1:3]) |&gt; \n  dplyr::ungroup()\n\n\n# Exercise ----------------------------------------------------------------\n\n# A. Calculate the number and percentage of *unique* subjects with at least one AE:\n#  - By each SOC (AESOC)\n#  - By each Preferred term (AEDECOD) within SOC (AESOC)\n# By every combination of treatment group (ARM2) \n\nard_stack_hierarchical(\n  data = ,\n  variables = ,\n  by = , \n  id = ,\n  denominator = \n) \n\n# B. [*BONUS*] Modify the code from part A to include overall number/percentage of\n# subjects with at least one AE, regardless of SOC and PT",
    "crumbs": [
      "Exercises + Solutions"
    ]
  },
  {
    "objectID": "exercises/exercises.html#tables-tfrmt.r",
    "href": "exercises/exercises.html#tables-tfrmt.r",
    "title": "Exercises + Solutions",
    "section": "",
    "text": "# Table Exercise: AE summary table using {tfrmt}\n\n# For this exercise, we will use the AE ARD from the last section to\n# create a {tfrmt} table\n\n\n# Setup: run this first! --------------------------------------------------\n\n## Load necessary packages\nlibrary(cards)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(tfrmt)\n\n## Import & subset data\nadsl &lt;- pharmaverseadam::adsl |&gt; \n  dplyr::filter(SAFFL==\"Y\") |&gt; \n  dplyr::mutate(ARM2 = ifelse(startsWith(ARM, \"Xanomeline\"), \"Xanomeline\", ARM))\n\nadae &lt;- pharmaverseadam::adae |&gt; \n  dplyr::filter(SAFFL==\"Y\") |&gt; \n  dplyr::mutate(ARM2 = ifelse(startsWith(ARM, \"Xanomeline\"), \"Xanomeline\", ARM)) |&gt; \n  dplyr::filter(AESOC %in% unique(AESOC)[1:3]) |&gt; \n  dplyr::group_by(AESOC) |&gt; \n  dplyr::filter(AEDECOD %in% unique(AEDECOD)[1:3]) |&gt; \n  dplyr::ungroup()\n\n## Create AE Summary using cards\nard_ae &lt;- ard_stack_hierarchical(\n  data = adae,\n  variables = c(AESOC, AEDECOD),\n  by = ARM2, \n  id = USUBJID,\n  denominator = adsl,\n  over_variables = TRUE,\n  statistic = ~ c(\"n\", \"p\")\n) \n\n\n# Exercise ----------------------------------------------------------------\n\n# A. Convert `cards` object into a tidy data frame ready for {tfrmt}. \n#    Nothing to do besides run each step & explore the output!\n\nard_ae_tidy &lt;- ard_ae |&gt; \n  shuffle_card(fill_hierarchical_overall = \"ANY EVENT\") |&gt; \n  prep_big_n(vars = \"ARM2\") |&gt; \n  prep_hierarchical_fill(vars = c(\"AESOC\",\"AEDECOD\"),\n                       fill_from_left = TRUE)|&gt; \n  dplyr::select(-c(context, stat_label, stat_variable)) \n\n\n# B. Create a basic tfrmt, filling in the missing variable names\n\nae_tfrmt &lt;- tfrmt(\n  group = AESOC,\n  label = AEDECOD,\n  param = , # fill\n  value = , # fill\n  column = , # fill\n  body_plan = body_plan(\n    frmt_structure(group_val = \".default\", label_val = \".default\", \n                   frmt_combine(\n                     \"{n} ({p}%)\",\n                     n = frmt(\"xx\"),\n                     p = frmt(\"xx\", transform = ~ . *100)\n                   )\n    )\n  ),\n  big_n = big_n_structure(param_val = \"bigN\") \n) \n\nprint_to_gt(ae_tfrmt,\n            ard_ae_tidy)\n\n\n# C. Switch the order of the columns so Placebo is last\n\nae_tfrmt &lt;- ae_tfrmt |&gt; \n  tfrmt(\n    col_plan = col_plan(\n      \"Placebo\",\n      \"Xanomeline\"\n    )\n  )  \n\nprint_to_gt(ae_tfrmt, ard_ae_tidy)\n\n\n# D. Add a title and source note for the table\n\nae_tfrmt &lt;- ae_tfrmt |&gt; \n  tfrmt(\n    title = \"\", # fill\n    footnote_plan = footnote_plan(\n      footnote_structure(\"\") # fill with footnote text\n    ) \n  )\n\nprint_to_gt(ae_tfrmt, ard_ae_tidy)",
    "crumbs": [
      "Exercises + Solutions"
    ]
  },
  {
    "objectID": "exercises/exercises.html#tables-gtsummary.r",
    "href": "exercises/exercises.html#tables-gtsummary.r",
    "title": "Exercises + Solutions",
    "section": "",
    "text": "# Table Exercise: Demographic summary table using {gtsummary}\n\n# Create a Demography table split by treatment\n\n# Setup\n## Load necessary packages\nlibrary(gtsummary)\nlibrary(tidyverse)\n\n## Import data\ndf_gtsummary_exercise &lt;- pharmaverseadam::adsl |&gt;\n  filter(SAFFL == \"Y\") |&gt;\n  left_join(\n    pharmaverseadam::advs |&gt;\n      filter(PARAMCD %in% c(\"BMI\", \"HEIGHT\", \"WEIGHT\"), !is.na(AVAL)) |&gt;\n      arrange(ADY) |&gt;\n      slice(1, .by = c(USUBJID, PARAMCD)) |&gt;\n      pivot_wider(id_cols = USUBJID, names_from = PARAMCD, values_from = AVAL),\n    by = \"USUBJID\"\n  ) |&gt;\n  select(USUBJID, TRT01A, AGE, AGEGR1, SEX, RACE, ETHNIC, BMI, HEIGHT, WEIGHT) |&gt;\n  labelled::set_variable_labels(\n    BMI = \"BMI\",\n    HEIGHT = \"Height, cm\",\n    WEIGHT = \"Weight, kg\"\n  )\n\n# 1. Use tbl_summary() to summarize AGE, AGEGR1, SEX, RACE, ETHNIC, BMI, HEIGHT, WEIGHT by TRT01A\n# 2. For all continuous variables, present the following stats: c(\"{mean} ({sd})\", \"{median} ({p25}, {p75})\", \"{min}, {max}\")\n# 3. Ensure the AGEGR1 levels are reported in the correct order\n# 4. View the ARD saved in the gtsummary table using `gather_ard()` function\n# BONUS!\n# 5. Add the header \"**Active Treatment**\" over the 'Xanomeline' treatments using the `modify_spanning_header()` function\n\ntbl &lt;-\n  df_gtsummary_exercise |&gt;\n  mutate(AGEGR1 = factor()) |&gt;\n  tbl_summary(\n    by = ,\n    include = ,\n    type = ,\n    statistic = ,\n    label =  # add a label for AGEGR1\n  ) |&gt;\n  # add a header above the 'Xanomeline' treatments. HINT: Use `show_header_names()` to know the column names\n  modify_spanning_header()\n\ntbl\n\n# extract the ARD from the table",
    "crumbs": [
      "Exercises + Solutions"
    ]
  },
  {
    "objectID": "exercises/exercises.html#intro.r-1",
    "href": "exercises/exercises.html#intro.r-1",
    "title": "Exercises + Solutions",
    "section": "01-intro.R",
    "text": "01-intro.R",
    "crumbs": [
      "Exercises + Solutions"
    ]
  },
  {
    "objectID": "exercises/exercises.html#sdtm.r-1",
    "href": "exercises/exercises.html#sdtm.r-1",
    "title": "Exercises + Solutions",
    "section": "02-SDTM.R",
    "text": "02-SDTM.R",
    "crumbs": [
      "Exercises + Solutions"
    ]
  },
  {
    "objectID": "exercises/exercises.html#adam.r-1",
    "href": "exercises/exercises.html#adam.r-1",
    "title": "Exercises + Solutions",
    "section": "03-ADaM.R",
    "text": "03-ADaM.R\n\n\n# Exercise 1\n# Update date and time imputation arguments so that any dates or times\n# that are imputed are the last month/day of the year and 23:59:59\n\nlibrary(tibble)\nlibrary(lubridate)\nlibrary(admiral)\n\nposit_mh &lt;- tribble(\n  ~USUBJID, ~MHSTDTC,\n  1,        \"2019-07-18T15:25:40\",\n  1,        \"2019-07-18T15:25\",\n  1,        \"2019-07-18\",\n  2,        \"2024-02\",\n  2,        \"2019\",\n  2,        \"2019---07\",\n  3,        \"\"\n)\n\nderive_vars_dtm(\n  dataset = posit_mh,\n  new_vars_prefix = \"AST\",\n  dtc = MHSTDTC,\n  highest_imputation = \"M\",\n  date_imputation = \"last\",\n  time_imputation = \"last\"\n)\n\n# Exercise 2\n# Update set_values_to argument for the formula\n# MAP Formula: MAP = (SYSBP + 2*DIABP) / 3\n\n\nADVS &lt;- tribble(\n  ~USUBJID,      ~PARAMCD, ~PARAM,                            ~AVALU,  ~AVAL, ~VISIT,\n  \"01-701-1015\", \"DIABP\",  \"Diastolic Blood Pressure (mmHg)\", \"mmHg\",    51, \"BASELINE\",\n  \"01-701-1015\", \"SYSBP\",  \"Systolic Blood Pressure (mmHg)\",  \"mmHg\",   121, \"BASELINE\",\n  \"01-701-1028\", \"DIABP\",  \"Diastolic Blood Pressure (mmHg)\", \"mmHg\",    79, \"BASELINE\",\n  \"01-701-1028\", \"SYSBP\",  \"Systolic Blood Pressure (mmHg)\",  \"mmHg\",   130, \"BASELINE\",\n) \n\nderive_param_computed(\n  ADVS,\n  by_vars = exprs(USUBJID, VISIT),\n  parameters = c(\"SYSBP\", \"DIABP\"),\n  set_values_to = exprs(\n    AVAL = (AVAL.SYSBP + 2 * AVAL.DIABP) / 3,\n    PARAMCD = \"MAP\",\n    PARAM = \"Mean Arterial Pressure (mmHg)\",\n    AVALU = \"mmHg\",\n  )\n)",
    "crumbs": [
      "Exercises + Solutions"
    ]
  },
  {
    "objectID": "exercises/exercises.html#ard.r-1",
    "href": "exercises/exercises.html#ard.r-1",
    "title": "Exercises + Solutions",
    "section": "04-ARD.R",
    "text": "04-ARD.R\n\n\n# ARD Exercise: Adverse Events summaries using {cards}\n\n\n# Setup: run this first! --------------------------------------------------\n\n# Load necessary packages\nlibrary(cards) \n\n# Import & subset data\nadsl &lt;- pharmaverseadam::adsl |&gt; \n  dplyr::filter(SAFFL==\"Y\") |&gt; \n  dplyr::mutate(ARM2 = ifelse(startsWith(ARM, \"Xanomeline\"), \"Xanomeline\", ARM))\n\nadae &lt;- pharmaverseadam::adae |&gt; \n  dplyr::filter(SAFFL==\"Y\") |&gt; \n  dplyr::mutate(ARM2 = ifelse(startsWith(ARM, \"Xanomeline\"), \"Xanomeline\", ARM)) |&gt;\n  dplyr::filter(AESOC %in% unique(AESOC)[1:3]) |&gt; \n  dplyr::group_by(AESOC) |&gt; \n  dplyr::filter(AEDECOD %in% unique(AEDECOD)[1:3]) |&gt; \n  dplyr::ungroup()\n\n  \n# Exercise ----------------------------------------------------------------\n  \n# A. Calculate the number and percentage of *unique* subjects with at least one AE:\n#  - By each SOC (AESOC)\n#  - By each Preferred term (AEDECOD) within SOC (AESOC)\n# By every combination of treatment group (ARM2) \n\nard_stack_hierarchical(\n  data = adae,\n  variables = c(AESOC, AEDECOD),\n  by = ARM2, \n  id = USUBJID,\n  denominator = adsl \n) \n\n# B. [*BONUS*] Modify the code from part A to include overall number/percentage of\n# subjects with at least one AE, regardless of SOC and PT\n\nard_stack_hierarchical(\n  data = adae,\n  variables = c(AESOC, AEDECOD),\n  by = ARM2, \n  id = USUBJID,\n  denominator = adsl,\n  over_variables = TRUE\n)",
    "crumbs": [
      "Exercises + Solutions"
    ]
  },
  {
    "objectID": "exercises/exercises.html#tables-tfrmt.r-1",
    "href": "exercises/exercises.html#tables-tfrmt.r-1",
    "title": "Exercises + Solutions",
    "section": "05-tables-tfrmt.R",
    "text": "05-tables-tfrmt.R\n\n\n# Table Exercise: AE summary table using {tfrmt}\n\n# For this exercise, we will use the AE ARD from the last section to\n# create a {tfrmt} table\n\n\n# Setup: run this first! --------------------------------------------------\n\n## Load necessary packages\nlibrary(cards)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(tfrmt)\n\n## Import & subset data\nadsl &lt;- pharmaverseadam::adsl |&gt; \n  dplyr::filter(SAFFL==\"Y\") |&gt; \n  dplyr::mutate(ARM2 = ifelse(startsWith(ARM, \"Xanomeline\"), \"Xanomeline\", ARM))\n\nadae &lt;- pharmaverseadam::adae |&gt; \n  dplyr::filter(SAFFL==\"Y\") |&gt; \n  dplyr::mutate(ARM2 = ifelse(startsWith(ARM, \"Xanomeline\"), \"Xanomeline\", ARM)) |&gt; \n  dplyr::filter(AESOC %in% unique(AESOC)[1:3]) |&gt; \n  dplyr::group_by(AESOC) |&gt; \n  dplyr::filter(AEDECOD %in% unique(AEDECOD)[1:3]) |&gt; \n  dplyr::ungroup()\n\n## Create AE Summary using cards\nard_ae &lt;- ard_stack_hierarchical(\n  data = adae,\n  variables = c(AESOC, AEDECOD),\n  by = ARM2, \n  id = USUBJID,\n  denominator = adsl,\n  over_variables = TRUE,\n  statistic = ~ c(\"n\", \"p\")\n) \n\n\n# Exercise ----------------------------------------------------------------\n\n# A. Convert `cards` object into a tidy data frame ready for {tfrmt}. \n#    Nothing to do besides run each step & explore the output!\n\nard_ae_tidy &lt;- ard_ae |&gt; \n  shuffle_card(fill_hierarchical_overall = \"ANY EVENT\") |&gt; \n  prep_big_n(vars = \"ARM2\") |&gt; \n  prep_hierarchical_fill(vars = c(\"AESOC\",\"AEDECOD\"),\n                         fill_from_left = TRUE)|&gt; \n  dplyr::select(-c(context, stat_label, stat_variable))  \n\n\n# B. Create a basic tfrmt, filling in the appropriate variable names\n\nae_tfrmt &lt;- tfrmt(\n  group = AESOC,\n  label = AEDECOD,\n  param = stat_name,\n  value = stat,\n  column = ARM2,\n  body_plan = body_plan(\n    frmt_structure(group_val = \".default\", label_val = \".default\", \n                   frmt_combine(\n                     \"{n} ({p}%)\",\n                     n = frmt(\"xx\"),\n                     p = frmt(\"xx\", transform = ~ . *100)\n                   )\n    )\n  ),\n  big_n = big_n_structure(param_val = \"bigN\") \n) \n\nprint_to_gt(ae_tfrmt,\n            ard_ae_tidy)\n\n\n# C. Switch the order of the columns so Placebo is last\n\nae_tfrmt &lt;- ae_tfrmt |&gt; \n  tfrmt(\n    col_plan = col_plan(\n      \"Xanomeline\",\n      \"Placebo\"\n    )\n  )  \n\nprint_to_gt(ae_tfrmt, ard_ae_tidy)\n\n\n# D. Add a title and source note for the table\n\nae_tfrmt &lt;- ae_tfrmt |&gt; \n  tfrmt(\n    title = \"AE Table\",\n    footnote_plan = footnote_plan(\n      footnote_structure(\"A typical AE Table\")\n    ) \n  )\n\nprint_to_gt(ae_tfrmt, ard_ae_tidy)",
    "crumbs": [
      "Exercises + Solutions"
    ]
  },
  {
    "objectID": "exercises/exercises.html#tables-gtsummary.r-1",
    "href": "exercises/exercises.html#tables-gtsummary.r-1",
    "title": "Exercises + Solutions",
    "section": "06-tables-gtsummary.R",
    "text": "06-tables-gtsummary.R\n\n\n# Table Exercise: Demographic summary table using {gtsummary}\n\n# Create a Demography table split by treatment\n\n# Setup\n## Load necessary packages\nlibrary(gtsummary)\nlibrary(tidyverse)\n\n## Import data\ndf_gtsummary_exercise &lt;- pharmaverseadam::adsl |&gt;\n  filter(SAFFL == \"Y\") |&gt;\n  left_join(\n    pharmaverseadam::advs |&gt;\n      filter(PARAMCD %in% c(\"BMI\", \"HEIGHT\", \"WEIGHT\"), !is.na(AVAL)) |&gt;\n      arrange(ADY) |&gt;\n      slice(1, .by = c(USUBJID, PARAMCD)) |&gt;\n      pivot_wider(id_cols = USUBJID, names_from = PARAMCD, values_from = AVAL),\n    by = \"USUBJID\"\n  ) |&gt;\n  select(USUBJID, TRT01A, AGE, AGEGR1, SEX, RACE, ETHNIC, BMI, HEIGHT, WEIGHT) |&gt;\n  labelled::set_variable_labels(\n    BMI = \"BMI\",\n    HEIGHT = \"Height, cm\",\n    WEIGHT = \"Weight, kg\"\n  )\n\n# 1. Use tbl_summary() to summarize AGE, AGEGR1, SEX, RACE, ETHNIC, BMI, HEIGHT, WEIGHT by TRT01A\n# 2. For all continuous variables, present the following stats: c(\"{mean} ({sd})\", \"{median} ({p25}, {p75})\", \"{min}, {max}\")\n# 3. Ensure the AGEGR1 levels are reported in the correct order\n# 4. View the ARD saved in the gtsummary table using `gather_ard()` function\n# BONUS!\n# 5. Add the header \"**Active Treatment**\" over the 'Xanomeline' treatments using the `modify_spanning_header()` function\n\n\ntbl &lt;-\n  df_gtsummary_exercise |&gt;\n  # ensure the age groups print in the correct order\n  mutate(AGEGR1 = factor(AGEGR1, levels = c(\"18-64\", \"&gt;64\"))) |&gt;\n  tbl_summary(\n    by = TRT01A,\n    include = c(AGE, AGEGR1, SEX, RACE, ETHNIC, BMI, HEIGHT, WEIGHT), \n    type = all_continuous() ~ \"continuous2\", # all continuous variables should be summarized as multi-row\n    statistic = all_continuous() ~ c(\"{mean} ({sd})\", \"{median} ({p25}, {p75})\", \"{min}, {max}\"), # change the statistics for all continuous variables\n    label = list(AGEGR1 = \"Age Group\"), # add a label for AGEGR1\n  ) |&gt;\n  # add a header above the 'Xanomeline' treatments. We used `show_header_names()` to know the column names\n  modify_spanning_header(c(stat_2, stat_3) ~ \"**Active Treatment**\")\n\ntbl\n\n# extract the ARD from the table\ngather_ard(tbl)",
    "crumbs": [
      "Exercises + Solutions"
    ]
  },
  {
    "objectID": "license.html",
    "href": "license.html",
    "title": "License",
    "section": "",
    "text": "This work is licensed under a Creative Commons Attribution 4.0 International License.",
    "crumbs": [
      "License"
    ]
  },
  {
    "objectID": "slides/02-SDTM/index.html#objectives",
    "href": "slides/02-SDTM/index.html#objectives",
    "title": "CDISC SDTM (Study Data Tabulation Model) datasets in R",
    "section": "Objectives",
    "text": "Objectives\n\nBy the end of this workshop you will have:\n\nGained an understanding of how to use sdtm.oak and algorithms.\nSeen code executed for SDTM VS and DM using sdtm.oak.\nGained an understanding of how to use resources for building SDTM in R."
  },
  {
    "objectID": "slides/02-SDTM/index.html#end-to-end-with-barb",
    "href": "slides/02-SDTM/index.html#end-to-end-with-barb",
    "title": "CDISC SDTM (Study Data Tabulation Model) datasets in R",
    "section": "End to End with Barb!!",
    "text": "End to End with Barb!!\n\n\n\n\n\n\n\n\nflowchart LR\n  A[Raw] --&gt; B[SDTM]\n  B[SDTM] --&gt; C[ADaM]\n  C[ADaM] --&gt; D[ARD]\n  D[ARD] --&gt; E[TFL]\n  \n%% Apply the custom class \"highlight\" to node B\nclass B highlight;\n\n%% Define the style for the \"highlight\" class:\nclassDef highlight fill:#F9B, stroke:#333, stroke-width:2px;"
  },
  {
    "objectID": "slides/02-SDTM/index.html#assumptions",
    "href": "slides/02-SDTM/index.html#assumptions",
    "title": "CDISC SDTM (Study Data Tabulation Model) datasets in R",
    "section": "Assumptions",
    "text": "Assumptions\n\nBasic knowledge of CDISC Standards (SDTM Domains)\n Check out the [SDTM IG and other documents for CDISC](https://www.cdisc.org/standards/foundational/sdtm)\n🦺 But even lacking CDSIC knowledge, we still think you will gain some great learnings today! 🦺\nBasic familiarity in R, RStudio IDE and its packages"
  },
  {
    "objectID": "slides/02-SDTM/index.html#agenda",
    "href": "slides/02-SDTM/index.html#agenda",
    "title": "CDISC SDTM (Study Data Tabulation Model) datasets in R",
    "section": "Agenda",
    "text": "Agenda\n\n🕙 20 minutes Introduction to sdtm.oak\n🕥 20 minutes VS domain programming & check in on Barb\n🕦 10 minutes DM domain programming & check in on Barb\n🕦 10 minutes short exercise"
  },
  {
    "objectID": "slides/02-SDTM/index.html#about-the-package",
    "href": "slides/02-SDTM/index.html#about-the-package",
    "title": "CDISC SDTM (Study Data Tabulation Model) datasets in R",
    "section": "About the package",
    "text": "About the package\n\nSponsored by CDISC COSA, pharmaceutical companies, including Roche, Pfizer, GSK, Vertex, Atorus Research, Pattern Institute, Transition Technologies Science.\nPart of the pharmaverse Group of packages.\nInspired by the Roche’s roak package.\nAddresses a critical gap in the pharmaverse suite by enabling study programmers to create SDTM datasets in R, complementing the existing capabilities for ADaM, TLGs, eSubmission, etc."
  },
  {
    "objectID": "slides/02-SDTM/index.html#challenges-in-sdtm-programming",
    "href": "slides/02-SDTM/index.html#challenges-in-sdtm-programming",
    "title": "CDISC SDTM (Study Data Tabulation Model) datasets in R",
    "section": "Challenges in SDTM Programming",
    "text": "Challenges in SDTM Programming\n\nAlthough SDTM is simpler with less complex derivations compared to ADaM, it presents unique challenges. Unlike ADaM, which uses SDTM datasets as its source with a well-defined structure, SDTM relies on raw datasets as input.\nRaw Data structure - Different EDC systems produce data in different structures, different variable names, dataset names etc.\nVarying Data Collection standards - Although CDASH is available, the companies can still develop varying eCRFs using CDASH standards."
  },
  {
    "objectID": "slides/02-SDTM/index.html#sdtm.oak-v0.2",
    "href": "slides/02-SDTM/index.html#sdtm.oak-v0.2",
    "title": "CDISC SDTM (Study Data Tabulation Model) datasets in R",
    "section": "sdtm.oak v0.2",
    "text": "sdtm.oak v0.2\n\nv0.2 is avaiable on CRAN.\nEDC agnostic sdtm.oak is designed to be highly versatile, accommodating varying raw data structures from different EDC systems and external vendors.\nData standards agnostic It supports both CDISC-defined data collection standards (CDASH) and various proprietary data collection standards defined by pharmaceutical companies.\nProvides a framework for modular programming, making it a valuable addition to the pharmaverse ecosystem."
  },
  {
    "objectID": "slides/02-SDTM/index.html#key-concepts",
    "href": "slides/02-SDTM/index.html#key-concepts",
    "title": "CDISC SDTM (Study Data Tabulation Model) datasets in R",
    "section": "Key concepts",
    "text": "Key concepts\n\nThe SDTM mappings that transform the collected source data into the target SDTM data model are grouped into algorithms.\nThese mapping algorithms form the backbone of   sdtm.oak \nAlgorithms can be re-used across multiple SDTM domains.\nProgramming language agnostic This concept does not rely on a specific programming language for implementation.\nsdtm.oak has R functions to represent each algorithm"
  },
  {
    "objectID": "slides/02-SDTM/index.html#assign_no_ct",
    "href": "slides/02-SDTM/index.html#assign_no_ct",
    "title": "CDISC SDTM (Study Data Tabulation Model) datasets in R",
    "section": "assign_no_ct",
    "text": "assign_no_ct\n\n\n\n\n\n\n\n\nAlgorithm or Function\nDescription of the Algorithm\nExample SDTM mapping\n\n\n\n\n        assign_no_ct()  \nOne-to-one mapping between the raw source and a target SDTM variable that has no controlled terminology restrictions. Just a simple assignment statement.\nMH.MHTERM  AE.AETERM"
  },
  {
    "objectID": "slides/02-SDTM/index.html#assign_ct",
    "href": "slides/02-SDTM/index.html#assign_ct",
    "title": "CDISC SDTM (Study Data Tabulation Model) datasets in R",
    "section": "assign_ct",
    "text": "assign_ct\n\n\n\n\n\n\n\n\nAlgorithm or Function\nDescription of the Algorithm\nExample SDTM mapping\n\n\n\n\n        assign_ct()  \nOne-to-one mapping between the raw source and a target SDTM variable that is subject to controlled terminology restrictions. A simple assign statement and applying controlled terminology. This will be used only if the SDTM variable has an associated controlled terminology.\nVS.VSPOS  VS.VSLAT"
  },
  {
    "objectID": "slides/02-SDTM/index.html#assign_datetime",
    "href": "slides/02-SDTM/index.html#assign_datetime",
    "title": "CDISC SDTM (Study Data Tabulation Model) datasets in R",
    "section": "assign_datetime",
    "text": "assign_datetime\n\n\n\n\n\n\n\n\nAlgorithm or Function\nDescription of the Algorithm\nExample SDTM mapping\n\n\n\n\n        assign_datetime()  \nOne-to-one mapping between the raw source and a target that involves mapping a Date or time or datetime component. This mapping algorithm also takes care of handling unknown dates and converting them into. ISO8601 format.\nMH.MHSTDTC  AE.AEENDTC"
  },
  {
    "objectID": "slides/02-SDTM/index.html#hardcode_ct",
    "href": "slides/02-SDTM/index.html#hardcode_ct",
    "title": "CDISC SDTM (Study Data Tabulation Model) datasets in R",
    "section": "hardcode_ct",
    "text": "hardcode_ct\n\n\n\n\n\n\n\n\nAlgorithm or Function\nDescription of the Algorithm\nExample SDTM mapping\n\n\n\n\n        hardcode_ct()  \nMapping a hardcoded value to a target SDTM variable that is subject to terminology restrictions. This will be used only if the SDTM variable has an associated controlled terminology.\nMH.MHPRESP = ‘Y’  VS.VSORRESU = ‘mmHg’"
  },
  {
    "objectID": "slides/02-SDTM/index.html#hardcode_no_ct",
    "href": "slides/02-SDTM/index.html#hardcode_no_ct",
    "title": "CDISC SDTM (Study Data Tabulation Model) datasets in R",
    "section": "hardcode_no_ct",
    "text": "hardcode_no_ct\n\n\n\n\n\n\n\n\nAlgorithm or Function\nDescription of the Algorithm\nExample SDTM mapping\n\n\n\n\n        hardcode_no_ct()  \nMapping a hardcoded value to a target SDTM variable that has no terminology restrictions.\nCM.CMTRT = ‘FLUIDS’  VS.VSCAT = ‘VITAL SIGNS’"
  },
  {
    "objectID": "slides/02-SDTM/index.html#condition_add",
    "href": "slides/02-SDTM/index.html#condition_add",
    "title": "CDISC SDTM (Study Data Tabulation Model) datasets in R",
    "section": "condition_add",
    "text": "condition_add\n\n\n\n\n\n\n\n\nAlgorithm or Function\nDescription of the Algorithm\nExample SDTM mapping\n\n\n\n\n        condition_add()  \nAlgorithm that is used to filter the source data and/or target domain based on a condition. The mapping will be applied only if the condition is met. This algorithm has to be used in conjunction with other algorithms, that is if the condition is met perform the mapping using algorithms like assign_ct, assign_no_ct, hardcode_ct, hardcode_no_ct, assign_datetime.\nIf MDPRIOR == 1 then CM.CMSTRTPT = ‘BEFORE’. VS.VSMETHOD when VSTESTCD = ‘TEMP’"
  },
  {
    "objectID": "slides/02-SDTM/index.html#oak_cal_ref_dates",
    "href": "slides/02-SDTM/index.html#oak_cal_ref_dates",
    "title": "CDISC SDTM (Study Data Tabulation Model) datasets in R",
    "section": "oak_cal_ref_dates",
    "text": "oak_cal_ref_dates\n\n\n\n\n\n\n\n\nAlgorithm or Function\nDescription of the Algorithm\nExample SDTM mapping\n\n\n\n\n        oak_cal_ref_dates()  \nDerivation of Reference dates in the DM domain\nDM.RFSTDTC  DM.RFPENDTC"
  },
  {
    "objectID": "slides/02-SDTM/index.html#reusable-algorithms",
    "href": "slides/02-SDTM/index.html#reusable-algorithms",
    "title": "CDISC SDTM (Study Data Tabulation Model) datasets in R",
    "section": "Reusable Algorithms",
    "text": "Reusable Algorithms"
  },
  {
    "objectID": "slides/02-SDTM/index.html#algorithms-compared-to-dplyr",
    "href": "slides/02-SDTM/index.html#algorithms-compared-to-dplyr",
    "title": "CDISC SDTM (Study Data Tabulation Model) datasets in R",
    "section": "Algorithms compared to dplyr",
    "text": "Algorithms compared to dplyr\n\nsdtm.oak algorithms enhances dplyr functions\n\nAllowing users to perform multiple actions within a single function call.\nApplying if_else condtions, Controlled Terminology in a single function call by providing a simple approach compared to case_when statements.\nMapping an SDTM variable only if the source contains data, which is particularly useful when hardcoding.\nHandling unknown dates, as well as date and time collected in separate or the same raw variables.\nAdding qualifiers to topic variables using oak id variables.\n\nWhile all these can be achieved using dplyr, the algorithms in sdtm.oak provide a more elegant and efficient approach."
  },
  {
    "objectID": "slides/02-SDTM/index.html#programming-concepts",
    "href": "slides/02-SDTM/index.html#programming-concepts",
    "title": "CDISC SDTM (Study Data Tabulation Model) datasets in R",
    "section": "Programming concepts",
    "text": "Programming concepts\n\nIs very close to the key SDTM concepts.\nProvide a straightforward way to do step-by-step SDTM programming in R, that is, mapping topic variable and its qualifiers.\nProgramming steps are generic across SDTM domain classes like Events, Interventions, Findings"
  },
  {
    "objectID": "slides/02-SDTM/index.html#sdtm-concept",
    "href": "slides/02-SDTM/index.html#sdtm-concept",
    "title": "CDISC SDTM (Study Data Tabulation Model) datasets in R",
    "section": "SDTM Concept",
    "text": "SDTM Concept\n\nsdtm concept"
  },
  {
    "objectID": "slides/02-SDTM/index.html#programming-steps",
    "href": "slides/02-SDTM/index.html#programming-steps",
    "title": "CDISC SDTM (Study Data Tabulation Model) datasets in R",
    "section": "Programming steps",
    "text": "Programming steps\n\nRead Raw datasets\nCreate id vars in the raw dataset\nRead study controlled terminology\nMap Topic Variable\nMap Rest of the variables\nRepeat Map topic and Map rest for every topic variable\nCreate SDTM derived variables\nAdd Lables and Attributes"
  },
  {
    "objectID": "slides/02-SDTM/index.html#oak-id-vars",
    "href": "slides/02-SDTM/index.html#oak-id-vars",
    "title": "CDISC SDTM (Study Data Tabulation Model) datasets in R",
    "section": "oak id vars",
    "text": "oak id vars\n\nRaw data can be in long format, where each piece of collected data is represented as a column.\nIn SDTM mappings, transposing may be necessary to create multiple records from a single row in a raw dataset (e.g., HEIGHT and WEIGHT in the VS domain).\nAlternatively, a single row in an SDTM domain can be created from one row of the raw dataset (e.g., AETERM from the adverse events raw dataset).\nQualifiers need to be mapped to their corresponding topic variables.\nThe OAK ID variables are a combination of patient number, row number of the raw dataset, and raw source name.\nThese id variables provide key linkage between the SDTM datasets and the raw datasets during programming."
  },
  {
    "objectID": "slides/02-SDTM/index.html#how-we-will-code-today",
    "href": "slides/02-SDTM/index.html#how-we-will-code-today",
    "title": "CDISC SDTM (Study Data Tabulation Model) datasets in R",
    "section": "How we will “code” today",
    "text": "How we will “code” today\n\nWe will walk you through coding VS and DM\n\nDiscussion on each function and function arguments\nCheck-in Poll"
  },
  {
    "objectID": "slides/02-SDTM/index.html#review-specs",
    "href": "slides/02-SDTM/index.html#review-specs",
    "title": "CDISC SDTM (Study Data Tabulation Model) datasets in R",
    "section": "Review specs",
    "text": "Review specs\nReview aCRF\n\nVitalSigns_aCRF"
  },
  {
    "objectID": "slides/02-SDTM/index.html#code-walkthrough",
    "href": "slides/02-SDTM/index.html#code-walkthrough",
    "title": "CDISC SDTM (Study Data Tabulation Model) datasets in R",
    "section": "Code Walkthrough",
    "text": "Code Walkthrough\nRun the code and explain to the users"
  },
  {
    "objectID": "slides/02-SDTM/index.html#check-in-on-barb-in-vitals-raw-dataset",
    "href": "slides/02-SDTM/index.html#check-in-on-barb-in-vitals-raw-dataset",
    "title": "CDISC SDTM (Study Data Tabulation Model) datasets in R",
    "section": "Check in on Barb in Vitals Raw dataset",
    "text": "Check in on Barb in Vitals Raw dataset\n\n\n\n\n\n\n\nPATNUM: 701-1034\nOAK_ID: 213\nINSTANCE: WEEK2\nVTLD: 15-Jul-2014\nTMPTC: after Lying Down for 5 Minutes\nSYS_BP: 183.0\nDIA_BP: 81.0"
  },
  {
    "objectID": "slides/02-SDTM/index.html#check-in-on-barb-in-vs",
    "href": "slides/02-SDTM/index.html#check-in-on-barb-in-vs",
    "title": "CDISC SDTM (Study Data Tabulation Model) datasets in R",
    "section": "Check in on Barb in VS",
    "text": "Check in on Barb in VS\n\n\n\n\n\n\n\nUSUBJID: 01-701-1034\nVSTESTCD: SYSBP and DIABP\nVISIT: WEEK2\nVSDTC: 2014-07-15\nVSTPT: AFTER LYING DOWN FOR 5 MINUTES\nVSORRES: 183.0 and 81.0"
  },
  {
    "objectID": "slides/02-SDTM/index.html#quiz---1",
    "href": "slides/02-SDTM/index.html#quiz---1",
    "title": "CDISC SDTM (Study Data Tabulation Model) datasets in R",
    "section": "Quiz - 1",
    "text": "Quiz - 1\nWhat function should be used for mapping for CMROUTE. The Route information is collected in a drop down list on the CRF.\n\n\n\n\n\n  assign_no_ct() \n\n\n  assign_ct() \n\n\n\n\n\n\n\n\nCorrect answer:\nb) As CMROUTE has a codelist associated we need to use   assign_ct()"
  },
  {
    "objectID": "slides/02-SDTM/index.html#review-specs-1",
    "href": "slides/02-SDTM/index.html#review-specs-1",
    "title": "CDISC SDTM (Study Data Tabulation Model) datasets in R",
    "section": "Review specs",
    "text": "Review specs\nReview aCRF\n\nDemographics_aCRF\nExposure_as_collected_aCRF\nSubject_Disposition_aCRF"
  },
  {
    "objectID": "slides/02-SDTM/index.html#reference-date-derivation",
    "href": "slides/02-SDTM/index.html#reference-date-derivation",
    "title": "CDISC SDTM (Study Data Tabulation Model) datasets in R",
    "section": "Reference date derivation",
    "text": "Reference date derivation\n\nDM domain has reference date variables like RFSTDTC, RFENDTC, RFICDTC, RFPENDTC.\nUsually the programming logic includes deriving this as a minimum or maximum date from the raw data across multiple eCRFs.\noak_cal_ref_dates function can help users derive these reference dates based on the metadata provided in a configuration file - ref_date_config_df.\nUsers have to prepare this additional metadata file to derive reference dates."
  },
  {
    "objectID": "slides/02-SDTM/index.html#reference-date-configuration-file",
    "href": "slides/02-SDTM/index.html#reference-date-configuration-file",
    "title": "CDISC SDTM (Study Data Tabulation Model) datasets in R",
    "section": "Reference date configuration file",
    "text": "Reference date configuration file\n\nAn intuitive way to let   sdtm.oak  know where to look for the reference dates.\nMultiple eCRFs or raw datasets and variables can be specified to derive a specific reference date. The columns in the file are\nraw_dataset_name : Name of the raw dataset.\ndate_var : Date variable name from the raw dataset.\ntime_var : Time variable name from the raw dataset.\ndformat : Format of the date collected in raw data.\ntformat: Format of the time collected in raw data.\nsdtm_var_name : Reference variable name."
  },
  {
    "objectID": "slides/02-SDTM/index.html#code-walkthrough-1",
    "href": "slides/02-SDTM/index.html#code-walkthrough-1",
    "title": "CDISC SDTM (Study Data Tabulation Model) datasets in R",
    "section": "Code Walkthrough",
    "text": "Code Walkthrough\nRun the code and explain to the users"
  },
  {
    "objectID": "slides/02-SDTM/index.html#check-in-on-barb-in-raw-dataset",
    "href": "slides/02-SDTM/index.html#check-in-on-barb-in-raw-dataset",
    "title": "CDISC SDTM (Study Data Tabulation Model) datasets in R",
    "section": "Check in on Barb in Raw dataset",
    "text": "Check in on Barb in Raw dataset\n\n\n\n\n\n\n\nPATNUM: 701-1034\nOAK_ID: 5\nIT.AGE: 77\nIT.SEX: Female"
  },
  {
    "objectID": "slides/02-SDTM/index.html#check-in-on-barb-in-dm",
    "href": "slides/02-SDTM/index.html#check-in-on-barb-in-dm",
    "title": "CDISC SDTM (Study Data Tabulation Model) datasets in R",
    "section": "Check in on Barb in DM",
    "text": "Check in on Barb in DM\n\n\n\n\n\n\n\nUSUBJID: 01-701-1034\nAGE: 77\nSEX: FEMALE"
  },
  {
    "objectID": "slides/02-SDTM/index.html#quiz---2",
    "href": "slides/02-SDTM/index.html#quiz---2",
    "title": "CDISC SDTM (Study Data Tabulation Model) datasets in R",
    "section": "Quiz - 2",
    "text": "Quiz - 2\nWhen to use hardcode mapping algorithm?\n\n\n\n\n\nTo assign a collected value on the eCRF\n\n\nTo Hardcode a SDTM variable that has not directly collected on the eCRF.\n\n\n\n\n\n\n\n\nCorrect answer:\nb) To hardcode a value use hardcode algorithms. To assign a collected value use assign algorithms"
  },
  {
    "objectID": "slides/02-SDTM/index.html#check-in-exercise",
    "href": "slides/02-SDTM/index.html#check-in-exercise",
    "title": "CDISC SDTM (Study Data Tabulation Model) datasets in R",
    "section": "Check-in Exercise",
    "text": "Check-in Exercise\n\nlibrary(sdtm.oak)\nlibrary(pharmaverseraw)\nlibrary(dplyr)\n\n#AE aCRF - https://github.com/pharmaverse/pharmaverseraw/blob/main/vignettes/articles/aCRFs/AdverseEvent_aCRF.pdf\n\n# Read in Raw dataset ----\nae_raw &lt;- pharmaverseraw::ae_raw\n\n# Generate oak_id_vars ----\nae_raw &lt;- ae_raw %&gt;%\n  generate_oak_id_vars(\n    pat_var = \"PATNUM\",\n    raw_src = \"ae_raw\"\n  )\n\n# Read in Controlled Terminology\nstudy_ct &lt;-  data.frame(\n  codelist_code = c(\"C66742\", \"C66742\"),\n  term_code = c(\"C49487\", \"C49488\"),\n  term_value = c(\"N\", \"Y\"),\n  collected_value = c(\"No\", \"Yes\"),\n  term_preferred_term = c(\"No\", \"Yes\"),\n  term_synonyms = c(\"No\", \"Yes\"),\n  stringsAsFactors = FALSE\n)\n\n# Map AETERM from raw_var=IT.AETERM, tgt_var=AETERM\n# Map AESER from raw_var=IT.AESER, tgt_var=AESER. Codelist code for AESDTH is C66742\n# Map AESDTH from raw_var=IT.AESDTH, tgt_var=AESDTH.Annotation text is \n#    If \"Yes\" then AESDTH = \"Y\" else Not Submitted. Codelist code for AESDTH is C66742\n\nAdd the “completed” sticky note to your laptop when complete.\n\n\n\n−+\n10:00"
  },
  {
    "objectID": "slides/02-SDTM/index.html#exercise-solution",
    "href": "slides/02-SDTM/index.html#exercise-solution",
    "title": "CDISC SDTM (Study Data Tabulation Model) datasets in R",
    "section": "Exercise Solution",
    "text": "Exercise Solution\n\nae &lt;-\n  # Derive topic variable\n  # Map AETERM using assign_no_ct, raw_var=IT.AETERM, tgt_var=AETERM\n  assign_no_ct(\n    raw_dat = ae_raw,\n    raw_var = \"IT.AETERM\",\n    tgt_var = \"AETERM\",\n    id_vars = oak_id_vars()\n  ) %&gt;%\n  # Map AESER using assign_no_ct, raw_var=IT.AESER, tgt_var=AESER\n  assign_ct(\n    raw_dat = ae_raw,\n    raw_var = \"IT.AESER\",\n    tgt_var = \"AESER\",\n    ct_spec = study_ct,\n    ct_clst = \"C66742\",\n    id_vars = oak_id_vars()\n  ) %&gt;%\n  # Map AESDTH using condition_add & assign_ct, raw_var=IT.AESDTH, tgt_var=AESDTH\n  assign_ct(\n    raw_dat = condition_add(ae_raw, IT.AESDTH == \"Yes\"),\n    raw_var = \"IT.AESDTH\",\n    tgt_var = \"AESDTH\",\n    ct_spec = study_ct,\n    ct_clst = \"C66742\",\n    id_vars = oak_id_vars()\n  )"
  },
  {
    "objectID": "slides/02-SDTM/index.html#get-involved",
    "href": "slides/02-SDTM/index.html#get-involved",
    "title": "CDISC SDTM (Study Data Tabulation Model) datasets in R",
    "section": "Get Involved",
    "text": "Get Involved\nPlease try the package and provide us with your feedback, or get involved in the development of new features. We can be reached through any of the following means:\nSlack: https://oakgarden.slack.com\nGitHub: https://github.com/pharmaverse/sdtm.oak\nCDISC Wiki: https://wiki.cdisc.org/display/oakgarden"
  },
  {
    "objectID": "slides/02-SDTM/index.html#learning-resources",
    "href": "slides/02-SDTM/index.html#learning-resources",
    "title": "CDISC SDTM (Study Data Tabulation Model) datasets in R",
    "section": "Learning Resources",
    "text": "Learning Resources\nsdtm.oak Documentation\nsdtm.oak Youtube Video\nsdtm.oak Pharmaverse Blog\nSDTM Programming in R with sdtm.oak"
  },
  {
    "objectID": "slides/02-SDTM/index.html#thank-you",
    "href": "slides/02-SDTM/index.html#thank-you",
    "title": "CDISC SDTM (Study Data Tabulation Model) datasets in R",
    "section": "Thank you",
    "text": "Thank you"
  },
  {
    "objectID": "slides/03-ADaM/index.html#objectives",
    "href": "slides/03-ADaM/index.html#objectives",
    "title": "ADaMs with {admiral} and friends",
    "section": "Objectives",
    "text": "Objectives\n\nBy the end of this ADaM section you will have:\n\nGained an understanding of how to use admiral, metatools/metacore, and xportr packages to create ADaMs\nSeen code executed to create variables and records common to ADSL and ADVS.\nSeen small code snippets of certain functions with play data.\nChecked in on our fav participant - Barb.\nCompleted two short exercises using functions from admiral package."
  },
  {
    "objectID": "slides/03-ADaM/index.html#play-by-play-to-achieve-our-objectives",
    "href": "slides/03-ADaM/index.html#play-by-play-to-achieve-our-objectives",
    "title": "ADaMs with {admiral} and friends",
    "section": "Play by Play to achieve our Objectives",
    "text": "Play by Play to achieve our Objectives\n\n🕙11:00 - 11:15 Set the Stage: Overview of how we will work, datasets, specs, packages, functions\n🕥11:15 - 11:40 Subject-level dataset: ADSL\n🕚11:40 - 11:50 Check in on Barb / Exercise\n🕦11:50 - 12:20 Basic Data Structure: ADVS\n🕚12:20 - 12:30 Check in on Barb / Exercise\n🕚12:30 Lunch!"
  },
  {
    "objectID": "slides/03-ADaM/index.html#end-to-end-with-barb",
    "href": "slides/03-ADaM/index.html#end-to-end-with-barb",
    "title": "ADaMs with {admiral} and friends",
    "section": "End to End with Barb!!",
    "text": "End to End with Barb!!\n\n\n\n\n\n\n\n\nflowchart LR\n  A[Raw] --&gt; B[SDTM]\n  B[SDTM] --&gt; C[ADaM]\n  C[ADaM] --&gt; D[ARD]\n  D[ARD] --&gt; E[TFL]\n  \n%% Apply the custom class \"highlight\" to node B\nclass C highlight;\n\n%% Define the style for the \"highlight\" class:\nclassDef highlight fill:#F9B, stroke:#333, stroke-width:2px;  \n\n\n\n\n\n\n\nWe are going to take a glimpse of where Barb is in ADSL and ADVS"
  },
  {
    "objectID": "slides/03-ADaM/index.html#set-the-stage-1",
    "href": "slides/03-ADaM/index.html#set-the-stage-1",
    "title": "ADaMs with {admiral} and friends",
    "section": "Set the Stage",
    "text": "Set the Stage\n\nHow we will work for the next 90 minutes?\nData (SDTMs, ADSL, and ADVS)\nSpecs (Excel document with lots of tabs)\npharmaverse packages\n\nplaying nice with tidyverse and base R!!\n\nFunctions to make ADaM variables and records."
  },
  {
    "objectID": "slides/03-ADaM/index.html#how-we-will-proceed-today-1",
    "href": "slides/03-ADaM/index.html#how-we-will-proceed-today-1",
    "title": "ADaMs with {admiral} and friends",
    "section": "How we will proceed today?",
    "text": "How we will proceed today?\n\nI will pull out certain functions of the ADSL and ADVS R scripts.\n\nLet’s take a quick peek at the scripts.\nI will discuss certain functions and function arguments from scripts for deriving variables/records.\nWill pull up full function arguments to briefly highlight other powers. 💡\nWhen possible will have some play data and mini-runs of the function. 🏸"
  },
  {
    "objectID": "slides/03-ADaM/index.html#how-we-will-proceed-today-continued",
    "href": "slides/03-ADaM/index.html#how-we-will-proceed-today-continued",
    "title": "ADaMs with {admiral} and friends",
    "section": "How we will proceed today continued?",
    "text": "How we will proceed today continued?\n\nTwo exercises set up to help explore two key functions discussed:\n\nderive_vars_dtm() at end of ADSL.\nderive_param_computed() at end of ADVS.\n\nBrief notes on the code in script and exercises:\n\nCode in scripts should run out of the box.\nYou can run now, but if something doesn’t work let’s fix at the exercises.\nExercises will need some minor updates.\n3 folks not presenting can help diagnose issues during exercises."
  },
  {
    "objectID": "slides/03-ADaM/index.html#adsl---subject-level-dataset",
    "href": "slides/03-ADaM/index.html#adsl---subject-level-dataset",
    "title": "ADaMs with {admiral} and friends",
    "section": "ADSL - Subject Level Dataset",
    "text": "ADSL - Subject Level Dataset\n\n\n\n\nADSL - Subject Level Dataset, i.e each subject has a record. Focus on adding variables.\nWe will use SDTM data from the pharmaversesdtm package.\n\nADSL is available in the pharmaverseadam package"
  },
  {
    "objectID": "slides/03-ADaM/index.html#advs---vital-signs-dataset",
    "href": "slides/03-ADaM/index.html#advs---vital-signs-dataset",
    "title": "ADaMs with {admiral} and friends",
    "section": "ADVS - Vital Signs Dataset",
    "text": "ADVS - Vital Signs Dataset\n\n\n\n\nADVS - Is a Basic Data Structure (BDS) Dataset. Focus on adding records, but also some variables!\nWe will use SDTM data vs from the pharmaversesdtm package and ADSL from dataset created by the adsl.R script.\nADVS is available in the pharmaverseadam package"
  },
  {
    "objectID": "slides/03-ADaM/index.html#spec-details",
    "href": "slides/03-ADaM/index.html#spec-details",
    "title": "ADaMs with {admiral} and friends",
    "section": "Spec-details",
    "text": "Spec-details\n\nGives specifics on how we derive variables in the ADaMs (extreme traceability)\nP21-like spec\n\nP21 is spec/data validation tool widely used in the industry for creating and validating SDTMs and ADaMs.\n\nThese specs are not fit for purpose - just a helpful guide\nWhat is in the the Specs:\n\nTwo datasets, dataset labels and variable keys\nVariables - labels, lengths, types, linked to method\nCodelists / Control Terms!!"
  },
  {
    "objectID": "slides/03-ADaM/index.html#spec-peek",
    "href": "slides/03-ADaM/index.html#spec-peek",
    "title": "ADaMs with {admiral} and friends",
    "section": "Spec-peek",
    "text": "Spec-peek\n\nLet’s take a quick peek at metadata"
  },
  {
    "objectID": "slides/03-ADaM/index.html#the-core-pharmaverse-packages-for-creating-adams",
    "href": "slides/03-ADaM/index.html#the-core-pharmaverse-packages-for-creating-adams",
    "title": "ADaMs with {admiral} and friends",
    "section": "The core pharmaverse packages for creating ADaMs",
    "text": "The core pharmaverse packages for creating ADaMs\n \nFocus on applying information from our Specs to the ADaMs\n\nFocus on deriving variables and records driven by our Specs\n\nFocus on preparing the dataset as an xpt file to be sent to regulatory agencies."
  },
  {
    "objectID": "slides/03-ADaM/index.html#pharmaverse-plays-nice",
    "href": "slides/03-ADaM/index.html#pharmaverse-plays-nice",
    "title": "ADaMs with {admiral} and friends",
    "section": "pharmaverse plays nice!",
    "text": "pharmaverse plays nice!\n   \n\nThe ADaM code presented today utilizes all the previously mentioned packages, but also makes use of tidyverse and base R code.\nIf a function isn’t meeting your needs or looks too cumbersome, then that is okay!\nThese packages are all modular and play well with others."
  },
  {
    "objectID": "slides/03-ADaM/index.html#admiral",
    "href": "slides/03-ADaM/index.html#admiral",
    "title": "ADaMs with {admiral} and friends",
    "section": "admiral",
    "text": "admiral\n\n\n\n\n\n\n\n\nPackage\nFunction\nPurpose\n\n\n\n\nadmiral\nderive_vars_merged()\nleft_join on steroids\n\n\nadmiral\nderive_param_computed()\nCore function for wrappers used in ADVS\n\n\nadmiral\nderive_vars_dy()\nCreate the relative study day\n\n\nadmiral\nderive_vars_dtm()\nTake a ---DTC variable and turn it into a ---DTM variable\n\n\nadmiral\nderive_vars_duration()\nDuration between timepoints\n\n\nadmiral\nrestrict_derivation()\nHOF: Execute a derivation on a subset of the input dataset.\n\n\n\nMost functions in admiral follow these conventions:\n\nvar_ or _vars_ functions add variable(s) to ADaMs\n_param_ functions add records to ADaMs\nOther not following this convention typically execute more advanced stuff!!"
  },
  {
    "objectID": "slides/03-ADaM/index.html#metacore-metatools-and-xportr",
    "href": "slides/03-ADaM/index.html#metacore-metatools-and-xportr",
    "title": "ADaMs with {admiral} and friends",
    "section": "metacore, metatools and xportr",
    "text": "metacore, metatools and xportr\n\n\n\n\n\n\n\n\nPackage\nFunction\nPurpose\n\n\n\n\nmetacore\nspec_to_metacore()\nCreates a “special” object from your specs\n\n\nmetatools\ncombine_supp()\nJoin Parent and Supplementary Datasets\n\n\nmetatools\ncreate_var_from_codelist()\nNumeric Vars from Specs!\n\n\nmetatools\ndrop_unspec_vars()\nEasily drop variables not in Spec\n\n\nxportr\nxportr_label()\nApply labels from Spec\n\n\nxportr\nxportr_write()\nWrite out an xpt file\n\n\n\n\nMost functions from these packages are about applying metadata from specs to your dataset.\nxportr follows a standard naming convention with xportr_."
  },
  {
    "objectID": "slides/03-ADaM/index.html#the-big-picture-of-adsl",
    "href": "slides/03-ADaM/index.html#the-big-picture-of-adsl",
    "title": "ADaMs with {admiral} and friends",
    "section": "The Big Picture of ADSL",
    "text": "The Big Picture of ADSL\n\nWe have an ADSL script:\n\n\nUsing {pharmaversesdtm} data: dm, suppdm, ex, ae, vs, etc\nUses the ADSL section of our spec file\nCreating a single record for each subject with a lot of variables.\n306 observations and 54 variables.\nWrite out an xpt file for regulatory send-off!"
  },
  {
    "objectID": "slides/03-ADaM/index.html#reading-in-our-spec-for-adsl",
    "href": "slides/03-ADaM/index.html#reading-in-our-spec-for-adsl",
    "title": "ADaMs with {admiral} and friends",
    "section": "Reading in our spec for ADSL 1",
    "text": "Reading in our spec for ADSL 1\nadsl_spec &lt;- spec_to_metacore(\n  path = \"slides/03-ADaM/metadata/posit_specs.xlsx\",\n  where_sep_sheet = FALSE,\n  quiet = TRUE\n) %&gt;%\n  select_dataset(\"ADSL\")\n\nTakes a P21-like spec and makes it into an object we can easily access.\nwhere_sep_sheet - option to tell if the information for the dataset is in a separate sheet, like in older p21 specs or in a single sheet like newer p21 specs\nquiet argument should be set to TRUE while developing your spec and ADaMs.\nSame call in ADVS script.\n\nLines: 20-25"
  },
  {
    "objectID": "slides/03-ADaM/index.html#combine-parent-and-supplementary-data",
    "href": "slides/03-ADaM/index.html#combine-parent-and-supplementary-data",
    "title": "ADaMs with {admiral} and friends",
    "section": "Combine Parent and Supplementary Data 1",
    "text": "Combine Parent and Supplementary Data 1\ndm_suppdm &lt;- combine_supp(dm, suppdm)\n\nOne line of code to join two datasets: parent and supplementary!\nSupps usually are a collection non-standard data and linking to parent\nFunction is from {metatools}\n\nLines: 53"
  },
  {
    "objectID": "slides/03-ADaM/index.html#lets-turn-a---dtc-to-a-dtm-or-dt-variable",
    "href": "slides/03-ADaM/index.html#lets-turn-a---dtc-to-a-dtm-or-dt-variable",
    "title": "ADaMs with {admiral} and friends",
    "section": "Let’s turn a --DTC to a *DTM or *DT variable 1",
    "text": "Let’s turn a --DTC to a *DTM or *DT variable 1\nex_ext &lt;- ex %&gt;%\n  derive_vars_dtm(\n    dtc = EXSTDTC,\n    new_vars_prefix = \"EXST\",\n    time_imputation = \"last\",\n    flag_imputation = \"time\"\n)\nds_ext &lt;- derive_vars_dt(\n  ds,\n  dtc = DSSTDTC,\n  new_vars_prefix = \"DSST\"\n)\nadsl11 &lt;- adsl10 %&gt;%\n  derive_vars_dt(\n    dtc = DTHDTC,\n    new_vars_prefix = \"DTH\",\n    highest_imputation = \"M\",\n    date_imputation = \"first\"\n  )\nLines: 57-69, 132-136, 198-204"
  },
  {
    "objectID": "slides/03-ADaM/index.html#example-from-documentation",
    "href": "slides/03-ADaM/index.html#example-from-documentation",
    "title": "ADaMs with {admiral} and friends",
    "section": "Example from documentation",
    "text": "Example from documentation\n\nmhdt &lt;- tribble(\n  ~MHSTDTC,\n  \"2019-07-18T15:25:40\",\n  \"2019-07-18T15:25\",\n  \"2019-07-18\",\n  \"2019-02\",\n  \"2019\",\n  \"2019---07\",\n  \"\"\n)\n\nderive_vars_dtm(\n mhdt,\n new_vars_prefix = \"AST\",\n dtc = MHSTDTC,\n highest_imputation = \"M\",\n date_imputation = \"last\",\n time_imputation = \"last\",\n)\n\n# A tibble: 7 × 4\n  MHSTDTC               ASTDTM              ASTDTF ASTTMF\n  &lt;chr&gt;                 &lt;dttm&gt;              &lt;chr&gt;  &lt;chr&gt; \n1 \"2019-07-18T15:25:40\" 2019-07-18 15:25:40 &lt;NA&gt;   &lt;NA&gt;  \n2 \"2019-07-18T15:25\"    2019-07-18 15:25:59 &lt;NA&gt;   S     \n3 \"2019-07-18\"          2019-07-18 23:59:59 &lt;NA&gt;   H     \n4 \"2019-02\"             2019-02-28 23:59:59 D      H     \n5 \"2019\"                2019-12-31 23:59:59 M      H     \n6 \"2019---07\"           2019-12-31 23:59:59 M      H     \n7 \"\"                    NA                  &lt;NA&gt;   &lt;NA&gt;"
  },
  {
    "objectID": "slides/03-ADaM/index.html#woahthere-is-more",
    "href": "slides/03-ADaM/index.html#woahthere-is-more",
    "title": "ADaMs with {admiral} and friends",
    "section": "Woah…there is more!!",
    "text": "Woah…there is more!!\n\nderive_vars_dtm(\n  dataset,\n  new_vars_prefix,\n  dtc,\n  highest_imputation = \"h\",\n  date_imputation = \"first\",\n  time_imputation = \"first\",\n  flag_imputation = \"auto\",\n  min_dates = NULL,\n  max_dates = NULL,\n  preserve = FALSE,\n  ignore_seconds_flag = FALSE\n)"
  },
  {
    "objectID": "slides/03-ADaM/index.html#a-simple-merge",
    "href": "slides/03-ADaM/index.html#a-simple-merge",
    "title": "ADaMs with {admiral} and friends",
    "section": "A Simple merge 1",
    "text": "A Simple merge 1\nadsl10 &lt;- adsl09 %&gt;%\n  derive_vars_merged(\n    dataset_add = ds_ext,\n    by_vars = exprs(STUDYID, USUBJID),\n    new_vars = exprs(RANDDT = DSSTDT),\n    filter_add = DSDECOD == \"RANDOMIZED\",\n  )\n\nFilter, arrange, join and rename is a common pattern in ADaMs.\nby_vars are going to be the shared variables to connect the two datasets\nIn admiral, all arguments which can be set to multiple variables, a calculation, or an assignment must be started with rlang::exprs().\nCheck out Programming Concepts and Conventions\n\nLines: 187-194"
  },
  {
    "objectID": "slides/03-ADaM/index.html#lets-get-a-more-complicated-merge",
    "href": "slides/03-ADaM/index.html#lets-get-a-more-complicated-merge",
    "title": "ADaMs with {admiral} and friends",
    "section": "Let’s get a more complicated merge 1",
    "text": "Let’s get a more complicated merge 1\nderive_vars_merged(\n  dataset_add = ex_ext,\n  by_vars = exprs(STUDYID, USUBJID),\n  order = exprs(EXSTDTM, EXSEQ),\n  new_vars = exprs(TRTSDTM = EXSTDTM, TRTSTMF = EXSTTMF),\n  filter_add = (EXDOSE &gt; 0 |\n    (EXDOSE == 0 &\n      str_detect(EXTRT, \"PLACEBO\"))) &\n    !is.na(EXSTDTM),\n  mode = \"first\",\n)\n\norder - for each by group the first or last observation from the additional dataset is selected with respect to the specified order.\nmode - Determines if the first or last observation is selected\n\nLines: 72-84, and more!!"
  },
  {
    "objectID": "slides/03-ADaM/index.html#whoa-way-more-options",
    "href": "slides/03-ADaM/index.html#whoa-way-more-options",
    "title": "ADaMs with {admiral} and friends",
    "section": "Whoa!!! Way more options!!",
    "text": "Whoa!!! Way more options!!\n\nderive_vars_merged(\n  dataset,\n  dataset_add,\n  by_vars,\n  order = NULL,\n  new_vars = NULL,\n  filter_add = NULL,\n  mode = NULL,\n  exist_flag = NULL,\n  true_value = \"Y\",\n  false_value = NA_character_,\n  missing_values = NULL,\n  check_type = \"warning\",\n  duplicate_msg = NULL,\n  relationship = NULL\n)"
  },
  {
    "objectID": "slides/03-ADaM/index.html#lets-derive-a-duration-variable",
    "href": "slides/03-ADaM/index.html#lets-derive-a-duration-variable",
    "title": "ADaMs with {admiral} and friends",
    "section": "Let’s derive a Duration Variable 1",
    "text": "Let’s derive a Duration Variable 1\nderive_vars_duration(\n    new_var = DTHADY,\n    start_date = TRTSDT,\n    end_date = DTHDT\n  )\nLines: 122-126"
  },
  {
    "objectID": "slides/03-ADaM/index.html#example-from-documentation-1",
    "href": "slides/03-ADaM/index.html#example-from-documentation-1",
    "title": "ADaMs with {admiral} and friends",
    "section": "Example from documentation",
    "text": "Example from documentation\n\n# Derive age in years\ndata &lt;- tribble(\n  ~USUBJID, ~BRTHDT,           ~RANDDT,\n  \"P01\",    ymd(\"1984-09-06\"), ymd(\"2020-02-24\"),\n  \"P02\",    ymd(\"1985-01-01\"), NA,\n  \"P03\",    NA,                ymd(\"2021-03-10\"),\n  \"P04\",    NA,                NA\n)\n\nderive_vars_duration(data,\n  new_var = AAGE,\n  new_var_unit = AAGEU,\n  start_date = BRTHDT,\n  end_date = RANDDT,\n  out_unit = \"years\",\n  add_one = FALSE,\n  trunc_out = TRUE\n)\n\n# A tibble: 4 × 5\n  USUBJID BRTHDT     RANDDT      AAGE AAGEU\n  &lt;chr&gt;   &lt;date&gt;     &lt;date&gt;     &lt;dbl&gt; &lt;chr&gt;\n1 P01     1984-09-06 2020-02-24    35 years\n2 P02     1985-01-01 NA            NA &lt;NA&gt; \n3 P03     NA         2021-03-10    NA &lt;NA&gt; \n4 P04     NA         NA            NA &lt;NA&gt;"
  },
  {
    "objectID": "slides/03-ADaM/index.html#ohhh-there-is-more",
    "href": "slides/03-ADaM/index.html#ohhh-there-is-more",
    "title": "ADaMs with {admiral} and friends",
    "section": "Ohhh there is more!!",
    "text": "Ohhh there is more!!\n\nderive_vars_duration(\n  dataset,\n  new_var,\n  new_var_unit = NULL,\n  start_date,\n  end_date,\n  in_unit = \"days\",\n  out_unit = \"DAYS\",\n  floor_in = TRUE,\n  add_one = TRUE,\n  trunc_out = FALSE,\n  type = \"duration\"\n)"
  },
  {
    "objectID": "slides/03-ADaM/index.html#duration-versus-interval",
    "href": "slides/03-ADaM/index.html#duration-versus-interval",
    "title": "ADaMs with {admiral} and friends",
    "section": "Duration versus Interval",
    "text": "Duration versus Interval\n\nThe lubridate package calculates two types of spans between two dates: duration and interval. While these calculations are largely the same, when the unit of the time period is month or year the result can be slightly different.\nThe difference arises from the ambiguity in the length of “1 month” or “1 year”. Months may have 31, 30, 28, or 29 days, and years are 365 days and 366 during leap years. Durations and intervals help solve the ambiguity in these measures."
  },
  {
    "objectID": "slides/03-ADaM/index.html#lets-apply-control-terms-code-lists",
    "href": "slides/03-ADaM/index.html#lets-apply-control-terms-code-lists",
    "title": "ADaMs with {admiral} and friends",
    "section": "Let’s apply Control Terms / Code Lists 1",
    "text": "Let’s apply Control Terms / Code Lists 1\nadsl16 %&gt;%\n  create_var_from_codelist(adsl_spec, input_var = AGEGR1, out_var = AGEGR1N) %&gt;%\n  create_var_from_codelist(adsl_spec, input_var = RACE, out_var = RACEN) %&gt;%\n  create_var_from_codelist(adsl_spec, input_var = RACEGR1, out_var = RACEGR1N) %&gt;%\n  create_var_from_codelist(adsl_spec, input_var = REGION1, out_var = REGION1N) %&gt;%\n  create_var_from_codelist(adsl_spec, input_var = TRT01P, out_var = TRT01PN) %&gt;%\n  create_var_from_codelist(adsl_spec, input_var = TRT01A, out_var = TRT01AN)\n\nNumeric Variables like the above are helpful for sorting options in Tables.\n\nLines: 276-282"
  },
  {
    "objectID": "slides/03-ADaM/index.html#more-details",
    "href": "slides/03-ADaM/index.html#more-details",
    "title": "ADaMs with {admiral} and friends",
    "section": "More details",
    "text": "More details\n\ncreate_var_from_codelist(\n  data,\n  metacore,\n  input_var,\n  out_var,\n  codelist = NULL,\n  decode_to_code = TRUE,\n  strict = TRUE\n)"
  },
  {
    "objectID": "slides/03-ADaM/index.html#check-in-on-barb-in-adsl",
    "href": "slides/03-ADaM/index.html#check-in-on-barb-in-adsl",
    "title": "ADaMs with {admiral} and friends",
    "section": "Check in on Barb in ADSL",
    "text": "Check in on Barb in ADSL\n\n\n\n\n\n\n\n\n\n\nflowchart LR\n  B[SDTM] --&gt; C[ADaM]\n  C[ADaM] --&gt; D[ARDs/TFLs]\n  \n%% Apply the custom class \"highlight\" to node B\nclass C highlight;\n\n%% Define the style for the \"highlight\" class:\nclassDef highlight fill:#F9B, stroke:#333, stroke-width:2px;  \n\n\n\n\n\n\n\n\nUSUBJID: 01-701-1034\nSEX: F\nAGE: 77\nRANDDT: 2014-07-01\nTRTSDT: 2014-07-01\nTRTSDTM: 2014-07-01 23:59:59\nTRTEDT: 2014-12-30\nTRTDURD: 183\nEOSDT: 2014-12-30\nEOSSTT: COMPLETED"
  },
  {
    "objectID": "slides/03-ADaM/index.html#check-in-exercise",
    "href": "slides/03-ADaM/index.html#check-in-exercise",
    "title": "ADaMs with {admiral} and friends",
    "section": "Check-in Exercise",
    "text": "Check-in Exercise\n\nImpute the date and time to be last month/day and 23:59:59\nTwo arguments to update: ????\nCheck out admiral derive_vars_dtm() documentation\n\n\nlibrary(tibble)\nlibrary(lubridate)\nlibrary(admiral)\n\nposit_mh &lt;- tribble(\n  ~USUBJID, ~MHSTDTC,\n  1,        \"2019-07-18T15:25:40\",\n  1,        \"2019-07-18T15:25\",\n  1,        \"2019-07-18\",\n  2,        \"2024-02\",\n  2,        \"2019\",\n  2,        \"2019---07\",\n  3,        \"\"\n)\n\nderive_vars_dtm(\n  dataset = posit_mh,\n  new_vars_prefix = \"AST\",\n  dtc = MHSTDTC,\n  highest_imputation = \"M\",\n  date_imputation = \"????\",\n  time_imputation = \"????\"\n)"
  },
  {
    "objectID": "slides/03-ADaM/index.html#check-in-exercise-solution",
    "href": "slides/03-ADaM/index.html#check-in-exercise-solution",
    "title": "ADaMs with {admiral} and friends",
    "section": "Check-in Exercise Solution",
    "text": "Check-in Exercise Solution\n\nposit_mh &lt;- tribble(\n  ~USUBJID, ~MHSTDTC,\n  1,        \"2019-07-18T15:25:40\",\n  1,        \"2019-07-18T15:25\",\n  1,        \"2019-07-18\",\n  2,        \"2024-02\",\n  2,        \"2019\",\n  2,        \"2019---07\",\n  3,        \"\"\n)\n\nderive_vars_dtm(\n  dataset = posit_mh,\n  new_vars_prefix = \"AST\",\n  dtc = MHSTDTC,\n  highest_imputation = \"M\",\n  date_imputation = \"last\",\n  time_imputation = \"last\"\n)\n\n# A tibble: 7 × 5\n  USUBJID MHSTDTC               ASTDTM              ASTDTF ASTTMF\n    &lt;dbl&gt; &lt;chr&gt;                 &lt;dttm&gt;              &lt;chr&gt;  &lt;chr&gt; \n1       1 \"2019-07-18T15:25:40\" 2019-07-18 15:25:40 &lt;NA&gt;   &lt;NA&gt;  \n2       1 \"2019-07-18T15:25\"    2019-07-18 15:25:59 &lt;NA&gt;   S     \n3       1 \"2019-07-18\"          2019-07-18 23:59:59 &lt;NA&gt;   H     \n4       2 \"2024-02\"             2024-02-29 23:59:59 D      H     \n5       2 \"2019\"                2019-12-31 23:59:59 M      H     \n6       2 \"2019---07\"           2019-12-31 23:59:59 M      H     \n7       3 \"\"                    NA                  &lt;NA&gt;   &lt;NA&gt;"
  },
  {
    "objectID": "slides/03-ADaM/index.html#the-big-picture-of-advs",
    "href": "slides/03-ADaM/index.html#the-big-picture-of-advs",
    "title": "ADaMs with {admiral} and friends",
    "section": "The Big Picture of ADVS",
    "text": "The Big Picture of ADVS\n\nWe have an ADVS script:\n\nUsing pharmaversesdtm data: vs\nUsing the ADVS section of our spec file.\nCreating multiple records for each subject.\nSome ADSL variables included.\n60K records and 106 variables.\nLot’s of functions are repeated within the ADVS script used in ADSL script."
  },
  {
    "objectID": "slides/03-ADaM/index.html#lets-talk-about-lookup-tables",
    "href": "slides/03-ADaM/index.html#lets-talk-about-lookup-tables",
    "title": "ADaMs with {admiral} and friends",
    "section": "Let’s talk about lookup tables 1",
    "text": "Let’s talk about lookup tables 1\n  derive_vars_merged_lookup(\n    dataset_add = param_lookup,\n    new_vars = exprs(PARAMCD),\n    by_vars = exprs(VSTESTCD),\n    print_not_mapped = TRUE \n  ) \n\nMoving from **TEST/**TESTCD to PARAM/PARAMCD.\nMore information in the PARAM/PARAMCD - useful for displays.\nCan be used for other lookup tables, e.g. Grading/Toxicity.\n\nLines: 72-80"
  },
  {
    "objectID": "slides/03-ADaM/index.html#a-fuller-look",
    "href": "slides/03-ADaM/index.html#a-fuller-look",
    "title": "ADaMs with {admiral} and friends",
    "section": "A Fuller Look!",
    "text": "A Fuller Look!\n\nderive_vars_merged_lookup(\n  dataset,\n  dataset_add,\n  by_vars,\n  order = NULL,\n  new_vars = NULL,\n  mode = NULL,\n  filter_add = NULL,\n  check_type = \"warning\",\n  duplicate_msg = NULL,\n  print_not_mapped = TRUE\n)"
  },
  {
    "objectID": "slides/03-ADaM/index.html#lets-add-more-records-for-each-subject",
    "href": "slides/03-ADaM/index.html#lets-add-more-records-for-each-subject",
    "title": "ADaMs with {admiral} and friends",
    "section": "Let’s add more records for each subject 1",
    "text": "Let’s add more records for each subject 1\nadvs &lt;- advs %&gt;%\n  derive_param_computed(\n    by_vars = exprs(STUDYID, USUBJID, VISIT, VISITNUM, ADT, ADY, VSTPT, VSTPTNUM),\n    parameters = \"WEIGHT\",\n    set_values_to = exprs(\n      AVAL = AVAL.WEIGHT / (AVAL.HEIGHT / 100)^2,\n      PARAMCD = \"BMI\",\n      PARAM = \"Body Mass Index (kg/m^2)\",\n      AVALU = \"kg/m^2\"\n    ),\n    constant_parameters = c(\"HEIGHT\"),\n    constant_by_vars = exprs(USUBJID)\n)\nLines: 100-111"
  },
  {
    "objectID": "slides/03-ADaM/index.html#only-two-arguments-not-used",
    "href": "slides/03-ADaM/index.html#only-two-arguments-not-used",
    "title": "ADaMs with {admiral} and friends",
    "section": "Only two arguments not used!",
    "text": "Only two arguments not used!\n\nderive_param_computed(\n  dataset = NULL,\n  dataset_add = NULL,\n  by_vars,\n  parameters,\n  set_values_to,\n  filter = NULL,\n  constant_by_vars = NULL,\n  constant_parameters = NULL,\n  keep_nas = FALSE\n)"
  },
  {
    "objectID": "slides/03-ADaM/index.html#lets-derive-dtype-summary-records",
    "href": "slides/03-ADaM/index.html#lets-derive-dtype-summary-records",
    "title": "ADaMs with {admiral} and friends",
    "section": "Let’s derive DTYPE summary records 1",
    "text": "Let’s derive DTYPE summary records 1\nderive_summary_records(\n    dataset_add = advs_2, \n    by_vars = exprs(STUDYID, USUBJID, !!!adsl_vars, PARAMCD, AVISITN, AVISIT, ADT, ADY, AVALU),\n    filter_add = !is.na(AVAL),\n    set_values_to = exprs(\n      AVAL = mean(AVAL),\n      DTYPE = \"AVERAGE\"\n  )\n)\n\nA DTYPE variable indicates a record within a parameter has been imputed or modified, DTYPE will indicate the method used to populate the analysis value, e.g AVERAGE, MAXIMUM, MINIMUM, LOCF, PHANTOM.\n\nLines: 144-153"
  },
  {
    "objectID": "slides/03-ADaM/index.html#lets-restrict",
    "href": "slides/03-ADaM/index.html#lets-restrict",
    "title": "ADaMs with {admiral} and friends",
    "section": "Let’s restrict! 1",
    "text": "Let’s restrict! 1\nrestrict_derivation(\n  derivation = derive_var_extreme_flag,\n  args = params(\n    by_vars = exprs(STUDYID, USUBJID, BASETYPE, PARAMCD),\n    order = exprs(ADT, VISITNUM, VSSEQ),\n    new_var = ABLFL,\n    mode = \"last\",\n    true_value = \"Y\"\n  ),\n  filter = (!is.na(AVAL) &\n    ADT &lt;= TRTSDT & !is.na(BASETYPE) & is.na(DTYPE))\n)\n\nCheck out Higher Order Functions for more information.\ncall_derivation() is super handy iF you are doing similar calls with same function, but just changing one or two arguments.\n\nLines: 196-210"
  },
  {
    "objectID": "slides/03-ADaM/index.html#lets-add-a-base-variable",
    "href": "slides/03-ADaM/index.html#lets-add-a-base-variable",
    "title": "ADaMs with {admiral} and friends",
    "section": "Let’s add a BASE variable 1",
    "text": "Let’s add a BASE variable 1\nadvs &lt;- derive_var_base(\n  advs,\n  by_vars = exprs(STUDYID, USUBJID, PARAMCD, BASETYPE),\n  source_var = AVAL,\n  new_var = BASE,\n  # Below arguments are default values and not necessary to add in our case\n  filter = ABLFL == \"Y\"\n)\n\nUsed to calculate CHG and PCHG variables\n\nLines: 210-217"
  },
  {
    "objectID": "slides/03-ADaM/index.html#lets-add-an-analysis-sequence-variable",
    "href": "slides/03-ADaM/index.html#lets-add-an-analysis-sequence-variable",
    "title": "ADaMs with {admiral} and friends",
    "section": "Let’s add an Analysis Sequence Variable 1",
    "text": "Let’s add an Analysis Sequence Variable 1\nadvs &lt;- derive_var_obs_number(\n  advs,\n  new_var = ASEQ,\n  by_vars = exprs(STUDYID, USUBJID),\n  order = exprs(PARAMCD, ADT, AVISITN, VISITNUM, ATPTN, DTYPE),\n  check_type = \"error\"\n)\n\nASEQ uniquely indexes records within a subject within an ADaM dataset.\nASEQ is useful for traceability when the dataset is used as input to another ADaM dataset\ncheck_type - If “message”, “warning” or “error” is specified, the specified message is issued if the observations of the input dataset are not unique with respect to the by variables and the order.\n\nLines: 262-268"
  },
  {
    "objectID": "slides/03-ADaM/index.html#lets-get-that-adam-ready-for-regulatory-agencies",
    "href": "slides/03-ADaM/index.html#lets-get-that-adam-ready-for-regulatory-agencies",
    "title": "ADaMs with {admiral} and friends",
    "section": "Let’s get that ADaM ready for regulatory agencies 1",
    "text": "Let’s get that ADaM ready for regulatory agencies 1\nadvs_prefinal &lt;- advs %&gt;%\n  drop_unspec_vars(advs_spec) %&gt;% \n  check_variables(advs_spec, dataset_name = \"ADVS\") %&gt;% \n  order_cols(advs_spec) %&gt;% \n  sort_by_key(advs_spec) \n\nFunctions from {metatools}\nNote similar code in ADSL script!\n\nLines: 305-310"
  },
  {
    "objectID": "slides/03-ADaM/index.html#lets-get-that-data-read-for-regulatory-agencies",
    "href": "slides/03-ADaM/index.html#lets-get-that-data-read-for-regulatory-agencies",
    "title": "ADaMs with {admiral} and friends",
    "section": "Let’s get that data read for regulatory agencies 1",
    "text": "Let’s get that data read for regulatory agencies 1\nadvs_final &lt;- advs_prefinal %&gt;%\n  xportr_type(advs_spec) %&gt;%\n  xportr_length(advs_spec) %&gt;%\n  xportr_label(advs_spec) %&gt;%\n  xportr_format(advs_spec, domain = \"ADVS\") %&gt;%\n  xportr_df_label(advs_spec, domain = \"ADVS\") %&gt;%\n  xportr_write(file.path(dir, \"advs.xpt\"), metadata = advs_spec, domain = \"ADVS\")\n\nFunctions from {xportr}\nNote similar code in ADSL script!\ndomain is needed depending on how metacore object is created.\n\nLines: 313-319"
  },
  {
    "objectID": "slides/03-ADaM/index.html#check-in-on-barb-in-advs",
    "href": "slides/03-ADaM/index.html#check-in-on-barb-in-advs",
    "title": "ADaMs with {admiral} and friends",
    "section": "Check in on Barb in ADVS",
    "text": "Check in on Barb in ADVS\n\n\n\n\n\n\n\n\n\n\nflowchart LR\n  B[SDTM] --&gt; C[ADaM]\n  C[ADaM] --&gt; D[ARDs/TFLs]\n  \n%% Apply the custom class \"highlight\" to node B\nclass C highlight;\n\n%% Define the style for the \"highlight\" class:\nclassDef highlight fill:#F9B, stroke:#333, stroke-width:2px;  \n\n\n\n\n\n\n\n\nUSUBJID: 01-701-1034\nPARAM/PARAMCD: MAP / Mean Arterial Pressure (mmHg)\nABLFL/ADT: Y / 2014-07-01\nBASE: 94.33333\nAVIST/ADT: WEEK 2 / 2014-07-15\nAVAL: 115.0\nCHG: 20.6666667\nPCHG: 21.9081272"
  },
  {
    "objectID": "slides/03-ADaM/index.html#check-in-exercise-1",
    "href": "slides/03-ADaM/index.html#check-in-exercise-1",
    "title": "ADaMs with {admiral} and friends",
    "section": "Check-in Exercise",
    "text": "Check-in Exercise\n\nWe are going to update the function derive_param_computed() for Mean Arterial Pressure.\nFormula: \\[ \\frac{2DIABP + SYSBP}{3} \\]\n\nADVS &lt;- tribble(\n  ~USUBJID,      ~PARAMCD, ~PARAM,                            ~AVALU,  ~AVAL, ~VISIT,\n  \"01-701-1015\", \"DIABP\",  \"Diastolic Blood Pressure (mmHg)\", \"mmHg\",    51, \"BASELINE\",\n  \"01-701-1015\", \"SYSBP\",  \"Systolic Blood Pressure (mmHg)\",  \"mmHg\",   121, \"BASELINE\",\n  \"01-701-1028\", \"DIABP\",  \"Diastolic Blood Pressure (mmHg)\", \"mmHg\",    79, \"BASELINE\",\n  \"01-701-1028\", \"SYSBP\",  \"Systolic Blood Pressure (mmHg)\",  \"mmHg\",   130, \"BASELINE\",\n) \nderive_param_computed(\n  ADVS,\n  by_vars = exprs(USUBJID, VISIT),\n  parameters = c(\"????\", \"????\"),\n  set_values_to = exprs(\n    AVAL = (AVAL.SYSBP + ?? * AVAL.DIABP) / ??,\n    PARAMCD = \"MAP\",\n    PARAM = \"Mean Arterial Pressure (mmHg)\",\n    AVALU = \"mmHg\",\n  )\n)"
  },
  {
    "objectID": "slides/03-ADaM/index.html#check-in-exercise-solution-1",
    "href": "slides/03-ADaM/index.html#check-in-exercise-solution-1",
    "title": "ADaMs with {admiral} and friends",
    "section": "Check-in Exercise Solution",
    "text": "Check-in Exercise Solution\n\nADVS &lt;- tribble(\n  ~USUBJID,      ~PARAMCD, ~PARAM,                            ~AVALU,  ~AVAL, ~VISIT,\n  \"01-701-1015\", \"DIABP\",  \"Diastolic Blood Pressure (mmHg)\", \"mmHg\",    51, \"BASELINE\",\n  \"01-701-1015\", \"SYSBP\",  \"Systolic Blood Pressure (mmHg)\",  \"mmHg\",   121, \"BASELINE\",\n  \"01-701-1028\", \"DIABP\",  \"Diastolic Blood Pressure (mmHg)\", \"mmHg\",    79, \"BASELINE\",\n  \"01-701-1028\", \"SYSBP\",  \"Systolic Blood Pressure (mmHg)\",  \"mmHg\",   130, \"BASELINE\",\n) \n\nderive_param_computed(\n  ADVS,\n  by_vars = exprs(USUBJID, VISIT),\n  parameters = c(\"SYSBP\", \"DIABP\"),\n  set_values_to = exprs(\n    AVAL = (AVAL.SYSBP + 2 * AVAL.DIABP) / 3,\n    PARAMCD = \"MAP\",\n    PARAM = \"Mean Arterial Pressure (mmHg)\",\n    AVALU = \"mmHg\",\n  )\n)\n\n# A tibble: 6 × 6\n  USUBJID     PARAMCD PARAM                           AVALU  AVAL VISIT   \n  &lt;chr&gt;       &lt;chr&gt;   &lt;chr&gt;                           &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt;   \n1 01-701-1015 DIABP   Diastolic Blood Pressure (mmHg) mmHg   51   BASELINE\n2 01-701-1015 SYSBP   Systolic Blood Pressure (mmHg)  mmHg  121   BASELINE\n3 01-701-1028 DIABP   Diastolic Blood Pressure (mmHg) mmHg   79   BASELINE\n4 01-701-1028 SYSBP   Systolic Blood Pressure (mmHg)  mmHg  130   BASELINE\n5 01-701-1015 MAP     Mean Arterial Pressure (mmHg)   mmHg   74.3 BASELINE\n6 01-701-1028 MAP     Mean Arterial Pressure (mmHg)   mmHg   96   BASELINE"
  },
  {
    "objectID": "slides/03-ADaM/index.html#questions-and-resources",
    "href": "slides/03-ADaM/index.html#questions-and-resources",
    "title": "ADaMs with {admiral} and friends",
    "section": "Questions and Resources",
    "text": "Questions and Resources\n\n\n\nadmiraldiscovery\npharmaverse examples\npkgdown sites for xportr, metatools, metacore and admiral\nExtension packages for admiral: admiralophtha, admiralonco, admiralpeds"
  },
  {
    "objectID": "slides/03-ADaM/index.html#closing-thoughts",
    "href": "slides/03-ADaM/index.html#closing-thoughts",
    "title": "ADaMs with {admiral} and friends",
    "section": "Closing Thoughts",
    "text": "Closing Thoughts\n\n\n\nOnly able to show a small number of pharmaverse packages and functions today, but please delve deeper to explore the full breadth\nIf you’d like to contribute to pharmaverse, check out options at pharmaverse.org\nFinally, be sure to join our community on Slack!"
  },
  {
    "objectID": "slides/03-ADaM/index.html#packages-and-session-information",
    "href": "slides/03-ADaM/index.html#packages-and-session-information",
    "title": "ADaMs with {admiral} and friends",
    "section": "Packages and Session Information",
    "text": "Packages and Session Information\n\nsessionInfo()\n\nR version 4.5.1 (2025-06-13)\nPlatform: x86_64-pc-linux-gnu\nRunning under: Ubuntu 24.04.3 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 \nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.26.so;  LAPACK version 3.12.0\n\nlocale:\n [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8       \n [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8   \n [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C          \n[10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C   \n\ntime zone: UTC\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices datasets  utils     methods   base     \n\nother attached packages:\n[1] lubridate_1.9.4 admiral_1.3.1   tibble_3.3.0    countdown_0.4.0\n[5] glue_1.8.0     \n\nloaded via a namespace (and not attached):\n [1] jsonlite_2.0.0    dplyr_1.1.4       compiler_4.5.1    renv_1.1.5       \n [5] tidyselect_1.2.1  xml2_1.3.8        stringr_1.5.1     tidyr_1.3.1      \n [9] yaml_2.3.10       fastmap_1.2.0     R6_2.6.1          generics_0.1.4   \n[13] admiraldev_1.3.1  knitr_1.50        pillar_1.11.0     rlang_1.1.6      \n[17] utf8_1.2.6        stringi_1.8.7     roxygen2_7.3.2    xfun_0.52        \n[21] timechange_0.3.0  cli_3.6.5         withr_3.0.2       magrittr_2.0.3   \n[25] digest_0.6.37     hms_1.1.3         lifecycle_1.0.4   vctrs_0.6.5      \n[29] evaluate_1.0.4    rmarkdown_2.29    purrr_1.1.0       tools_4.5.1      \n[33] pkgconfig_2.0.3   htmltools_0.5.8.1"
  },
  {
    "objectID": "slides/04-ARD/index.html#ards-tables-a-dynamic-duo",
    "href": "slides/04-ARD/index.html#ards-tables-a-dynamic-duo",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "ARDS 🤝 Tables: A Dynamic Duo",
    "text": "ARDS 🤝 Tables: A Dynamic Duo"
  },
  {
    "objectID": "slides/04-ARD/index.html#objectives",
    "href": "slides/04-ARD/index.html#objectives",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "Objectives",
    "text": "Objectives\n\nBy the end of this ARD section you will have:\n\nDeveloped an understanding of ARDs\nSeen examples of univariate and hierarachical calculations\nGained an awareness of other possibilities in cards and statistical capabilities in cardx"
  },
  {
    "objectID": "slides/04-ARD/index.html#what-are-ards",
    "href": "slides/04-ARD/index.html#what-are-ards",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "What are ARDs?",
    "text": "What are ARDs?\n\nDataset that stores key metadata and raw results from analysis\nMay contained formatted values as well\nThe ARD can be used to to subsequently create tables and figures.\nThe ARD does not describe the layout of the results"
  },
  {
    "objectID": "slides/04-ARD/index.html#analysis-results-data-ard",
    "href": "slides/04-ARD/index.html#analysis-results-data-ard",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "Analysis Results Data (ARD)",
    "text": "Analysis Results Data (ARD)\n\nAfter the initial creation of an ARD, the results can later be re-used again and again for subsequent reporting needs."
  },
  {
    "objectID": "slides/04-ARD/index.html#a-few-notes-about-ards",
    "href": "slides/04-ARD/index.html#a-few-notes-about-ards",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "A few notes about ARDs",
    "text": "A few notes about ARDs\n\nARDs give us the opportunity to rethink QC\n\nQC can be focused on the raw value, as well as the formatted display\n\nYou don’t have to waste time trying to match formatting to match QC\nBut…QC will be more sensitive to floating point\n\n\nARDs can be flexibly saved to different file types\n\nFor example: a dataset (rds, xpt, etc) or json file"
  },
  {
    "objectID": "slides/04-ARD/index.html#zooming-out-the-analysis-results-standard-ars",
    "href": "slides/04-ARD/index.html#zooming-out-the-analysis-results-standard-ars",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "Zooming Out: The Analysis Results Standard (ARS)",
    "text": "Zooming Out: The Analysis Results Standard (ARS)\n Objectives include:\n\nTo leverage analysis results metadata to drive the automation of results\nTo support storage, access, processing, traceability and reproducibility of results\n\n\n\n\nLearn more at https://www.cdisc.org/events/webinar/analysis-results-standard-public-review"
  },
  {
    "objectID": "slides/04-ARD/index.html#proposed-metadata-framework-in-the-ars",
    "href": "slides/04-ARD/index.html#proposed-metadata-framework-in-the-ars",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "Proposed Metadata Framework in the ARS",
    "text": "Proposed Metadata Framework in the ARS\n\n\nThe ARS provides a metadata-driven infrastructure for analysis"
  },
  {
    "objectID": "slides/04-ARD/index.html#proposed-metadata-framework-in-the-ars-1",
    "href": "slides/04-ARD/index.html#proposed-metadata-framework-in-the-ars-1",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "Proposed Metadata Framework in the ARS",
    "text": "Proposed Metadata Framework in the ARS\n\n\nThe ARS provides a metadata-driven infrastructure for analysis\n{cards} serves as the engine for the analysis"
  },
  {
    "objectID": "slides/04-ARD/index.html#cards-introduction",
    "href": "slides/04-ARD/index.html#cards-introduction",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "{cards}: Introduction",
    "text": "{cards}: Introduction\n\nPart of the Pharmaverse\nCollaboration between Roche, GSK, Novartis, Eli Lilly, Pfizer\nContains a variety of utilities for making ARDs\nCan be used within the ARS workflow and separately\n36k downloads per month 🤯"
  },
  {
    "objectID": "slides/04-ARD/index.html#data-used-in-examples",
    "href": "slides/04-ARD/index.html#data-used-in-examples",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "Data used in examples",
    "text": "Data used in examples\nADSL from pharmaverseadam\n\n\nCode\nadsl &lt;- pharmaverseadam::adsl |&gt; \n  dplyr::filter(SAFFL==\"Y\") |&gt; \n  dplyr::mutate(ARM2 = ifelse(startsWith(ARM, \"Xanomeline\"), \"Xanomeline\", ARM))\n\n\nADAE from pharmaverseadam\n\n\nCode\nadae &lt;- pharmaverseadam::adae |&gt; \n  dplyr::filter(SAFFL==\"Y\") |&gt; \n  dplyr::mutate(ARM2 = ifelse(startsWith(ARM, \"Xanomeline\"), \"Xanomeline\", ARM)) |&gt; \n  dplyr::filter(AESOC %in% unique(AESOC)[1:3]) |&gt; \n  dplyr::group_by(AESOC) |&gt; \n  dplyr::filter(AEDECOD %in% unique(AEDECOD)[1:3]) |&gt; \n  dplyr::ungroup()"
  },
  {
    "objectID": "slides/04-ARD/index.html#cards-ard_tabulate",
    "href": "slides/04-ARD/index.html#cards-ard_tabulate",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "{cards}: ard_tabulate()",
    "text": "{cards}: ard_tabulate()\n\n\nincludes n, %, N by default\nAny unobserved levels of the variables will be present in the resulting ARD.\n\n\n\nlibrary(cards)\n\nadsl |&gt; \n  ard_tabulate(\n    variables = AGEGR1\n  ) \n\n{cards} data frame: 6 x 9\n\n\n  variable variable_level  context stat_name stat_label stat\n1   AGEGR1            &gt;64 tabulate         n          n  221\n2   AGEGR1            &gt;64 tabulate         N          N  254\n3   AGEGR1            &gt;64 tabulate         p          % 0.87\n4   AGEGR1          18-64 tabulate         n          n   33\n5   AGEGR1          18-64 tabulate         N          N  254\n6   AGEGR1          18-64 tabulate         p          % 0.13\n\n\nℹ 3 more variables: fmt_fun, warning, error"
  },
  {
    "objectID": "slides/04-ARD/index.html#cards-ard_tabulate-1",
    "href": "slides/04-ARD/index.html#cards-ard_tabulate-1",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "{cards}: ard_tabulate()",
    "text": "{cards}: ard_tabulate()\n\n\nincludes n, %, N by default\nAny unobserved levels of the variables will be present in the resulting ARD.\n\n\n\nadsl |&gt; \n  ard_tabulate(\n    by = ARM2,\n    variables = AGEGR1\n  ) \n\n{cards} data frame: 12 x 11\n\n\n   group1 group1_level variable variable_level stat_name stat_label  stat\n1    ARM2      Placebo   AGEGR1            &gt;64         n          n    72\n2    ARM2      Placebo   AGEGR1            &gt;64         N          N    86\n3    ARM2      Placebo   AGEGR1            &gt;64         p          % 0.837\n4    ARM2      Placebo   AGEGR1          18-64         n          n    14\n5    ARM2      Placebo   AGEGR1          18-64         N          N    86\n6    ARM2      Placebo   AGEGR1          18-64         p          % 0.163\n7    ARM2    Xanomeli…   AGEGR1            &gt;64         n          n   149\n8    ARM2    Xanomeli…   AGEGR1            &gt;64         N          N   168\n9    ARM2    Xanomeli…   AGEGR1            &gt;64         p          % 0.887\n10   ARM2    Xanomeli…   AGEGR1          18-64         n          n    19\n11   ARM2    Xanomeli…   AGEGR1          18-64         N          N   168\n12   ARM2    Xanomeli…   AGEGR1          18-64         p          % 0.113\n\n\nℹ 4 more variables: context, fmt_fun, warning, error"
  },
  {
    "objectID": "slides/04-ARD/index.html#cards-ard_summary",
    "href": "slides/04-ARD/index.html#cards-ard_summary",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "{cards}: ard_summary()",
    "text": "{cards}: ard_summary()\n\n# create ARD with default summary statistics\nadsl |&gt; \n  ard_summary(\n    variables = AGE\n  )\n\n{cards} data frame: 8 x 8\n\n\n  variable context stat_name stat_label   stat fmt_fun\n1      AGE summary         N          N    254       0\n2      AGE summary      mean       Mean 75.087       1\n3      AGE summary        sd         SD  8.246       1\n4      AGE summary    median     Median     77       1\n5      AGE summary       p25         Q1     70       1\n6      AGE summary       p75         Q3     81       1\n7      AGE summary       min        Min     51       1\n8      AGE summary       max        Max     89       1\n\n\nℹ 2 more variables: warning, error"
  },
  {
    "objectID": "slides/04-ARD/index.html#cards-ard_summary-by-variable",
    "href": "slides/04-ARD/index.html#cards-ard_summary-by-variable",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "{cards}: ard_summary() by variable",
    "text": "{cards}: ard_summary() by variable\n\nby: summary statistics are calculated by all combinations of the by variables, including unobserved factor levels\n\n\nadsl |&gt; \n  ard_summary(\n    variables = AGE,\n    by = ARM2         # stats by treatment arm\n  ) \n\n{cards} data frame: 16 x 10\n\n\n   group1 group1_level variable stat_name stat_label   stat\n1    ARM2      Placebo      AGE         N          N     86\n2    ARM2      Placebo      AGE      mean       Mean 75.209\n3    ARM2      Placebo      AGE        sd         SD   8.59\n4    ARM2      Placebo      AGE    median     Median     76\n5    ARM2      Placebo      AGE       p25         Q1     69\n6    ARM2      Placebo      AGE       p75         Q3     82\n7    ARM2      Placebo      AGE       min        Min     52\n8    ARM2      Placebo      AGE       max        Max     89\n9    ARM2    Xanomeli…      AGE         N          N    168\n10   ARM2    Xanomeli…      AGE      mean       Mean 75.024\n11   ARM2    Xanomeli…      AGE        sd         SD   8.09\n12   ARM2    Xanomeli…      AGE    median     Median     77\n13   ARM2    Xanomeli…      AGE       p25         Q1     71\n14   ARM2    Xanomeli…      AGE       p75         Q3     81\n15   ARM2    Xanomeli…      AGE       min        Min     51\n16   ARM2    Xanomeli…      AGE       max        Max     88\n\n\nℹ 4 more variables: context, fmt_fun, warning, error"
  },
  {
    "objectID": "slides/04-ARD/index.html#cards-ard_summary-statistics",
    "href": "slides/04-ARD/index.html#cards-ard_summary-statistics",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "{cards}: ard_summary() statistics",
    "text": "{cards}: ard_summary() statistics\n\nstatistic: specify univariate summary statistics. Accepts any function, base R, from a package, or user-defined.\n\n\ncv &lt;- function(x)  sd(x, na.rm = TRUE)/mean(x, na.rm = TRUE)\n\nadsl |&gt; \n  ard_summary(  \n    variables = AGE,\n    by = ARM2,\n    statistic = ~ list(cv = cv) # customize statistics\n  )\n\n{cards} data frame: 2 x 10\n\n\n  group1 group1_level variable stat_name stat_label  stat\n1   ARM2      Placebo      AGE        cv         cv 0.114\n2   ARM2    Xanomeli…      AGE        cv         cv 0.108\n\n\nℹ 4 more variables: context, fmt_fun, warning, error"
  },
  {
    "objectID": "slides/04-ARD/index.html#cards-ard_summary-statistics-1",
    "href": "slides/04-ARD/index.html#cards-ard_summary-statistics-1",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "{cards}: ard_summary() statistics",
    "text": "{cards}: ard_summary() statistics\n\nCustomize the statistics returned for each variable\n\n\nadsl |&gt; \n  dplyr::mutate(AGE2 = AGE) |&gt; \n  ard_summary(\n    variables = c(AGE, AGE2),\n    by = ARM2,\n    statistic = list(AGE = list(cv = cv),\n                     AGE2 = continuous_summary_fns(c(\"mean\",\"median\")))\n  )\n\n{cards} data frame: 6 x 10\n\n\n  group1 group1_level variable stat_name stat_label   stat\n1   ARM2      Placebo      AGE        cv         cv  0.114\n2   ARM2      Placebo     AGE2      mean       Mean 75.209\n3   ARM2      Placebo     AGE2    median     Median     76\n4   ARM2    Xanomeli…      AGE        cv         cv  0.108\n5   ARM2    Xanomeli…     AGE2      mean       Mean 75.024\n6   ARM2    Xanomeli…     AGE2    median     Median     77\n\n\nℹ 4 more variables: context, fmt_fun, warning, error"
  },
  {
    "objectID": "slides/04-ARD/index.html#cards-ard_summary-fmt_fun",
    "href": "slides/04-ARD/index.html#cards-ard_summary-fmt_fun",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "{cards}: ard_summary() fmt_fun",
    "text": "{cards}: ard_summary() fmt_fun\n\n\nOverride the default formatting functions\nCan also update later via update_ard_fmt_fun()\n\n\n\nadsl |&gt; \n  ard_summary(\n    variables = AGE,\n    by = ARM2,                               \n    fmt_fun = ~list(mean = 0)                \n  ) |&gt; \n  apply_fmt_fun() # add a character column of rounded results\n\n{cards} data frame: 16 x 11\n\n\n   group1 group1_level variable stat_name stat_label   stat stat_fmt\n1    ARM2      Placebo      AGE         N          N     86       86\n2    ARM2      Placebo      AGE      mean       Mean 75.209       75\n3    ARM2      Placebo      AGE        sd         SD   8.59      8.6\n4    ARM2      Placebo      AGE    median     Median     76     76.0\n5    ARM2      Placebo      AGE       p25         Q1     69     69.0\n6    ARM2      Placebo      AGE       p75         Q3     82     82.0\n7    ARM2      Placebo      AGE       min        Min     52     52.0\n8    ARM2      Placebo      AGE       max        Max     89     89.0\n9    ARM2    Xanomeli…      AGE         N          N    168      168\n10   ARM2    Xanomeli…      AGE      mean       Mean 75.024       75\n11   ARM2    Xanomeli…      AGE        sd         SD   8.09      8.1\n12   ARM2    Xanomeli…      AGE    median     Median     77     77.0\n13   ARM2    Xanomeli…      AGE       p25         Q1     71     71.0\n14   ARM2    Xanomeli…      AGE       p75         Q3     81     81.0\n15   ARM2    Xanomeli…      AGE       min        Min     51     51.0\n16   ARM2    Xanomeli…      AGE       max        Max     88     88.0\n\n\nℹ 4 more variables: context, fmt_fun, warning, error"
  },
  {
    "objectID": "slides/04-ARD/index.html#cards-other-summary-functions",
    "href": "slides/04-ARD/index.html#cards-other-summary-functions",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "{cards}: Other Summary Functions",
    "text": "{cards}: Other Summary Functions\n\nard_tabulate_value(): similar to ard_tabulate(), but for dichotomous tabulations\nard_hierarchical(): similar to ard_tabulate(), but built for nested tabulations, e.g. AE terms within SOC\nard_mvsummary(): similar to ard_summary(), for multivariate summaries. The function accepts other arguments like the full and subsetted (within the by groups) data sets.\nard_missing(): tabulates rates of missingness\n\nThe results from all these functions are entirely compatible with one another, and can be stacked into a single data frame. 🥞"
  },
  {
    "objectID": "slides/04-ARD/index.html#cards-other-functions",
    "href": "slides/04-ARD/index.html#cards-other-functions",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "{cards}: Other Functions",
    "text": "{cards}: Other Functions\nIn addition to exporting functions to prepare summaries, {cards} exports many utilities for wrangling ARDs and creating new ARDs.\nConstructing: bind_ard(), tidy_as_ard(), nest_for_ard(), check_ard_structure(), and many more\nWrangling: get_ard_statistics(), replace_null_statistic(), etc."
  },
  {
    "objectID": "slides/04-ARD/index.html#cards-stacking-utilities",
    "href": "slides/04-ARD/index.html#cards-stacking-utilities",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "{cards}: Stacking utilities",
    "text": "{cards}: Stacking utilities\n\n\ndata and .by are shared by all ard_* calls\nAdditional Options .overall, .missing, .attributes, and .total_n provide even more results\nBy default, summaries of the .by variable are included\n\n\n\nadsl |&gt; \n  ard_stack( \n    .by = ARM2,      \n    ard_summary(variables = AGE, statistic = ~ continuous_summary_fns(c(\"mean\",\"sd\"))), \n    ard_tabulate(variables = AGEGR1, statistic = ~ \"p\")\n  )  \n\n{cards} data frame: 14 x 11\n\n\n   group1 group1_level variable variable_level stat_name stat_label   stat\n1    ARM2      Placebo      AGE                     mean       Mean 75.209\n2    ARM2      Placebo      AGE                       sd         SD   8.59\n3    ARM2      Placebo   AGEGR1            &gt;64         p          %  0.837\n4    ARM2      Placebo   AGEGR1          18-64         p          %  0.163\n5    ARM2    Xanomeli…      AGE                     mean       Mean 75.024\n6    ARM2    Xanomeli…      AGE                       sd         SD   8.09\n7    ARM2    Xanomeli…   AGEGR1            &gt;64         p          %  0.887\n8    ARM2    Xanomeli…   AGEGR1          18-64         p          %  0.113\n9    &lt;NA&gt;                  ARM2        Placebo         n          n     86\n10   &lt;NA&gt;                  ARM2        Placebo         N          N    254\n11   &lt;NA&gt;                  ARM2        Placebo         p          %  0.339\n12   &lt;NA&gt;                  ARM2      Xanomeli…         n          n    168\n13   &lt;NA&gt;                  ARM2      Xanomeli…         N          N    254\n14   &lt;NA&gt;                  ARM2      Xanomeli…         p          %  0.661\n\n\nℹ 4 more variables: context, fmt_fun, warning, error"
  },
  {
    "objectID": "slides/04-ARD/index.html#quick-recap",
    "href": "slides/04-ARD/index.html#quick-recap",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "Quick recap!",
    "text": "Quick recap!\n\n\nLet’s compute summaries for a demography table that includes age (AGE), age group (AGEGR1), and sex (SEX) by treatment (ARM2)\nFirst, we compute the continuous summaries for AGE by ARM2\n\n\n\nard_summary(\n  data = adsl,\n  by = ,\n  variables = \n)"
  },
  {
    "objectID": "slides/04-ARD/index.html#quick-recap-1",
    "href": "slides/04-ARD/index.html#quick-recap-1",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "Quick recap!",
    "text": "Quick recap!\n\n\nLet’s compute summaries for a demography table that includes age (AGE), age group (AGEGR1), and sex (SEX) by treatment (ARM2)\nFirst, we compute the continuous summaries for AGE by ARM2\n\n\n\nard_summary(\n  data = adsl,\n  by = ARM2,\n  variables = AGE \n)\n\n{cards} data frame: 16 x 10\n\n\n   group1 group1_level variable stat_name stat_label   stat\n1    ARM2      Placebo      AGE         N          N     86\n2    ARM2      Placebo      AGE      mean       Mean 75.209\n3    ARM2      Placebo      AGE        sd         SD   8.59\n4    ARM2      Placebo      AGE    median     Median     76\n5    ARM2      Placebo      AGE       p25         Q1     69\n6    ARM2      Placebo      AGE       p75         Q3     82\n7    ARM2      Placebo      AGE       min        Min     52\n8    ARM2      Placebo      AGE       max        Max     89\n9    ARM2    Xanomeli…      AGE         N          N    168\n10   ARM2    Xanomeli…      AGE      mean       Mean 75.024\n11   ARM2    Xanomeli…      AGE        sd         SD   8.09\n12   ARM2    Xanomeli…      AGE    median     Median     77\n13   ARM2    Xanomeli…      AGE       p25         Q1     71\n14   ARM2    Xanomeli…      AGE       p75         Q3     81\n15   ARM2    Xanomeli…      AGE       min        Min     51\n16   ARM2    Xanomeli…      AGE       max        Max     88\n\n\nℹ 4 more variables: context, fmt_fun, warning, error"
  },
  {
    "objectID": "slides/04-ARD/index.html#quick-recap-2",
    "href": "slides/04-ARD/index.html#quick-recap-2",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "Quick recap!",
    "text": "Quick recap!\n\n\nLet’s compute summaries for a demography table that includes age (AGE), age group (AGEGR1), and sex (SEX) by treatment (ARM2)\nNext, we compute the categorical summaries for AGEGR1 and SEX by ARM2\n\n\n\nard_tabulate(\n  data = adsl,\n  by = ,\n  variables = \n)"
  },
  {
    "objectID": "slides/04-ARD/index.html#quick-recap-3",
    "href": "slides/04-ARD/index.html#quick-recap-3",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "Quick recap!",
    "text": "Quick recap!\n\n\nLet’s compute summaries for a demography table that includes age (AGE), age group (AGEGR1), and sex (SEX) by treatment (ARM2)\nNext, we compute the categorical summaries for AGEGR1 and SEX by ARM2\n\n\n\nard_tabulate(\n  data = adsl,\n  by = ARM2,\n  variables = c(AGEGR1, SEX) \n)\n\n{cards} data frame: 24 x 11\n\n\n   group1 group1_level variable variable_level stat_name stat_label  stat\n1    ARM2      Placebo   AGEGR1            &gt;64         n          n    72\n2    ARM2      Placebo   AGEGR1            &gt;64         N          N    86\n3    ARM2      Placebo   AGEGR1            &gt;64         p          % 0.837\n4    ARM2      Placebo   AGEGR1          18-64         n          n    14\n5    ARM2      Placebo   AGEGR1          18-64         N          N    86\n6    ARM2      Placebo   AGEGR1          18-64         p          % 0.163\n7    ARM2      Placebo      SEX              F         n          n    53\n8    ARM2      Placebo      SEX              F         N          N    86\n9    ARM2      Placebo      SEX              F         p          % 0.616\n10   ARM2      Placebo      SEX              M         n          n    33\n\n\nℹ 14 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fun, warning, error"
  },
  {
    "objectID": "slides/04-ARD/index.html#quick-recap-4",
    "href": "slides/04-ARD/index.html#quick-recap-4",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "Quick recap!",
    "text": "Quick recap!\n\nLet’s compute summaries for a demography table that includes age (AGE), age group (AGEGR1), and sex (SEX) by treatment (ARM2) in a *single ard_stack() call, including:\n\nsummaries by ARM2 as performed above\ncontinuous summaries from part A for AGE\ncategorical summaries from part B for AGEGR1 and SEX\n\n\n\nard_stack(\n  data = adsl,\n  .by = ARM2,\n  \n  # add ard_* calls here\n  \n)"
  },
  {
    "objectID": "slides/04-ARD/index.html#quick-recap-5",
    "href": "slides/04-ARD/index.html#quick-recap-5",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "Quick recap!",
    "text": "Quick recap!\n\nLet’s compute summaries for a demography table that includes age (AGE), age group (AGEGR1), and sex (SEX) by treatment (ARM2) in a *single ard_stack() call, including:\n\nsummaries by ARM2 as performed above\ncontinuous summaries from part A for AGE\ncategorical summaries from part B for AGEGR1 and SEX\n\n\n\nard_stack(\n  data = adsl,\n  .by = ARM2,\n  ard_continuous(variables = AGE),\n  ard_categorical(variables = c(AGEGR1, SEX))\n)\n\n{cards} data frame: 46 x 11\n\n\n   group1 group1_level variable variable_level stat_name stat_label   stat\n1    ARM2      Placebo      AGE                        N          N     86\n2    ARM2      Placebo      AGE                     mean       Mean 75.209\n3    ARM2      Placebo      AGE                       sd         SD   8.59\n4    ARM2      Placebo      AGE                   median     Median     76\n5    ARM2      Placebo      AGE                      p25         Q1     69\n6    ARM2      Placebo      AGE                      p75         Q3     82\n7    ARM2      Placebo      AGE                      min        Min     52\n8    ARM2      Placebo      AGE                      max        Max     89\n9    ARM2      Placebo   AGEGR1            &gt;64         n          n     72\n10   ARM2      Placebo   AGEGR1            &gt;64         N          N     86\n\n\nℹ 36 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fun, warning, error"
  },
  {
    "objectID": "slides/04-ARD/index.html#quick-recap-6",
    "href": "slides/04-ARD/index.html#quick-recap-6",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "Quick recap!",
    "text": "Quick recap!\n\nWe can also add:\n\nOverall summaries for all variables\nTotal N\n\n\n\nard_stack(\n  data = adsl,\n  .by = ARM2,\n  ard_continuous(variables = AGE),\n  ard_categorical(variables = c(AGEGR1, SEX)),\n  .overall = TRUE,\n  .total_n = TRUE\n)\n\n{cards} data frame: 67 x 11\n\n\n   group1 group1_level variable variable_level stat_name stat_label   stat\n1    ARM2      Placebo      AGE                        N          N     86\n2    ARM2      Placebo      AGE                     mean       Mean 75.209\n3    ARM2      Placebo      AGE                       sd         SD   8.59\n4    ARM2      Placebo      AGE                   median     Median     76\n5    ARM2      Placebo      AGE                      p25         Q1     69\n6    ARM2      Placebo      AGE                      p75         Q3     82\n7    ARM2      Placebo      AGE                      min        Min     52\n8    ARM2      Placebo      AGE                      max        Max     89\n9    ARM2      Placebo   AGEGR1            &gt;64         n          n     72\n10   ARM2      Placebo   AGEGR1            &gt;64         N          N     86\n\n\nℹ 57 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fun, warning, error"
  },
  {
    "objectID": "slides/04-ARD/index.html#cards-hierarchical-summary-functions",
    "href": "slides/04-ARD/index.html#cards-hierarchical-summary-functions",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "{cards}: Hierarchical Summary Functions",
    "text": "{cards}: Hierarchical Summary Functions\nFollowing hierarchical summary functions aid in nested tabulations (e.g. AE terms within SOC):\n\nard_hierarchical(): calculating nested subject-level rates\nard_hierarchical_count(): calculating nested event-level counts"
  },
  {
    "objectID": "slides/04-ARD/index.html#cards-ard_hierarchical",
    "href": "slides/04-ARD/index.html#cards-ard_hierarchical",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "{cards}: ard_hierarchical",
    "text": "{cards}: ard_hierarchical\n\nThis function specializes in calculating subject-level rates.\n\nRates computed on lowest level variables, nested within others\nid helps to check that no duplicate rows exist within the c(id, variables) columns\ndenominator dictates the denominator for the rates\n\n\n\nadae |&gt; \n  dplyr::slice_tail(n = 1L, by = c(USUBJID, ARM, AESOC, AEDECOD)) |&gt; \n  ard_hierarchical(\n    variables = c(AESOC, AEDECOD),\n    by = TRT01A,\n    id = USUBJID,\n    denominator = adsl\n  )\n\n{cards} data frame: 81 x 13\n\n\n   group1 group1_level group2 group2_level variable variable_level stat_name stat_label  stat\n1  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         n          n     9\n2  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         N          N    86\n3  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         p          % 0.105\n4  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      HIATUS H…         n          n     1\n5  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      HIATUS H…         N          N    86\n6  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      HIATUS H…         p          % 0.012\n7  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD       VOMITING         n          n     3\n8  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD       VOMITING         N          N    86\n9  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD       VOMITING         p          % 0.035\n10 TRT01A      Placebo  AESOC    GENERAL …  AEDECOD      APPLICAT…         n          n     3\n\n\nℹ 71 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fun, warning, error"
  },
  {
    "objectID": "slides/04-ARD/index.html#cards-ard_hierarchical_count",
    "href": "slides/04-ARD/index.html#cards-ard_hierarchical_count",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "{cards}: ard_hierarchical_count",
    "text": "{cards}: ard_hierarchical_count\n\nThis function specializes in calculating event-level frequencies.\n\n\nadae |&gt; \n  ard_hierarchical_count( \n    variables = c(AESOC, AEDECOD),\n    by = TRT01A\n  )\n\n{cards} data frame: 27 x 13\n\n\n   group1 group1_level group2 group2_level variable variable_level stat_name stat_label stat\n1  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         n          n   10\n2  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      HIATUS H…         n          n    2\n3  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD       VOMITING         n          n    3\n4  TRT01A      Placebo  AESOC    GENERAL …  AEDECOD      APPLICAT…         n          n    3\n5  TRT01A      Placebo  AESOC    GENERAL …  AEDECOD      APPLICAT…         n          n   10\n6  TRT01A      Placebo  AESOC    GENERAL …  AEDECOD        FATIGUE         n          n    2\n7  TRT01A      Placebo  AESOC    SKIN AND…  AEDECOD       ERYTHEMA         n          n   13\n8  TRT01A      Placebo  AESOC    SKIN AND…  AEDECOD       PRURITUS         n          n   11\n9  TRT01A      Placebo  AESOC    SKIN AND…  AEDECOD      PRURITUS…         n          n    0\n10 TRT01A    Xanomeli…  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         n          n    3\n\n\nℹ 17 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fun, warning, error"
  },
  {
    "objectID": "slides/04-ARD/index.html#hierarchical-summaries-many-ways",
    "href": "slides/04-ARD/index.html#hierarchical-summaries-many-ways",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "Hierarchical summaries many ways",
    "text": "Hierarchical summaries many ways\n\nDisplays for hierarchical data typically report on each level of the hierarchy (Any AE Overall, by System Organ Class, by Preferred Term)\nThis can mean several calls to the ard_hierarchical_* functions\nFurther, subject-level summaries require a different subset of the data each time. For example, to calculate Overall rates, we need to subset to 1 record per subject in ADAE.\n\n\n\nIs there an easier way?"
  },
  {
    "objectID": "slides/04-ARD/index.html#cards-stacking-function-for-ard_hierarchical",
    "href": "slides/04-ARD/index.html#cards-stacking-function-for-ard_hierarchical",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "{cards}: Stacking function for ard_hierarchical()",
    "text": "{cards}: Stacking function for ard_hierarchical()\n\n\nard_hierarchical stacking functions simplify this multi-step process into a single step\nThe id argument is used to subset the data along the way\n\n\n\nadae |&gt; \n  ard_stack_hierarchical(\n    variables = c(AESOC, AEDECOD),\n    by = TRT01A,\n    id = USUBJID,\n    denominator = pharmaverseadam::adsl\n  )\n\n\n\n   group1 group1_level group2 group2_level variable variable_level stat_name stat_label  stat\n1  TRT01A      Placebo   &lt;NA&gt;                 AESOC      GASTROIN…         n          n    12\n2  TRT01A      Placebo   &lt;NA&gt;                 AESOC      GASTROIN…         N          N    86\n3  TRT01A      Placebo   &lt;NA&gt;                 AESOC      GASTROIN…         p          %  0.14\n4  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         n          n     9\n5  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         N          N    86\n6  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         p          % 0.105\n7  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      HIATUS H…         n          n     1\n8  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      HIATUS H…         N          N    86\n9  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      HIATUS H…         p          % 0.012\n10 TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD       VOMITING         n          n     3\n11 TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD       VOMITING         N          N    86\n12 TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD       VOMITING         p          % 0.035"
  },
  {
    "objectID": "slides/04-ARD/index.html#cards-stacking-function-for-ard_hierarchical_count",
    "href": "slides/04-ARD/index.html#cards-stacking-function-for-ard_hierarchical_count",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "{cards}: Stacking function for ard_hierarchical_count()",
    "text": "{cards}: Stacking function for ard_hierarchical_count()\n\n\nBelow is the stacking function for event-level summaries, aligned with ard_hierarchical_count()\n\n\n\nadae |&gt; \n  ard_stack_hierarchical_count(\n    variables = c(AESOC, AEDECOD),\n    by = TRT01A, \n    denominator = pharmaverseadam::adsl\n  )\n\n\n\n  group1 group1_level group2 group2_level variable variable_level stat_name stat_label stat\n1 TRT01A      Placebo   &lt;NA&gt;                 AESOC      GASTROIN…         n          n   15\n2 TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         n          n   10\n3 TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      HIATUS H…         n          n    2\n4 TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD       VOMITING         n          n    3"
  },
  {
    "objectID": "slides/04-ARD/index.html#exercise",
    "href": "slides/04-ARD/index.html#exercise",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "Exercise 🏃‍➡️",
    "text": "Exercise 🏃‍➡️\n\nNavigate to Posit Cloud script exercises/04-ARD.R\nCompute the nested AE tabulations as described.\nAdd the “completed” sticky note to your laptop when complete.\n\n\n\n\n−+\n10:00"
  },
  {
    "objectID": "slides/04-ARD/index.html#cardx",
    "href": "slides/04-ARD/index.html#cardx",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "{cardx}",
    "text": "{cardx}\n\nExtension of the {cards} package, providing additional functions to create Analysis Results Datasets (ARDs)\nThe {cardx} package exports many ard_*() function for statistical methods."
  },
  {
    "objectID": "slides/04-ARD/index.html#cardx-1",
    "href": "slides/04-ARD/index.html#cardx-1",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "{cardx}",
    "text": "{cardx}\n\nExports ARD frameworks for statistical analyses from many packages\n\n\n  - {stats}\n  - {car}\n  - {effectsize}\n  - {emmeans}\n  - {geepack}\n  - {lme4}\n  - {parameters}\n  - {smd}\n  - {survey}\n  - {survival}\n\n\nThis list is growing (rather quickly) 🌱"
  },
  {
    "objectID": "slides/04-ARD/index.html#cardx-t-test-example",
    "href": "slides/04-ARD/index.html#cardx-t-test-example",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "{cardx} t-test Example",
    "text": "{cardx} t-test Example\n\n\nWe see the results like the mean difference, the confidence interval, and p-value as expected.\nAnd we also see the function’s inputs, which is incredibly useful for re-use, e.g. we know the we did not use equal variances.\n\n\n\nadsl |&gt; \n  cardx::ard_stats_t_test(by = ARM2, variables = AGE)\n\n{cards} data frame: 14 x 9\n\n\n   group1 variable   context   stat_name stat_label      stat\n1    ARM2      AGE stats_t_…    estimate  Mean Dif…     0.185\n2    ARM2      AGE stats_t_…   estimate1  Group 1 …    75.209\n3    ARM2      AGE stats_t_…   estimate2  Group 2 …    75.024\n4    ARM2      AGE stats_t_…   statistic  t Statis…     0.166\n5    ARM2      AGE stats_t_…     p.value    p-value     0.868\n6    ARM2      AGE stats_t_…   parameter  Degrees …   162.643\n7    ARM2      AGE stats_t_…    conf.low  CI Lower…     -2.02\n8    ARM2      AGE stats_t_…   conf.high  CI Upper…     2.391\n9    ARM2      AGE stats_t_…      method     method Welch Tw…\n10   ARM2      AGE stats_t_… alternative  alternat… two.sided\n11   ARM2      AGE stats_t_…          mu    H0 Mean         0\n12   ARM2      AGE stats_t_…      paired  Paired t…     FALSE\n13   ARM2      AGE stats_t_…   var.equal  Equal Va…     FALSE\n14   ARM2      AGE stats_t_…  conf.level  CI Confi…      0.95\n\n\nℹ 3 more variables: fmt_fun, warning, error"
  },
  {
    "objectID": "slides/04-ARD/index.html#cardx-t-test-example-1",
    "href": "slides/04-ARD/index.html#cardx-t-test-example-1",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "{cardx} t-test Example",
    "text": "{cardx} t-test Example\n\n\nWhat to do if a method you need is not implemented?\nIt’s simple to wrap existing frameworks to customize.\nOne-sample t-test example utilizing cards::ard_continuous().\n\n\n\nadsl |&gt; \n  cards::ard_summary(\n    variables = AGE,\n    statistic = everything() ~ list(t_test = \\(x) t.test(x) |&gt; broom::tidy())\n  ) |&gt; \n  dplyr::mutate(context = \"t_test_one_sample\")\n\n{cards} data frame: 8 x 8\n\n\n  variable   context   stat_name stat_label      stat fmt_fun\n1      AGE t_test_o…    estimate   estimate    75.087       1\n2      AGE t_test_o…   statistic  statistic   145.119       1\n3      AGE t_test_o…     p.value    p.value         0       1\n4      AGE t_test_o…   parameter  parameter       253       1\n5      AGE t_test_o…    conf.low   conf.low    74.068       1\n6      AGE t_test_o…   conf.high  conf.high    76.106       1\n7      AGE t_test_o…      method     method One Samp…    &lt;fn&gt;\n8      AGE t_test_o… alternative  alternat… two.sided    &lt;fn&gt;\n\n\nℹ 2 more variables: warning, error"
  },
  {
    "objectID": "slides/04-ARD/index.html#cardx-t-test-example-2",
    "href": "slides/04-ARD/index.html#cardx-t-test-example-2",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "{cardx} t-test Example",
    "text": "{cardx} t-test Example\n\n\nHow to modify if we need a two-sample test, or more generally accessing other columns in the data frame.\n\n\n\nadsl |&gt; \n  cards::ard_mvsummary(\n    variables = AGE,\n    statistic = \n      ~ list(t_test = \\(x, data, ...) t.test(x ~ data$ARM2) |&gt; broom::tidy())\n  ) |&gt; \n  dplyr::mutate(group1 = \"ARM2\", context = \"t_test_two_sample\") |&gt; \n  cards::tidy_ard_column_order()\n\n{cards} data frame: 10 x 9\n\n\n   group1 variable   context   stat_name stat_label      stat\n1    ARM2      AGE t_test_t…    estimate   estimate     0.185\n2    ARM2      AGE t_test_t…   estimate1  estimate1    75.209\n3    ARM2      AGE t_test_t…   estimate2  estimate2    75.024\n4    ARM2      AGE t_test_t…   statistic  statistic     0.166\n5    ARM2      AGE t_test_t…     p.value    p.value     0.868\n6    ARM2      AGE t_test_t…   parameter  parameter   162.643\n7    ARM2      AGE t_test_t…    conf.low   conf.low     -2.02\n8    ARM2      AGE t_test_t…   conf.high  conf.high     2.391\n9    ARM2      AGE t_test_t…      method     method Welch Tw…\n10   ARM2      AGE t_test_t… alternative  alternat… two.sided\n\n\nℹ 3 more variables: fmt_fun, warning, error"
  },
  {
    "objectID": "slides/04-ARD/index.html#cardx-regression",
    "href": "slides/04-ARD/index.html#cardx-regression",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "{cardx} Regression",
    "text": "{cardx} Regression\n\nIncludes functionality to summarize nearly every type of regression model in the R ecosystem:\n\n\nbetareg::betareg(), biglm::bigglm(), brms::brm(), cmprsk::crr(), fixest::feglm(), fixest::femlm(), fixest::feNmlm(), fixest::feols(), gam::gam(), geepack::geeglm(), glmmTMB::glmmTMB(), glmtoolbox::glmgee(), lavaan::lavaan(), lfe::felm(), lme4::glmer.nb(), lme4::glmer(), lme4::lmer(), logitr::logitr(), MASS::glm.nb(), MASS::polr(), mgcv::gam(), mice::mira, mmrm::mmrm(), multgee::nomLORgee(), multgee::ordLORgee(), nnet::multinom(), ordinal::clm(), ordinal::clmm(), parsnip::model_fit, plm::plm(), pscl::hurdle(), pscl::zeroinfl(), rstanarm::stan_glm(), stats::aov(), stats::glm(), stats::lm(), stats::nls(), survey::svycoxph(), survey::svyglm(), survey::svyolr(), survival::cch(), survival::clogit(), survival::coxph(), survival::survreg(), svyVGAM::svy_vglm(), tidycmprsk::crr(), VGAM::vgam(), VGAM::vglm() (and more)"
  },
  {
    "objectID": "slides/04-ARD/index.html#cardx-regression-1",
    "href": "slides/04-ARD/index.html#cardx-regression-1",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "{cardx} Regression",
    "text": "{cardx} Regression\n\nThe cardx::ard_regression() does a lot for us in the background.\n\nIdentifies the variable from the regression terms (i.e. groups levels of the same variable)\nIdentifies reference groups from categorical covariates\nFinds variable labels from the source data frames\nKnows the total N of the model, the number of events, and can do the same for each level of categorical variables\nContextually aware of slopes, odds ratios, hazard ratios, and incidence rate ratios\nAnd much much more.\n\n\n\nlm(AGE ~ ARM2, data = adsl) |&gt;\n  cardx::ard_regression(add_estimate_to_reference_rows = TRUE)\n\n   variable variable_level   context      stat_name stat_label      stat\n1      ARM2        Placebo regressi…           term       term ARM2Plac…\n2      ARM2        Placebo regressi…      var_label      Label      ARM2\n3      ARM2        Placebo regressi…      var_class      Class character\n4      ARM2        Placebo regressi…       var_type       Type dichotom…\n5      ARM2        Placebo regressi…    var_nlevels   N Levels         2\n6      ARM2        Placebo regressi…      contrasts  contrasts contr.tr…\n7      ARM2        Placebo regressi… contrasts_type  Contrast… treatment\n8      ARM2        Placebo regressi…  reference_row  referenc…      TRUE\n9      ARM2        Placebo regressi…          label  Level La…   Placebo\n10     ARM2        Placebo regressi…          n_obs     N Obs.        86"
  },
  {
    "objectID": "slides/04-ARD/index.html#when-things-go-wrong",
    "href": "slides/04-ARD/index.html#when-things-go-wrong",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "When things go wrong 😱",
    "text": "When things go wrong 😱\n\nWhat happens when statistics are un-calculable?\n\n\nard_gone_wrong &lt;- \n  adsl |&gt; \n  ard_summary(\n    by = ARM2,\n    variable = AGEGR1,\n    statistic = ~list(kurtosis = \\(x) e1071::kurtosis(x))\n  ) |&gt; \n  cards::replace_null_statistic()\nard_gone_wrong\n\n{cards} data frame: 2 x 10\n\n\n  group1 group1_level variable stat_name stat_label stat   warning     error\n1   ARM2      Placebo   AGEGR1  kurtosis   kurtosis   NA argument… non-nume…\n2   ARM2    Xanomeli…   AGEGR1  kurtosis   kurtosis   NA argument… non-nume…\n\n\nℹ 2 more variables: context, fmt_fun\n\n\n\ncards::print_ard_conditions(ard_gone_wrong)\n\n\n\n\nWhere is the statistic? AGEGR1 is character\nEven when there are errors or warnings, we still get the ARD with the expected structure returned.\n\nTHIS IS BIG! There are MANY circumstances, when you are designing TLGs early in a study when you do not have all the data required to calculate every statistic.\nThis allows you to design everything up-front.\n\nWe can also report these warnings and errors back to users. &lt;!CLICK!&gt;"
  },
  {
    "objectID": "slides/05-tables-tfrmt/index.html#ards-tables-a-dynamic-duo",
    "href": "slides/05-tables-tfrmt/index.html#ards-tables-a-dynamic-duo",
    "title": "Tables in R using {tfrmt}",
    "section": "ARDS 🤝 Tables: A Dynamic Duo",
    "text": "ARDS 🤝 Tables: A Dynamic Duo"
  },
  {
    "objectID": "slides/05-tables-tfrmt/index.html#objectives",
    "href": "slides/05-tables-tfrmt/index.html#objectives",
    "title": "Tables in R using {tfrmt}",
    "section": "Objectives",
    "text": "Objectives\n\nBy the end of this tables section you will have:\n\nDeveloped an understanding of how tfrmt supports table creation in multiple phases of the reporting process\nSeen examples of demographic and AE summary table formatting\nGained an awareness of utilities for the transition from cards to tfrmt input data"
  },
  {
    "objectID": "slides/05-tables-tfrmt/index.html#ard-first-tables-with-tfrmt",
    "href": "slides/05-tables-tfrmt/index.html#ard-first-tables-with-tfrmt",
    "title": "Tables in R using {tfrmt}",
    "section": "ARD-first Tables with {tfrmt}",
    "text": "ARD-first Tables with {tfrmt}\n\n\n\n\n\n\n\n\nMetadata-driven table formatting\nEasily create new and modify existing tables\nInput: ARD with raw, numeric values ({cards}!)\nOutput: Formatted table via {gt}"
  },
  {
    "objectID": "slides/05-tables-tfrmt/index.html#theres-also-an-app",
    "href": "slides/05-tables-tfrmt/index.html#theres-also-an-app",
    "title": "Tables in R using {tfrmt}",
    "section": "There’s also an app!",
    "text": "There’s also an app!\n\n\n\n\n\nPoint-and-click interface for {tfrmt}\nAbility to create new or modify existing display\nEases learning curve for new users\nEmpowers non-programmers\nMore here: https://gsk-biostatistics.github.io/tfrmtbuilder/"
  },
  {
    "objectID": "slides/05-tables-tfrmt/index.html#the-tfrmt-object",
    "href": "slides/05-tables-tfrmt/index.html#the-tfrmt-object",
    "title": "Tables in R using {tfrmt}",
    "section": "The {tfrmt} object",
    "text": "The {tfrmt} object\n\nPre-define the non-data components of your table\nPre-define how the data will be handled once added"
  },
  {
    "objectID": "slides/05-tables-tfrmt/index.html#use-1-study-planning-mocks",
    "href": "slides/05-tables-tfrmt/index.html#use-1-study-planning-mocks",
    "title": "Tables in R using {tfrmt}",
    "section": "Use #1: Study planning (mocks)",
    "text": "Use #1: Study planning (mocks)\n\n\nlibrary(tfrmt)\n\nprint_mock_gt(\n  tfrmt = tfrmt_demog, # tfrmt\n  .data = ard_demog_mock # sample ARD\n)|&gt; \n   gt_style_slides()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDemographics Table\n\n\n\nPlaceboN = xx\nLow DoseN = xx\nHigh DoseN = xx\n\n\n\n\nAge (y)     \n\n\n\n\n\n\n\n\n  Mean      \nxxx.x       \nxxx.x       \nxxx.x       \n\n\n  SD        \nxxx.xx      \nxxx.xx      \nxxx.xx      \n\n\n  Median    \nxxx.x       \nxxx.x       \nxxx.x       \n\n\n  Min       \nxxx.x       \nxxx.x       \nxxx.x       \n\n\n  Max       \nxxx.x       \nxxx.x       \nxxx.x       \n\n\n  &lt;65 yrs   \nxxx (xx.x %)\nxxx (xx.x %)\nxxx (xx.x %)\n\n\n  65-80 yrs \nxxx (xx.x %)\nxxx (xx.x %)\nxxx (xx.x %)\n\n\n  &gt;80 yrs   \nxxx (xx.x %)\nxxx (xx.x %)\nxxx (xx.x %)\n\n\nSex         \n\n\n\n\n\n\n\n\n  Male      \nxxx (xx.x %)\nxxx (xx.x %)\nxxx (xx.x %)\n\n\n  Female    \nxxx (xx.x %)\nxxx (xx.x %)\nxxx (xx.x %)\n\n\nBaseline BMI\n\n\n\n\n\n\n\n\n  Mean      \nxxx.x       \nxxx.x       \nxxx.x       \n\n\n  SD        \nxxx.xx      \nxxx.xx      \nxxx.xx      \n\n\n  Median    \nxxx.x       \nxxx.x       \nxxx.x       \n\n\n  Min       \nxxx.x       \nxxx.x       \nxxx.x       \n\n\n  Max       \nxxx.x       \nxxx.x       \nxxx.x       \n\n\n  &lt;25       \nxxx (xx.x %)\nxxx (xx.x %)\nxxx (xx.x %)\n\n\n  25-&lt;30    \nxxx (xx.x %)\nxxx (xx.x %)\nxxx (xx.x %)\n\n\n  &gt;=30      \nxxx (xx.x %)\nxxx (xx.x %)\nxxx (xx.x %)\n\n\n\n\n\n\n\n\nIf no data is supplied, {tfrmt} will generate some under the hood"
  },
  {
    "objectID": "slides/05-tables-tfrmt/index.html#use-2-final-analysis",
    "href": "slides/05-tables-tfrmt/index.html#use-2-final-analysis",
    "title": "Tables in R using {tfrmt}",
    "section": "Use #2: Final analysis",
    "text": "Use #2: Final analysis\n\n\nlibrary(tfrmt)\n\nprint_to_gt(\n  tfrmt = tfrmt_demog,\n  .data = ard_demog # true ARD\n)|&gt; \n   gt_style_slides()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDemographics Table\n\n\n\nPlaceboN = 86\nLow DoseN = 84\nHigh DoseN = 84\n\n\n\n\nAge (y)     \n\n\n\n\n\n\n\n\n  Mean      \n75.2       \n75.7       \n74.4       \n\n\n  SD        \n 8.59      \n 8.29      \n 7.89      \n\n\n  Median    \n76.0       \n77.5       \n76.0       \n\n\n  Min       \n52.0       \n51.0       \n56.0       \n\n\n  Max       \n89.0       \n88.0       \n88.0       \n\n\n  &lt;65 yrs   \n14 (16.3 %)\n 8 ( 9.5 %)\n11 (13.1 %)\n\n\n  65-80 yrs \n42 (48.8 %)\n47 (56.0 %)\n55 (65.5 %)\n\n\n  &gt;80 yrs   \n30 (34.9 %)\n29 (34.5 %)\n18 (21.4 %)\n\n\nSex         \n\n\n\n\n\n\n\n\n  Male      \n33 (38.4 %)\n34 (40.5 %)\n44 (52.4 %)\n\n\n  Female    \n53 (61.6 %)\n50 (59.5 %)\n40 (47.6 %)\n\n\nBaseline BMI\n\n\n\n\n\n\n\n\n  Mean      \n23.6       \n25.1       \n25.3       \n\n\n  SD        \n 3.67      \n 4.27      \n 4.16      \n\n\n  Median    \n23.4       \n24.3       \n24.8       \n\n\n  Min       \n15.1       \n17.7       \n13.7       \n\n\n  Max       \n33.3       \n40.1       \n34.5       \n\n\n  &lt;25       \n59 (68.6 %)\n47 (56.0 %)\n44 (52.4 %)\n\n\n  25-&lt;30    \n21 (24.4 %)\n27 (32.1 %)\n28 (33.3 %)\n\n\n  &gt;=30      \n 6 ( 7.0 %)\n10 (11.9 %)\n12 (14.3 %)\n\n\n\n\n\n\n\n\nFull reuse of the original {tfrmt} object = reduced rework!"
  },
  {
    "objectID": "slides/05-tables-tfrmt/index.html#use-3-repurposed-final-table",
    "href": "slides/05-tables-tfrmt/index.html#use-3-repurposed-final-table",
    "title": "Tables in R using {tfrmt}",
    "section": "Use #3: Repurposed final table",
    "text": "Use #3: Repurposed final table\n\n\nlibrary(tfrmt)\n\ntfrmt_demog |&gt; \n  layer_tfrmt(\n    tfrmt_demog_custom  \n  )|&gt; \n  print_to_gt( \n    .data = ard_demog\n  ) |&gt; \n  gt::grp_pull(1)|&gt; \n   gt_style_slides()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDemographics Table\n\n\nSafety Population\n\n\n\nHigh Dose(N = 84)\nLow Dose(N = 84)\nPlacebo(N = 86)\n\n\n\n\nAge (y)    \n\n\n\n\n\n\n\n\n  Mean     \n74.4       \n75.7       \n75.2       \n\n\n  SD       \n 7.89      \n 8.29      \n 8.59      \n\n\n  Median   \n76.0       \n77.5       \n76.0       \n\n\n  Min      \n56.0       \n51.0       \n52.0       \n\n\n  Max      \n88.0       \n88.0       \n89.0       \n\n\n           \n           \n           \n           \n\n\n  &lt;65 yrs  \n11 (13.1 %)\n 8 ( 9.5 %)\n14 (16.3 %)\n\n\n  65-80 yrs\n55 (65.5 %)\n47 (56.0 %)\n42 (48.8 %)\n\n\n  &gt;80 yrs  \n18 (21.4 %)\n29 (34.5 %)\n30 (34.9 %)\n\n\n           \n           \n           \n           \n\n\nSex        \n\n\n\n\n\n\n\n\n  Male     \n44 (52.4 %)\n34 (40.5 %)\n33 (38.4 %)\n\n\n  Female   \n40 (47.6 %)\n50 (59.5 %)\n53 (61.6 %)\n\n\n           \n           \n           \n           \n\n\n\nData collected at Screening Visit\n\n\n\n\n\n\n\n\n\nLayering allows for custom tweaks while preserving the original metadata"
  },
  {
    "objectID": "slides/05-tables-tfrmt/index.html#templates-the-possibilities",
    "href": "slides/05-tables-tfrmt/index.html#templates-the-possibilities",
    "title": "Tables in R using {tfrmt}",
    "section": "Templates: the possibilities",
    "text": "Templates: the possibilities\n\nOrganization standards can be capture as templates\n\n\n# create a template as a function\ntfrmt_demog_org &lt;- function(tfrmt_obj){\n  \n  tfrmt_demog_org &lt;- tfrmt( \n    # define standard formatting for org\n  )\n  \n  layer_tfrmt(x = tfrmt_obj, y = tfrmt_demog_ta)\n}\n\n# Make a standard table\ntfrmt_demog_org() |&gt;  \n  print_to_gt(\n    .data = ard_demog\n  )"
  },
  {
    "objectID": "slides/05-tables-tfrmt/index.html#templates-the-possibilities-1",
    "href": "slides/05-tables-tfrmt/index.html#templates-the-possibilities-1",
    "title": "Tables in R using {tfrmt}",
    "section": "Templates: the possibilities",
    "text": "Templates: the possibilities\n\nOrganization standards can be capture as templates\nWith layering, teams can customize only the bits that need changing\n\n\n# create a template as a function\ntfrmt_demog_ta &lt;- function(tfrmt_obj){\n  \n  tfrmt_demog_ta &lt;- tfrmt( \n    # define the formatting specific to the therapeutic area\n  )\n  \n  layer_tfrmt(x = tfrmt_obj, y = tfrmt_demog_ta)\n}\n\n# Layering multiple templates\ntfrmt_demog_org() |&gt; \n  tfrmt_demog_ta() |&gt;  \n  print_to_gt(\n    .data = ard_demog\n  )"
  },
  {
    "objectID": "slides/05-tables-tfrmt/index.html#templates-the-possibilities-2",
    "href": "slides/05-tables-tfrmt/index.html#templates-the-possibilities-2",
    "title": "Tables in R using {tfrmt}",
    "section": "Templates: the possibilities",
    "text": "Templates: the possibilities\n\nOrganization standards can be capture as templates\nWith layering, teams can customize only the bits that need changing\n\n\n# create a template as a function\ntfrmt_demog_study &lt;- function(tfrmt_obj){\n  \n  tfrmt_demog_study &lt;- tfrmt( \n    # define the formatting specific to the study\n  )\n  \n  layer_tfrmt(x = tfrmt_obj, y = tfrmt_demog_study)\n}\n\n# Layering multiple templates\ntfrmt_demog_org() |&gt; \n  tfrmt_demog_ta() |&gt;  \n  tfrmt_demog_study() |&gt; \n  print_to_gt(\n    .data = ard_demog\n  )"
  },
  {
    "objectID": "slides/05-tables-tfrmt/index.html#save-metadata-for-reuse",
    "href": "slides/05-tables-tfrmt/index.html#save-metadata-for-reuse",
    "title": "Tables in R using {tfrmt}",
    "section": "Save metadata for reuse",
    "text": "Save metadata for reuse\n\n\nlibrary(tfrmt)\n\ntfrmt_demog |&gt; \n  tfrmt_to_json()\n\n\n{\n  \"group\": [\"rowlbl1\", \"grp\"],\n  \"label\": [\"rowlbl2\"],\n  \"param\": [\"param\"],\n  \"value\": [\"value\"],\n  \"column\": [\"column\"],\n  \"title\": [\"Demographics Table\"],\n  \"body_plan\": [\n    {\n      \"group_val\": [\".default\"],\n      \"label_val\": [\".default\"],\n      \"param_val\": [\"n\", \"pct\"],\n      \"frmt_combine\": {\n        \"expression\": [\"{n} {pct}\"],\n        \"frmt_ls\": {\n          \"n\": {\n            \"frmt\": {\n              \"expression\": [\"xxx\"],\n              \"missing\": {},\n              \"scientific\": {},\n              \"transform\": {}\n            }\n          },\n          \"pct\": {\n            \"frmt_when\": {\n              \"frmt_ls\": {\n                \"==100\": [\"\"],\n                \"==0\": [\"\"],\n                \"TRUE\": {\n                  \"frmt\": {\n                    \"expression\": [\"(xx.x %)\"],\n                    \"missing\": {},\n                    \"scientific\": {},\n                    \"transform\": {}\n                  }\n                }\n              },\n              \"missing\": {}\n            }\n          }\n        },\n        \"missing\": {}\n      }\n    },\n    {\n      \"group_val\": [\".default\"],\n      \"label_val\": [\"n\"],\n      \"param_val\": [\".default\"],\n      \"frmt\": {\n        \"expression\": [\"xxx\"],\n        \"missing\": {},\n        \"scientific\": {},\n        \"transform\": {}\n      }\n    },\n    {\n      \"group_val\": [\".default\"],\n      \"label_val\": [\"Mean\", \"Median\", \"Min\", \"Max\"],\n      \"param_val\": [\".default\"],\n      \"frmt\": {\n        \"expression\": [\"xxx.x\"],\n        \"missing\": {},\n        \"scientific\": {},\n        \"transform\": {}\n      }\n    },\n    {\n      \"group_val\": [\".default\"],\n      \"label_val\": [\"SD\"],\n      \"param_val\": [\".default\"],\n      \"frmt\": {\n        \"expression\": [\"xxx.xx\"],\n        \"missing\": {},\n        \"scientific\": {},\n        \"transform\": {}\n      }\n    }\n  ],\n  \"col_style_plan\": [\n    {\n      \"cols\": [\n        [\"Placebo\"],\n        [\"Low Dose\"],\n        [\"High Dose\"]\n      ],\n      \"align\": [\".\", \",\", \" \"],\n      \"type\": [\"char\"],\n      \"width\": {}\n    },\n    {\n      \"cols\": [\n        [\"rowlbl1\"],\n        [\"rowlbl2\"]\n      ],\n      \"align\": [\"left\"],\n      \"type\": [\"char\"],\n      \"width\": {}\n    }\n  ],\n  \"col_plan\": {\n    \"col_plan\": {\n      \"dots\": [\n        [\"-grp\"],\n        [\"-starts_with(\\\"ord\\\")\"]\n      ],\n      \".drop\": [false]\n    }\n  },\n  \"sorting_cols\": [\"ord1\", \"ord2\"],\n  \"big_n\": {\n    \"param_val\": [\"bigN\"],\n    \"n_frmt\": {\n      \"expression\": [\"&lt;br&gt;N = xx\"],\n      \"missing\": {},\n      \"scientific\": {},\n      \"transform\": {}\n    },\n    \"by_page\": [false]\n  }\n} \n\n\n\nCreate a language-agnostic JSON file\nLoad JSON back into R and recreate the table with json_to_tfrmt()"
  },
  {
    "objectID": "slides/05-tables-tfrmt/index.html#saving-display",
    "href": "slides/05-tables-tfrmt/index.html#saving-display",
    "title": "Tables in R using {tfrmt}",
    "section": "Saving display",
    "text": "Saving display\n\ntfrmt::print_to_gt() creates a {gt} object under the hood\nYou can export the table to a variety of formats using gt::gt_save()\nCheck out {docorator} too 😊 at https://gsk-biostatistics.github.io/docorator/"
  },
  {
    "objectID": "slides/05-tables-tfrmt/index.html#creating-a-tfrmt-table-step-by-step",
    "href": "slides/05-tables-tfrmt/index.html#creating-a-tfrmt-table-step-by-step",
    "title": "Tables in R using {tfrmt}",
    "section": "Creating a {tfrmt} table step-by-step",
    "text": "Creating a {tfrmt} table step-by-step\n\n\n\n\n\n\n\n\n\n\n\n\n\nDemographic Table\n\n\nSafety Population\n\n\n\nPlaceboN = xx\nXanomelineN = xx1\n\n\n\n\nAge (years)\n\n\n\n\n\n\n  Median\n  xx.x        \n  xx.x        \n\n\n  [Q1, Q3]\n[xx.x, xx.x]  \n[xx.x, xx.x]  \n\n\nAge Group\n\n\n\n\n\n\n  18-64\n    xx (xx.x%)\n    xx (xx.x%)\n\n\n  &gt;64\n    xx (xx.x%)\n    xx (xx.x%)\n\n\nSex\n\n\n\n\n\n\n  F\n    xx (xx.x%)\n    xx (xx.x%)\n\n\n  M\n    xx (xx.x%)\n    xx (xx.x%)\n\n\n\n1 Pooled High and Low Dose"
  },
  {
    "objectID": "slides/05-tables-tfrmt/index.html#ensure-placement-of-all-values-main",
    "href": "slides/05-tables-tfrmt/index.html#ensure-placement-of-all-values-main",
    "title": "Tables in R using {tfrmt}",
    "section": "Ensure placement of all values (Main)",
    "text": "Ensure placement of all values (Main)\n\n\n\nprint(ard_demog)\n\n# A tibble: 24 × 7\n   ARM2    stat_variable stat_name   stat label     ord1  ord2\n   &lt;chr&gt;   &lt;chr&gt;         &lt;chr&gt;      &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt; &lt;dbl&gt;\n 1 Placebo Age (years)   median    76     Median       1    NA\n 2 Placebo Age (years)   p25       69     [Q1, Q3]     1    NA\n 3 Placebo Age (years)   p75       82     [Q1, Q3]     1    NA\n 4 Placebo Age Group     n         72     &gt;64          2     2\n 5 Placebo Age Group     p          0.837 &gt;64          2     2\n 6 Placebo Age Group     n         14     18-64        2     1\n 7 Placebo Age Group     p          0.163 18-64        2     1\n 8 Placebo Sex           n         53     F            3    NA\n 9 Placebo Sex           p          0.616 F            3    NA\n10 Placebo Sex           n         33     M            3    NA\n# ℹ 14 more rows\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDemographic Table\n\n\nSafety Population\n\n\n\nPlaceboN = xx\nXanomelineN = xx1\n\n\n\n\nAge (years)\n\n\n\n\n\n\n  Median\n  xx.x        \n  xx.x        \n\n\n  [Q1, Q3]\n[xx.x, xx.x]  \n[xx.x, xx.x]  \n\n\nAge Group\n\n\n\n\n\n\n  18-64\n    xx (xx.x%)\n    xx (xx.x%)\n\n\n  &gt;64\n    xx (xx.x%)\n    xx (xx.x%)\n\n\nSex\n\n\n\n\n\n\n  F\n    xx (xx.x%)\n    xx (xx.x%)\n\n\n  M\n    xx (xx.x%)\n    xx (xx.x%)\n\n\n\n1 Pooled High and Low Dose"
  },
  {
    "objectID": "slides/05-tables-tfrmt/index.html#ensure-placement-of-all-values-main-1",
    "href": "slides/05-tables-tfrmt/index.html#ensure-placement-of-all-values-main-1",
    "title": "Tables in R using {tfrmt}",
    "section": "Ensure placement of all values (Main)",
    "text": "Ensure placement of all values (Main)\n\n\ntfrmt_demog &lt;- tfrmt(\n  group = stat_variable, \n  label = label, \n  column = ARM2,\n  param = stat_name,\n  value = stat, \n  sorting_cols = c(ord1, ord2) \n)\n\nprint_to_gt(\n  tfrmt = tfrmt_demog,\n  .data = ard_demog\n) |&gt; \n   gt_style_slides()\n\n\n\n\n\n\n\n\n\nord1\nord2\nPlacebo\nXanomeline\n\n\n\n\nMedian\n1\nNA\n76\n77\n\n\n[Q1, Q3]\n1\nNA\n69, 82\n71, 81\n\n\n18-64\n2\n1\n14, 0.162790697674419\n19, 0.113095238095238\n\n\n&gt;64\n2\n2\n72, 0.837209302325581\n149, 0.886904761904762\n\n\nF\n3\nNA\n53, 0.616279069767442\n90, 0.535714285714286\n\n\nM\n3\nNA\n33, 0.383720930232558\n78, 0.464285714285714\n\n\nNA\nNA\nNA\n86\n168"
  },
  {
    "objectID": "slides/05-tables-tfrmt/index.html#ensure-placement-of-all-values-big-n",
    "href": "slides/05-tables-tfrmt/index.html#ensure-placement-of-all-values-big-n",
    "title": "Tables in R using {tfrmt}",
    "section": "Ensure placement of all values (Big N)",
    "text": "Ensure placement of all values (Big N)\n\n\ntfrmt_demog &lt;- tfrmt_demog |&gt;\n  tfrmt(\n    big_n = big_n_structure(\n      param_val = \"bigN\",\n      n_frmt = frmt(\"&lt;br&gt;N = xx\")\n      )\n  )\n\nprint_to_gt(\n  tfrmt = tfrmt_demog, \n  .data = ard_demog\n  )|&gt; \n   gt_style_slides()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nord1\nord2\nPlaceboN = 86\nXanomelineN = 168\n\n\n\n\nAge (years)\n\n\n\n\n\n\n\n\n\n\n  Median\n1\nNA\n76\n77\n\n\n  [Q1, Q3]\n1\nNA\n69, 82\n71, 81\n\n\nAge Group\n\n\n\n\n\n\n\n\n\n\n  18-64\n2\n1\n14, 0.162790697674419\n19, 0.113095238095238\n\n\n  &gt;64\n2\n2\n72, 0.837209302325581\n149, 0.886904761904762\n\n\nSex\n\n\n\n\n\n\n\n\n\n\n  F\n3\nNA\n53, 0.616279069767442\n90, 0.535714285714286\n\n\n  M\n3\nNA\n33, 0.383720930232558\n78, 0.464285714285714"
  },
  {
    "objectID": "slides/05-tables-tfrmt/index.html#select-and-reorder-columns",
    "href": "slides/05-tables-tfrmt/index.html#select-and-reorder-columns",
    "title": "Tables in R using {tfrmt}",
    "section": "Select and reorder columns",
    "text": "Select and reorder columns\n\n\ntfrmt_demog &lt;- tfrmt_demog |&gt;\n  tfrmt(\n    col_plan = col_plan(\n      Placebo,\n      Xanomeline,\n      - starts_with(\"ord\")\n    )\n  )\n\nprint_to_gt(\n  tfrmt = tfrmt_demog, \n  .data = ard_demog\n)|&gt; \n   gt_style_slides()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPlaceboN = 86\nXanomelineN = 168\n\n\n\n\nAge (years)\n\n\n\n\n\n\n  Median\n76\n77\n\n\n  [Q1, Q3]\n69, 82\n71, 81\n\n\nAge Group\n\n\n\n\n\n\n  18-64\n14, 0.162790697674419\n19, 0.113095238095238\n\n\n  &gt;64\n72, 0.837209302325581\n149, 0.886904761904762\n\n\nSex\n\n\n\n\n\n\n  F\n53, 0.616279069767442\n90, 0.535714285714286\n\n\n  M\n33, 0.383720930232558\n78, 0.464285714285714"
  },
  {
    "objectID": "slides/05-tables-tfrmt/index.html#format-the-data-values---basic",
    "href": "slides/05-tables-tfrmt/index.html#format-the-data-values---basic",
    "title": "Tables in R using {tfrmt}",
    "section": "Format the data values - Basic",
    "text": "Format the data values - Basic\n\n\ntfrmt_demog &lt;- tfrmt_demog |&gt;\n  tfrmt(\n    body_plan = body_plan(\n      frmt_structure(\n        group_val = \".default\", \n        label_val = \".default\", \n        frmt(\"x.xx\"))\n    )\n  )\n\nprint_to_gt(\n  tfrmt = tfrmt_demog, \n  .data = ard_demog\n) |&gt; \n   gt_style_slides()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPlaceboN = 86\nXanomelineN = 168\n\n\n\n\nAge (years)\n\n\n\n\n\n\n  Median\n76.00\n77.00\n\n\n  [Q1, Q3]\n69.00, 82.00\n71.00, 81.00\n\n\nAge Group\n\n\n\n\n\n\n  18-64\n14.00, 0.16\n19.00, 0.11\n\n\n  &gt;64\n72.00, 0.84\n149.00, 0.89\n\n\nSex\n\n\n\n\n\n\n  F\n53.00, 0.62\n90.00, 0.54\n\n\n  M\n33.00, 0.38\n78.00, 0.46"
  },
  {
    "objectID": "slides/05-tables-tfrmt/index.html#format-the-data-values---advanced",
    "href": "slides/05-tables-tfrmt/index.html#format-the-data-values---advanced",
    "title": "Tables in R using {tfrmt}",
    "section": "Format the data values - Advanced",
    "text": "Format the data values - Advanced\n\n\ntfrmt_demog &lt;- tfrmt_demog |&gt;\n  tfrmt(\n    body_plan = body_plan(\n      frmt_structure(\n        group_val = \".default\", \n        label_val = \".default\",\n        frmt_combine(\"{n} ({p}%)\",\n                     n = frmt(\"xx\"),\n                     p = frmt(\"xx.x\", transform = ~ . *100)\n                     \n        )\n      )\n    )\n  )\n\nprint_to_gt(\n  tfrmt = tfrmt_demog, \n  .data = ard_demog\n  ) |&gt; \n   gt_style_slides()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPlaceboN = 86\nXanomelineN = 168\n\n\n\n\nAge (years)\n\n\n\n\n\n\n  Median\n76.00\n77.00\n\n\n  [Q1, Q3]\n69.00, 82.00\n71.00, 81.00\n\n\nAge Group\n\n\n\n\n\n\n  18-64\n14 (16.3%)\n19 (11.3%)\n\n\n  &gt;64\n72 (83.7%)\n149 (88.7%)\n\n\nSex\n\n\n\n\n\n\n  F\n53 (61.6%)\n90 (53.6%)\n\n\n  M\n33 (38.4%)\n78 (46.4%)"
  },
  {
    "objectID": "slides/05-tables-tfrmt/index.html#format-the-data-values---advanced-1",
    "href": "slides/05-tables-tfrmt/index.html#format-the-data-values---advanced-1",
    "title": "Tables in R using {tfrmt}",
    "section": "Format the data values - Advanced",
    "text": "Format the data values - Advanced\n\n\ntfrmt_demog &lt;- tfrmt_demog |&gt;\n  tfrmt(\n    body_plan = body_plan(\n      \n      frmt_structure(\n        group_val = \".default\", \n        label_val = \"Median\",\n        frmt(\"xx.x\")\n      ),\n      \n      frmt_structure(\n        group_val = \".default\",\n        label_val = \".default\",\n        frmt_combine(\n          expression = \"[{p25}, {p75}]\",                \n          p25 = frmt(\"xx.x\"),                     \n          p75 = frmt(\"xx.x\")                      \n        )\n      )\n      \n    )\n  )\n  \nprint_to_gt(\n  tfrmt = tfrmt_demog, \n  .data = ard_demog\n  ) |&gt; \n   gt_style_slides()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPlaceboN = 86\nXanomelineN = 168\n\n\n\n\nAge (years)\n\n\n\n\n\n\n  Median\n76.0\n77.0\n\n\n  [Q1, Q3]\n[69.0, 82.0]\n[71.0, 81.0]\n\n\nAge Group\n\n\n\n\n\n\n  18-64\n14 (16.3%)\n19 (11.3%)\n\n\n  &gt;64\n72 (83.7%)\n149 (88.7%)\n\n\nSex\n\n\n\n\n\n\n  F\n53 (61.6%)\n90 (53.6%)\n\n\n  M\n33 (38.4%)\n78 (46.4%)"
  },
  {
    "objectID": "slides/05-tables-tfrmt/index.html#align-the-columns",
    "href": "slides/05-tables-tfrmt/index.html#align-the-columns",
    "title": "Tables in R using {tfrmt}",
    "section": "Align the columns",
    "text": "Align the columns\n\n\ntfrmt_demog &lt;- tfrmt_demog |&gt;\n  tfrmt(\n    col_style_plan = col_style_plan(\n      col_style_structure(\n        col = c(\"Placebo\", \n                \"Xanomeline\"),\n        align = \" \"\n      )\n    )\n  )\n  \nprint_to_gt(\n  tfrmt = tfrmt_demog, \n  .data = ard_demog\n  ) |&gt; \n   gt_style_slides()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPlaceboN = 86\nXanomelineN = 168\n\n\n\n\nAge (years)\n\n\n\n\n\n\n  Median\n  76.0        \n  77.0        \n\n\n  [Q1, Q3]\n[69.0, 82.0]  \n[71.0, 81.0]  \n\n\nAge Group\n\n\n\n\n\n\n  18-64\n    14 (16.3%)\n    19 (11.3%)\n\n\n  &gt;64\n    72 (83.7%)\n   149 (88.7%)\n\n\nSex\n\n\n\n\n\n\n  F\n    53 (61.6%)\n    90 (53.6%)\n\n\n  M\n    33 (38.4%)\n    78 (46.4%)"
  },
  {
    "objectID": "slides/05-tables-tfrmt/index.html#add-footnotes",
    "href": "slides/05-tables-tfrmt/index.html#add-footnotes",
    "title": "Tables in R using {tfrmt}",
    "section": "Add footnotes",
    "text": "Add footnotes\n\n\ntfrmt_demog &lt;- tfrmt_demog |&gt;\n  tfrmt(\n    footnote_plan = footnote_plan(\n      footnote_structure(\n        \"Pooled High and Low Dose\",\n        column_val = \"Xanomeline\"\n      )\n    )\n  )\n  \nprint_to_gt(\n  tfrmt = tfrmt_demog, \n  .data = ard_demog\n  ) |&gt; \n   gt_style_slides()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPlaceboN = 86\nXanomelineN = 1681\n\n\n\n\nAge (years)\n\n\n\n\n\n\n  Median\n  76.0        \n  77.0        \n\n\n  [Q1, Q3]\n[69.0, 82.0]  \n[71.0, 81.0]  \n\n\nAge Group\n\n\n\n\n\n\n  18-64\n    14 (16.3%)\n    19 (11.3%)\n\n\n  &gt;64\n    72 (83.7%)\n   149 (88.7%)\n\n\nSex\n\n\n\n\n\n\n  F\n    53 (61.6%)\n    90 (53.6%)\n\n\n  M\n    33 (38.4%)\n    78 (46.4%)\n\n\n\n1 Pooled High and Low Dose"
  },
  {
    "objectID": "slides/05-tables-tfrmt/index.html#add-titles",
    "href": "slides/05-tables-tfrmt/index.html#add-titles",
    "title": "Tables in R using {tfrmt}",
    "section": "Add titles",
    "text": "Add titles\n\n\ntfrmt_demog &lt;- tfrmt_demog |&gt;\n  tfrmt(\n    title = \"Demographic Table\",\n    subtitle = \"Safety Population\"\n  )\n  \nprint_to_gt(\n  tfrmt = tfrmt_demog, \n  .data = ard_demog\n  ) |&gt; \n   gt_style_slides()\n\n\n\n\n\n\n\n\n\n\n\n\n\nDemographic Table\n\n\nSafety Population\n\n\n\nPlaceboN = 86\nXanomelineN = 1681\n\n\n\n\nAge (years)\n\n\n\n\n\n\n  Median\n  76.0        \n  77.0        \n\n\n  [Q1, Q3]\n[69.0, 82.0]  \n[71.0, 81.0]  \n\n\nAge Group\n\n\n\n\n\n\n  18-64\n    14 (16.3%)\n    19 (11.3%)\n\n\n  &gt;64\n    72 (83.7%)\n   149 (88.7%)\n\n\nSex\n\n\n\n\n\n\n  F\n    53 (61.6%)\n    90 (53.6%)\n\n\n  M\n    33 (38.4%)\n    78 (46.4%)\n\n\n\n1 Pooled High and Low Dose"
  },
  {
    "objectID": "slides/05-tables-tfrmt/index.html#other-features-include",
    "href": "slides/05-tables-tfrmt/index.html#other-features-include",
    "title": "Tables in R using {tfrmt}",
    "section": "Other features include:",
    "text": "Other features include:\n\nTransform values in the formatting\nRow group formatting\nPagination\nMulti-positional column alignment\nTemplating"
  },
  {
    "objectID": "slides/05-tables-tfrmt/index.html#cards-to-tfrmt",
    "href": "slides/05-tables-tfrmt/index.html#cards-to-tfrmt",
    "title": "Tables in R using {tfrmt}",
    "section": "cards to tfrmt",
    "text": "cards to tfrmt\n\nFirst, let’s “shuffle” the results into a tidy data frame:\n\n\n\n\nard_demog_00 |&gt; \n  tfrmt::shuffle_card(fill_overall = \"Overall\") \n\n# A tibble: 28 × 9\n   ARM2    AGE    AGEGR1 SEX   context stat_variable stat_name stat_label   stat\n   &lt;chr&gt;   &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;   &lt;chr&gt;         &lt;chr&gt;     &lt;chr&gt;       &lt;dbl&gt;\n 1 Placebo Overa… &lt;NA&gt;   &lt;NA&gt;  contin… AGE           median    Median     76    \n 2 Placebo Overa… &lt;NA&gt;   &lt;NA&gt;  contin… AGE           p25       Q1         69    \n 3 Placebo Overa… &lt;NA&gt;   &lt;NA&gt;  contin… AGE           p75       Q3         82    \n 4 Placebo &lt;NA&gt;   &gt;64    &lt;NA&gt;  catego… AGEGR1        n         n          72    \n 5 Placebo &lt;NA&gt;   &gt;64    &lt;NA&gt;  catego… AGEGR1        p         %           0.837\n 6 Placebo &lt;NA&gt;   18-64  &lt;NA&gt;  catego… AGEGR1        n         n          14    \n 7 Placebo &lt;NA&gt;   18-64  &lt;NA&gt;  catego… AGEGR1        p         %           0.163\n 8 Placebo &lt;NA&gt;   &lt;NA&gt;   F     catego… SEX           n         n          53    \n 9 Placebo &lt;NA&gt;   &lt;NA&gt;   F     catego… SEX           p         %           0.616\n10 Placebo &lt;NA&gt;   &lt;NA&gt;   M     catego… SEX           n         n          33    \n# ℹ 18 more rows\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDemographic Table\n\n\nSafety Population\n\n\n\nPlaceboN = xx\nXanomelineN = xx1\n\n\n\n\nAge (years)\n\n\n\n\n\n\n  Median\n  xx.x        \n  xx.x        \n\n\n  [Q1, Q3]\n[xx.x, xx.x]  \n[xx.x, xx.x]  \n\n\nAge Group\n\n\n\n\n\n\n  18-64\n    xx (xx.x%)\n    xx (xx.x%)\n\n\n  &gt;64\n    xx (xx.x%)\n    xx (xx.x%)\n\n\nSex\n\n\n\n\n\n\n  F\n    xx (xx.x%)\n    xx (xx.x%)\n\n\n  M\n    xx (xx.x%)\n    xx (xx.x%)\n\n\n\n1 Pooled High and Low Dose\n\n\n\n\n\n\n\n\n\n\n\nNotice that our variables have been spread wide and are no longer named group1, group1_level, etc.\nBut we want to get all of our row variables (AGE, AGEGR1, SEX) into a single, stacked column"
  },
  {
    "objectID": "slides/05-tables-tfrmt/index.html#cards-to-tfrmt-1",
    "href": "slides/05-tables-tfrmt/index.html#cards-to-tfrmt-1",
    "title": "Tables in R using {tfrmt}",
    "section": "cards to tfrmt",
    "text": "cards to tfrmt\n\n\nWe want to get all of our row variables (AGE, AGEGR1, SEX) into a single, stacked column\nWe can collapse them into a single column named variable_level\n\n\n\n\n\nard_demog_00 |&gt; \n  tfrmt::shuffle_card(fill_overall = \"Overall\") |&gt; \n  tfrmt::prep_combine_vars(c(\"AGE\",\"AGEGR1\",\"SEX\"))\n\n# A tibble: 28 × 7\n   ARM2    variable_level context     stat_variable stat_name stat_label   stat\n   &lt;chr&gt;   &lt;chr&gt;          &lt;chr&gt;       &lt;chr&gt;         &lt;chr&gt;     &lt;chr&gt;       &lt;dbl&gt;\n 1 Placebo Overall        continuous  AGE           median    Median     76    \n 2 Placebo Overall        continuous  AGE           p25       Q1         69    \n 3 Placebo Overall        continuous  AGE           p75       Q3         82    \n 4 Placebo &gt;64            categorical AGEGR1        n         n          72    \n 5 Placebo &gt;64            categorical AGEGR1        p         %           0.837\n 6 Placebo 18-64          categorical AGEGR1        n         n          14    \n 7 Placebo 18-64          categorical AGEGR1        p         %           0.163\n 8 Placebo F              categorical SEX           n         n          53    \n 9 Placebo F              categorical SEX           p         %           0.616\n10 Placebo M              categorical SEX           n         n          33    \n# ℹ 18 more rows\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDemographic Table\n\n\nSafety Population\n\n\n\nPlaceboN = xx\nXanomelineN = xx1\n\n\n\n\nAge (years)\n\n\n\n\n\n\n  Median\n  xx.x        \n  xx.x        \n\n\n  [Q1, Q3]\n[xx.x, xx.x]  \n[xx.x, xx.x]  \n\n\nAge Group\n\n\n\n\n\n\n  18-64\n    xx (xx.x%)\n    xx (xx.x%)\n\n\n  &gt;64\n    xx (xx.x%)\n    xx (xx.x%)\n\n\nSex\n\n\n\n\n\n\n  F\n    xx (xx.x%)\n    xx (xx.x%)\n\n\n  M\n    xx (xx.x%)\n    xx (xx.x%)\n\n\n\n1 Pooled High and Low Dose\n\n\n\n\n\n\n\n\n\n\n\nNotice the row labels in the mock. It’s a combination of variable_level and stat_label for categorical and continuous variables, respectively"
  },
  {
    "objectID": "slides/05-tables-tfrmt/index.html#cards-to-tfrmt-2",
    "href": "slides/05-tables-tfrmt/index.html#cards-to-tfrmt-2",
    "title": "Tables in R using {tfrmt}",
    "section": "cards to tfrmt",
    "text": "cards to tfrmt\n\nNext, we create a row label (“label” column) for the table that is either the category (i.e. variable_level) for categorical variables, or the stat name for continuous variables.\n\n\n\n\nard_demog_00 |&gt; \n  tfrmt::shuffle_card(fill_overall = \"Overall\") |&gt; \n  tfrmt::prep_combine_vars(c(\"AGE\",\"AGEGR1\",\"SEX\")) |&gt; \n  tfrmt::prep_label()\n\n# A tibble: 28 × 8\n   ARM2   variable_level context stat_variable stat_name stat_label   stat label\n   &lt;chr&gt;  &lt;chr&gt;          &lt;chr&gt;   &lt;chr&gt;         &lt;chr&gt;     &lt;chr&gt;       &lt;dbl&gt; &lt;chr&gt;\n 1 Place… Overall        contin… AGE           median    Median     76     Medi…\n 2 Place… Overall        contin… AGE           p25       Q1         69     Q1   \n 3 Place… Overall        contin… AGE           p75       Q3         82     Q3   \n 4 Place… &gt;64            catego… AGEGR1        n         n          72     &gt;64  \n 5 Place… &gt;64            catego… AGEGR1        p         %           0.837 &gt;64  \n 6 Place… 18-64          catego… AGEGR1        n         n          14     18-64\n 7 Place… 18-64          catego… AGEGR1        p         %           0.163 18-64\n 8 Place… F              catego… SEX           n         n          53     F    \n 9 Place… F              catego… SEX           p         %           0.616 F    \n10 Place… M              catego… SEX           n         n          33     M    \n# ℹ 18 more rows\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDemographic Table\n\n\nSafety Population\n\n\n\nPlaceboN = xx\nXanomelineN = xx1\n\n\n\n\nAge (years)\n\n\n\n\n\n\n  Median\n  xx.x        \n  xx.x        \n\n\n  [Q1, Q3]\n[xx.x, xx.x]  \n[xx.x, xx.x]  \n\n\nAge Group\n\n\n\n\n\n\n  18-64\n    xx (xx.x%)\n    xx (xx.x%)\n\n\n  &gt;64\n    xx (xx.x%)\n    xx (xx.x%)\n\n\nSex\n\n\n\n\n\n\n  F\n    xx (xx.x%)\n    xx (xx.x%)\n\n\n  M\n    xx (xx.x%)\n    xx (xx.x%)\n\n\n\n1 Pooled High and Low Dose"
  },
  {
    "objectID": "slides/05-tables-tfrmt/index.html#cards-to-tfrmt-3",
    "href": "slides/05-tables-tfrmt/index.html#cards-to-tfrmt-3",
    "title": "Tables in R using {tfrmt}",
    "section": "cards to tfrmt",
    "text": "cards to tfrmt\n\nTake a look at our “big N” (i.e. population counts) rows:\n\n:::\n\n\n# A tibble: 6 × 8\n  ARM2   variable_level context stat_variable stat_name stat_label    stat label\n  &lt;chr&gt;  &lt;chr&gt;          &lt;chr&gt;   &lt;chr&gt;         &lt;chr&gt;     &lt;chr&gt;        &lt;dbl&gt; &lt;chr&gt;\n1 Place… &lt;NA&gt;           tabula… ARM2          n         n           86     &lt;NA&gt; \n2 Place… &lt;NA&gt;           tabula… ARM2          N         N          254     &lt;NA&gt; \n3 Place… &lt;NA&gt;           tabula… ARM2          p         %            0.339 &lt;NA&gt; \n4 Xanom… &lt;NA&gt;           tabula… ARM2          n         n          168     &lt;NA&gt; \n5 Xanom… &lt;NA&gt;           tabula… ARM2          N         N          254     &lt;NA&gt; \n6 Xanom… &lt;NA&gt;           tabula… ARM2          p         %            0.661 &lt;NA&gt; \n\n\n\n\nFirst, we only need the counts themselves (‘n’), not denominators or percentages (‘N’, ‘%’) to display in the column headers.\nSecond, we need to give these a unique stat name to distinguish them for the big_n_structure in {tfrmt}."
  },
  {
    "objectID": "slides/05-tables-tfrmt/index.html#cards-to-tfrmt-4",
    "href": "slides/05-tables-tfrmt/index.html#cards-to-tfrmt-4",
    "title": "Tables in R using {tfrmt}",
    "section": "cards to tfrmt",
    "text": "cards to tfrmt\n\n\nFirst, we only need the counts themselves (‘n’), not denominators or percentages (‘N’, ‘%’).\nSecond, we need to give these a unique stat name to distinguish them for the big_n_structure in {tfrmt}.\n\n\n\n\n\nard_demog_display &lt;- ard_demog_00 |&gt; \n  tfrmt::shuffle_card(fill_overall = \"Overall\") |&gt; \n  tfrmt::prep_combine_vars(c(\"AGE\",\"AGEGR1\",\"SEX\")) |&gt; \n  tfrmt::prep_label() |&gt; \n  tfrmt::prep_big_n(vars = \"ARM2\")\n\nard_demog_display |&gt; \n  dplyr::filter(stat_variable %in% c(\"ARM2\", \"..ard_total_n..\"))\n\n# A tibble: 2 × 8\n  ARM2     variable_level context stat_variable stat_name stat_label  stat label\n  &lt;chr&gt;    &lt;chr&gt;          &lt;chr&gt;   &lt;chr&gt;         &lt;chr&gt;     &lt;chr&gt;      &lt;dbl&gt; &lt;chr&gt;\n1 Placebo  &lt;NA&gt;           tabula… ARM2          bigN      n             86 &lt;NA&gt; \n2 Xanomel… &lt;NA&gt;           tabula… ARM2          bigN      n            168 &lt;NA&gt; \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDemographic Table\n\n\nSafety Population\n\n\n\nPlaceboN = xx\nXanomelineN = xx1\n\n\n\n\nAge (years)\n\n\n\n\n\n\n  Median\n  xx.x        \n  xx.x        \n\n\n  [Q1, Q3]\n[xx.x, xx.x]  \n[xx.x, xx.x]  \n\n\nAge Group\n\n\n\n\n\n\n  18-64\n    xx (xx.x%)\n    xx (xx.x%)\n\n\n  &gt;64\n    xx (xx.x%)\n    xx (xx.x%)\n\n\nSex\n\n\n\n\n\n\n  F\n    xx (xx.x%)\n    xx (xx.x%)\n\n\n  M\n    xx (xx.x%)\n    xx (xx.x%)\n\n\n\n1 Pooled High and Low Dose"
  },
  {
    "objectID": "slides/05-tables-tfrmt/index.html#cards-to-tfrmt-5",
    "href": "slides/05-tables-tfrmt/index.html#cards-to-tfrmt-5",
    "title": "Tables in R using {tfrmt}",
    "section": "cards to tfrmt",
    "text": "cards to tfrmt\n\nFinally, we can do any other necessary manipulations like relabeling or adding order variables before passing to tfrmt().\n\n\n\nard_demog_display &lt;- ard_demog_display |&gt; \n  \n   # give Q1/Q3 the same row label so they appear on the same row\n  dplyr::mutate(label = dplyr::case_when(\n    stat_name %in% c(\"p25\",\"p75\") ~ \"[Q1, Q3]\",\n    TRUE ~ label\n  ),\n  \n  # make variable names look nice\n  stat_variable = dplyr::case_match(\n    stat_variable,\n    \"AGE\" ~ \"Age (years)\",\n    \"AGEGR1\" ~ \"Age Group\",\n    \"SEX\" ~ \"Sex\"\n  ) ) |&gt; \n  \n  # remove unnecessary variables\n  dplyr::select(-c(context, stat_label, variable_level)) |&gt;\n  \n  # create order variables\n  dplyr::mutate(ord1 = as.numeric(\n    factor(stat_variable, \n           levels = c(\"Age (years)\", \"Age Group\", \"Sex\"))),\n    ord2 = as.numeric(\n      factor(label, levels = c(\"18-64\",\"&gt;64\"))))\n\nprint_to_gt(tfrmt_demog, ard_demog_display)|&gt; \n  gt_style_slides()|&gt; \n  gt::tab_options(\n    table.font.size = 15\n  )\n\n\n\n\n\n\n\n\n\n\n\n\n\nDemographic Table\n\n\nSafety Population\n\n\n\nPlaceboN = 86\nXanomelineN = 1681\n\n\n\n\nAge (years)\n\n\n\n\n\n\n  Median\n  76.0        \n  77.0        \n\n\n  [Q1, Q3]\n[69.0, 82.0]  \n[71.0, 81.0]  \n\n\nAge Group\n\n\n\n\n\n\n  18-64\n    14 (16.3%)\n    19 (11.3%)\n\n\n  &gt;64\n    72 (83.7%)\n   149 (88.7%)\n\n\nSex\n\n\n\n\n\n\n  F\n    53 (61.6%)\n    90 (53.6%)\n\n\n  M\n    33 (38.4%)\n    78 (46.4%)\n\n\n\n1 Pooled High and Low Dose"
  },
  {
    "objectID": "slides/05-tables-tfrmt/index.html#exercise-together",
    "href": "slides/05-tables-tfrmt/index.html#exercise-together",
    "title": "Tables in R using {tfrmt}",
    "section": "Exercise 🏃‍➡️ (Together!)",
    "text": "Exercise 🏃‍➡️ (Together!)\n\nNavigate to Posit Cloud script exercises/05-tables-tfrmt.R\nCreate and modify the AE table as described.\nAdd the “completed” sticky note to your laptop when complete.\n\n\n\n\n−+\n10:00"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#acknowledgements",
    "href": "slides/06-tables-gtsummary/index.html#acknowledgements",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "Acknowledgements",
    "text": "Acknowledgements\n\n\n\n\nThis work is licensed under a Creative Commons Attribution-ShareAlike 4.0 International License (CC BY-SA4.0)."
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#daniel-d.-sjoberg",
    "href": "slides/06-tables-gtsummary/index.html#daniel-d.-sjoberg",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "Daniel D. Sjoberg",
    "text": "Daniel D. Sjoberg\n\n\n danieldsjoberg.com\n ddsjoberg.bsky.social\n linkedin.com/in/ddsjoberg\n github.com/ddsjoberg"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#questions",
    "href": "slides/06-tables-gtsummary/index.html#questions",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "Questions",
    "text": "Questions\n\n\n Please ask questions at any time!"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#section",
    "href": "slides/06-tables-gtsummary/index.html#section",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "",
    "text": "How it started\n\n\nBegan to address reproducible issues while working in academia\nGoal was to build a package to summarize study results with code that was both simple and customizable\nFirst release in May 2019\n\n\n\nHow it’s going\n\n\nThe stats\n\n1,600,000 installations from CRAN\n1,100 GitHub stars\n1,000 citations in peer-reviewed articles\n350 contributors\n50 code contributors\n\nWon the 2021 American Statistical Association (ASA) Innovation in Programming Award\nWon the 2024 Posit Pharma Table Contest"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#gtsummary-overview",
    "href": "slides/06-tables-gtsummary/index.html#gtsummary-overview",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "{gtsummary} overview",
    "text": "{gtsummary} overview\n\n\n\nCreate tabular summaries with sensible defaults but highly customizable\nTypes of summaries:\n\nDemographic- or “Table 1”-types\nCross-tabulation\nRegression models\nSurvival data\nSurvey data\nCustom tables\n\n\n\n\nReport statistics from {gtsummary} tables inline in R Markdown\nStack and/or merge any table type\nUse themes to standardize across tables\nChoose from different print engines"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#gtsummary-overview-1",
    "href": "slides/06-tables-gtsummary/index.html#gtsummary-overview-1",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "{gtsummary} overview",
    "text": "{gtsummary} overview\nFor our workshop, we will focus on the following summary types as well as themes and print engines.\n\ntbl_summary()\ntbl_hierarchical()\n\n\nOther functions helpful functions we’re not covering:\n\n\ntbl_hierarchical_count(): similar to tbl_hierarchical() for counts instead of rates\ntbl_cross(): cross tabulations\ntbl_continuous(): summarizing continuous variables by 2 categorical variables\ntbl_wide_summary(): similar to tbl_summary() but statistics are presented in separate columns\nmany more!"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#pharmaverseadam-data-for-examples",
    "href": "slides/06-tables-gtsummary/index.html#pharmaverseadam-data-for-examples",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "{pharmaverseadam} Data for Examples",
    "text": "{pharmaverseadam} Data for Examples\nReduced sizes of adsl, adse, adlb. Created ad_onco with oncologic outcomes.\n\nlibrary(tidyverse)\n\nadsl &lt;- pharmaverseadam::adsl |&gt; \n  filter(SAFFL == \"Y\") |&gt; \n  mutate(ARM2 = word(ARM), FEMALE = SEX == \"F\") |&gt; \n  labelled::set_variable_labels(FEMALE = \"Female\")\n\nadae &lt;- pharmaverseadam::adae |&gt; \n  filter(\n    USUBJID %in% adsl$USUBJID,\n    AESOC %in% c(\"CARDIAC DISORDERS\", \"EYE DISORDERS\"),\n    AEDECOD %in% c(\"ATRIAL FLUTTER\", \"MYOCARDIAL INFARCTION\", \"EYE ALLERGY\", \"EYE SWELLING\")\n  ) |&gt; \n  mutate(ARM2 = word(ARM))\n\nadlb &lt;- pharmaverseadam::adlb |&gt; \n  filter(\n    USUBJID %in% adsl$USUBJID, \n    PARAM %in% c(\"Albumin (g/L)\", \"Bilirubin (umol/L)\" , \"Leukocytes (10^9/L)\"),\n    AVISIT %in% c(\"Baseline\", \"Week 12\", \"Week 24\")\n  ) |&gt; \n  mutate(ARM2 = word(ARM))\n\n# Construct an oncology outcomes dataset\nad_onco &lt;-\n  list(\n    # Best Overall Response\n    pharmaverseadam::adrs_onco |&gt; \n      filter(PARAMCD == \"CBOR\") |&gt; \n      select(USUBJID, RECIST_CBOR = AVALC) |&gt; \n      labelled::set_variable_labels(RECIST_CBOR = \"Best Overall Response\"),\n    # Tumor Size\n    pharmaverseadam::adtr_onco |&gt; \n      filter(PARAM == \"Target Lesions Sum of Diameters by Investigator\") |&gt; \n      select(USUBJID, TUMOR_SIZE = AVAL) |&gt; \n      labelled::set_variable_labels(TUMOR_SIZE = \"Tumor Size, mm\"),\n    # Progression-free Survival\n    pharmaverseadam::adtte_onco |&gt; \n      filter(PARAMCD == \"PFS\") |&gt; \n      select(USUBJID, PFS_CNSR = CNSR, PFS_TIME = AVAL) |&gt; \n      mutate(PFS_EVENT = abs(PFS_CNSR - 1)) |&gt; \n      labelled::set_variable_labels(\n        PFS_CNSR = \"PFS, Censor\",\n        PFS_EVENT = \"Progression\",\n        PFS_TIME = \"PFS Followup Time, days\"\n      )\n  ) |&gt; \n  reduce(full_join, by = \"USUBJID\") |&gt; \n  inner_join(adsl[c(\"USUBJID\", \"AGE\", \"ETHNIC\", \"ARM\")], by = \"USUBJID\") |&gt; \n  mutate(ARM2 = word(ARM))"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#basic-tbl_summary",
    "href": "slides/06-tables-gtsummary/index.html#basic-tbl_summary",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "Basic tbl_summary()",
    "text": "Basic tbl_summary()\n\n\n\nlibrary(gtsummary)\n\nadsl |&gt; \n  tbl_summary(\n    include = c(AGE, ETHNIC, FEMALE)\n  )\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nN = 2541\n\n\n\n\nAge\n77 (70, 81)\n\n\nEthnicity\n\n\n\n\n    HISPANIC OR LATINO\n12 (4.7%)\n\n\n    NOT HISPANIC OR LATINO\n242 (95%)\n\n\nFemale\n143 (56%)\n\n\n\n1 Median (Q1, Q3); n (%)\n\n\n\n\n\n\n\n\n\n\nFour types of summaries: continuous, continuous2, categorical, and dichotomous\nStatistics are median (IQR) for continuous, n (%) for categorical/dichotomous\nVariables coded 0/1, TRUE/FALSE, Yes/No treated as dichotomous by default\nLabel attributes are printed automatically"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#customize-tbl_summary-output",
    "href": "slides/06-tables-gtsummary/index.html#customize-tbl_summary-output",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "Customize tbl_summary() output",
    "text": "Customize tbl_summary() output\n\n\nadsl |&gt; \n  tbl_summary(\n    include = c(AGE, ETHNIC, FEMALE),\n    by = ARM2,\n  )\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nPlacebo\nN = 861\nXanomeline\nN = 1681\n\n\n\n\nAge\n76 (69, 82)\n77 (71, 81)\n\n\nEthnicity\n\n\n\n\n\n\n    HISPANIC OR LATINO\n3 (3.5%)\n9 (5.4%)\n\n\n    NOT HISPANIC OR LATINO\n83 (97%)\n159 (95%)\n\n\nFemale\n53 (62%)\n90 (54%)\n\n\n\n1 Median (Q1, Q3); n (%)\n\n\n\n\n\n\n\n\n\n\n\n\nby: specify a column variable for cross-tabulation"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#customize-tbl_summary-output-1",
    "href": "slides/06-tables-gtsummary/index.html#customize-tbl_summary-output-1",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "Customize tbl_summary() output",
    "text": "Customize tbl_summary() output\n\n\nadsl |&gt; \n  tbl_summary(\n    include = c(AGE, ETHNIC, FEMALE),\n    by = ARM2,\n    type = AGE ~ \"continuous2\",\n  )\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nPlacebo\nN = 861\nXanomeline\nN = 1681\n\n\n\n\nAge\n\n\n\n\n\n\n    Median (Q1, Q3)\n76 (69, 82)\n77 (71, 81)\n\n\nEthnicity\n\n\n\n\n\n\n    HISPANIC OR LATINO\n3 (3.5%)\n9 (5.4%)\n\n\n    NOT HISPANIC OR LATINO\n83 (97%)\n159 (95%)\n\n\nFemale\n53 (62%)\n90 (54%)\n\n\n\n1 n (%)\n\n\n\n\n\n\n\n\n\n\n\n\nby: specify a column variable for cross-tabulation\ntype: specify the summary type"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#customize-tbl_summary-output-2",
    "href": "slides/06-tables-gtsummary/index.html#customize-tbl_summary-output-2",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "Customize tbl_summary() output",
    "text": "Customize tbl_summary() output\n\n\nadsl |&gt; \n  tbl_summary(\n    include = c(AGE, ETHNIC, FEMALE),\n    by = ARM2,\n    type = AGE ~ \"continuous2\",\n    statistic = \n      list(\n        AGE ~ c(\"{mean} ({sd})\", \n                \"{min}, {max}\"), \n        FEMALE ~ \"{n} / {N} ({p}%)\"\n      ),\n  )\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nPlacebo\nN = 861\nXanomeline\nN = 1681\n\n\n\n\nAge\n\n\n\n\n\n\n    Mean (SD)\n75 (9)\n75 (8)\n\n\n    Min, Max\n52, 89\n51, 88\n\n\nEthnicity\n\n\n\n\n\n\n    HISPANIC OR LATINO\n3 (3.5%)\n9 (5.4%)\n\n\n    NOT HISPANIC OR LATINO\n83 (97%)\n159 (95%)\n\n\nFemale\n53 / 86 (62%)\n90 / 168 (54%)\n\n\n\n1 n (%); n / N (%)\n\n\n\n\n\n\n\n\n\n\n\n\nby: specify a column variable for cross-tabulation\ntype: specify the summary type\nstatistic: customize the reported statistics"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#customize-tbl_summary-output-3",
    "href": "slides/06-tables-gtsummary/index.html#customize-tbl_summary-output-3",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "Customize tbl_summary() output",
    "text": "Customize tbl_summary() output\n\n\nadsl |&gt; \n  tbl_summary(\n    include = c(AGE, ETHNIC, FEMALE),\n    by = ARM2,\n    type = AGE ~ \"continuous2\",\n    statistic = \n      list(\n        AGE ~ c(\"{mean} ({sd})\", \n                \"{min}, {max}\"), \n        FEMALE ~ \"{n} / {N} ({p}%)\"\n      ),\n    label = \n      AGE ~ \"Age, years\",\n  )\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nPlacebo\nN = 861\nXanomeline\nN = 1681\n\n\n\n\nAge, years\n\n\n\n\n\n\n    Mean (SD)\n75 (9)\n75 (8)\n\n\n    Min, Max\n52, 89\n51, 88\n\n\nEthnicity\n\n\n\n\n\n\n    HISPANIC OR LATINO\n3 (3.5%)\n9 (5.4%)\n\n\n    NOT HISPANIC OR LATINO\n83 (97%)\n159 (95%)\n\n\nFemale\n53 / 86 (62%)\n90 / 168 (54%)\n\n\n\n1 n (%); n / N (%)\n\n\n\n\n\n\n\n\n\n\n\n\nby: specify a column variable for cross-tabulation\ntype: specify the summary type\nstatistic: customize the reported statistics\n\n\n\nlabel: change or customize variable labels"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#customize-tbl_summary-output-4",
    "href": "slides/06-tables-gtsummary/index.html#customize-tbl_summary-output-4",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "Customize tbl_summary() output",
    "text": "Customize tbl_summary() output\n\n\nadsl |&gt; \n  tbl_summary(\n    include = c(AGE, ETHNIC, FEMALE),\n    by = ARM2,\n    type = AGE ~ \"continuous2\",\n    statistic = \n      list(\n        AGE ~ c(\"{mean} ({sd})\", \n                \"{min}, {max}\"), \n        FEMALE ~ \"{n} / {N} ({p}%)\"\n      ),\n    label = \n      AGE ~ \"Age, years\",\n    digits = AGE ~ list(sd = 1) # report SD(age) to one decimal place\n  )\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nPlacebo\nN = 861\nXanomeline\nN = 1681\n\n\n\n\nAge, years\n\n\n\n\n\n\n    Mean (SD)\n75 (8.6)\n75 (8.1)\n\n\n    Min, Max\n52, 89\n51, 88\n\n\nEthnicity\n\n\n\n\n\n\n    HISPANIC OR LATINO\n3 (3.5%)\n9 (5.4%)\n\n\n    NOT HISPANIC OR LATINO\n83 (97%)\n159 (95%)\n\n\nFemale\n53 / 86 (62%)\n90 / 168 (54%)\n\n\n\n1 n (%); n / N (%)\n\n\n\n\n\n\n\n\n\n\n\n\nby: specify a column variable for cross-tabulation\ntype: specify the summary type\nstatistic: customize the reported statistics\n\n\n\nlabel: change or customize variable labels\ndigits: specify the number of decimal places for rounding"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#gtsummary-formulas",
    "href": "slides/06-tables-gtsummary/index.html#gtsummary-formulas",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "{gtsummary} + formulas",
    "text": "{gtsummary} + formulas\nThis syntax is also used in {cards}, {cardx}, {crane}, and {gt}.\n\n\n\nNamed list are OK too! label = list(age = \"Patient Age\")"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#section-1",
    "href": "slides/06-tables-gtsummary/index.html#section-1",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "",
    "text": "{gtsummary} selectors\n\nUse the following helpers to select groups of variables: all_continuous(), all_categorical()\nUse all_stat_cols() to select the summary statistic columns\n\nAdd-on functions in {gtsummary}\ntbl_summary() objects can also be updated using related functions.\n\nadd_*() add additional column of statistics or information, e.g. p-values, q-values, overall statistics, treatment differences, N obs., and more\nmodify_*() modify table headers, spanning headers, footnotes, and more"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#update-tbl_summary-with-add_",
    "href": "slides/06-tables-gtsummary/index.html#update-tbl_summary-with-add_",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "Update tbl_summary() with add_*()",
    "text": "Update tbl_summary() with add_*()\n\n\nadsl |&gt;\n  tbl_summary(\n    by = ARM2,\n    include = c(AGE, ETHNIC, FEMALE)\n  ) |&gt; \n  add_overall(last = TRUE)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nPlacebo\nN = 861\nXanomeline\nN = 1681\nOverall\nN = 2541\n\n\n\n\nAge\n76 (69, 82)\n77 (71, 81)\n77 (70, 81)\n\n\nEthnicity\n\n\n\n\n\n\n\n\n    HISPANIC OR LATINO\n3 (3.5%)\n9 (5.4%)\n12 (4.7%)\n\n\n    NOT HISPANIC OR LATINO\n83 (97%)\n159 (95%)\n242 (95%)\n\n\nFemale\n53 (62%)\n90 (54%)\n143 (56%)\n\n\n\n1 Median (Q1, Q3); n (%)\n\n\n\n\n\n\n\n\n\nadd_overall(): adds a column of overall statistics"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#update-tbl_summary-with-add_-1",
    "href": "slides/06-tables-gtsummary/index.html#update-tbl_summary-with-add_-1",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "Update tbl_summary() with add_*()",
    "text": "Update tbl_summary() with add_*()\n\n\nad_onco |&gt;\n  tbl_summary(\n    by = ARM2, \n    include = c(TUMOR_SIZE, PFS_EVENT),\n    missing = \"no\"\n  ) |&gt; \n  add_n() |&gt; \n  add_p(\n    pvalue_fun = \\(x) round(x, 2)\n  )\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nN\nPlacebo\nN = 961\nXanomeline\nN = 1771\np-value2\n\n\n\n\nTumor Size, mm\n25\n78 (38, 96)\n67 (26, 92)\n0.66\n\n\nProgression\n273\n6 (6.3%)\n9 (5.1%)\n0.69\n\n\n\n1 Median (Q1, Q3); n (%)\n\n\n2 Wilcoxon rank sum test; Pearson’s Chi-squared test\n\n\n\n\n\n\n\n\n\nadd_n(): adds a column non-missing counts\nadd_p(): adds a column of p-values"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#update-tbl_summary-with-modify_",
    "href": "slides/06-tables-gtsummary/index.html#update-tbl_summary-with-modify_",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "Update tbl_summary() with modify_*()",
    "text": "Update tbl_summary() with modify_*()\n\n\ntbl &lt;-\n  adsl |&gt; \n  tbl_summary(by = ARM2, include = c(\"AGE\", \"ETHNIC\", \"FEMALE\")) |&gt;\n  modify_header(\n    stat_1 ~ \"**Group A**\",\n    stat_2 ~ \"**Group B**\"\n  ) |&gt; \n  modify_spanning_header(\n    all_stat_cols() ~ \"**Drug**\") |&gt; \n  modify_footnote(\n    all_stat_cols() ~ \n      paste(\"median (IQR) for continuous;\",\n            \"n (%) for categorical\")\n  )\ntbl\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\n\nDrug\n\n\n\nGroup A1\nGroup B1\n\n\n\n\nAge\n76 (69, 82)\n77 (71, 81)\n\n\nEthnicity\n\n\n\n\n\n\n    HISPANIC OR LATINO\n3 (3.5%)\n9 (5.4%)\n\n\n    NOT HISPANIC OR LATINO\n83 (97%)\n159 (95%)\n\n\nFemale\n53 (62%)\n90 (54%)\n\n\n\n1 median (IQR) for continuous; n (%) for categorical\n\n\n\n\n\n\n\n\n\nUse show_header_names() to see the internal header names available for use in modify_header()"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#column-names",
    "href": "slides/06-tables-gtsummary/index.html#column-names",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "Column names",
    "text": "Column names\n\nshow_header_names(tbl)\n\nColumn Name   Header                 level*             N*          n*          p*             \nlabel         \"**Characteristic**\"                      254 &lt;int&gt;                              \nstat_1        \"**Group A**\"             Placebo &lt;chr&gt;   254 &lt;int&gt;    86 &lt;int&gt;   0.339 &lt;dbl&gt;    \nstat_2        \"**Group B**\"          Xanomeline &lt;chr&gt;   254 &lt;int&gt;   168 &lt;int&gt;   0.661 &lt;dbl&gt;    \n\n\n* These values may be dynamically placed into headers (and other locations).\nℹ Review the `modify_header()` (`?gtsummary::modify_header()`) help for examples.\n\n\n\n\nall_stat_cols() selects columns \"stat_1\" and \"stat_2\""
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#update-tbl_summary-with-add_-2",
    "href": "slides/06-tables-gtsummary/index.html#update-tbl_summary-with-add_-2",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "Update tbl_summary() with add_*()",
    "text": "Update tbl_summary() with add_*()\n\nad_onco |&gt;\n  tbl_summary(\n    by = ARM2,\n    include = c(TUMOR_SIZE, PFS_EVENT),\n    statistic = list(TUMOR_SIZE = \"{mean} ({sd})\",\n                     PFS_EVENT = \"{p}%\"),\n    missing = \"no\"\n  ) |&gt; \n  add_difference()\n\n\n\n\n  \n    \n      Characteristic\n      Placebo\nN = 961\n      Xanomeline\nN = 1771\n      Difference2\n      95% CI2\n      p-value2\n    \n  \n  \n    Tumor Size, mm\n67 (37)\n59 (39)\n7.6\n-24, 39\n0.6\n    Progression\n6.3%\n5.1%\n1.2%\n-5.5%, 7.8%\n&gt;0.9\n  \n  \n    \n      Abbreviation: CI = Confidence Interval\n    \n  \n  \n    \n      1 Mean (SD); %\n    \n    \n      2 Welch Two Sample t-test; 2-sample test for equality of proportions with continuity correction\n    \n  \n\n\n\n\n\nadd_difference(): mean and rate differences between two groups. Can also be adjusted differences"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#update-tbl_summary-with-add_-3",
    "href": "slides/06-tables-gtsummary/index.html#update-tbl_summary-with-add_-3",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "Update tbl_summary() with add_*()",
    "text": "Update tbl_summary() with add_*()\n\n\n\nadsl |&gt;\n  tbl_summary(\n    by = ARM2,\n    include = c(AGE, ETHNIC, FEMALE)\n  ) |&gt; \n  add_stat(...)\n\n\n\nCustomize statistics presented with add_stat()\nAdded statistics can be placed on the label or the level rows\nAdded statistics may be a single column or multiple"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#add-on-functions-in-gtsummary-1",
    "href": "slides/06-tables-gtsummary/index.html#add-on-functions-in-gtsummary-1",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "Add-on functions in {gtsummary}",
    "text": "Add-on functions in {gtsummary}\nAnd many more!\nSee the documentation at http://www.danieldsjoberg.com/gtsummary/reference/index.html\nAnd a detailed tbl_summary() vignette at http://www.danieldsjoberg.com/gtsummary/articles/tbl_summary.html"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#gtsummary-exercise",
    "href": "slides/06-tables-gtsummary/index.html#gtsummary-exercise",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "{gtsummary} Exercise",
    "text": "{gtsummary} Exercise\n\nNavigate to Posit Cloud script 06-tables-gtsummary.R.\nCreate the table outlined in the script.\nAdd the “completed” sticky note to your laptop when complete.\n\n\n\n\n−+\n07:00"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#gtsummary-exercise-1",
    "href": "slides/06-tables-gtsummary/index.html#gtsummary-exercise-1",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "{gtsummary} Exercise",
    "text": "{gtsummary} Exercise\n\ntbl &lt;-\n  df_gtsummary_exercise |&gt;\n  # ensure the age groups print in the correct order\n  mutate(AGEGR1 = factor(AGEGR1, levels = c(\"18-64\", \"&gt;64\"))) |&gt;\n  tbl_summary(\n    by = TRT01A,\n    include = c(AGE, AGEGR1, SEX, RACE, ETHNIC, BMI, HEIGHT, WEIGHT), \n    type = all_continuous() ~ \"continuous2\", # all continuous variables should be summarized as multi-row\n    statistic = all_continuous() ~ c(\"{mean} ({sd})\", \"{median} ({p25}, {p75})\", \"{min}, {max}\"), # change the statistics for all continuous variables\n    label = list(AGEGR1 = \"Age Group\"), # add a label for AGEGR1\n  ) |&gt;\n  # add a header above the 'Xanomeline' treatments. We used `show_header_names()` to know the column names\n  modify_spanning_header(c(stat_2, stat_3) ~ \"**Active Treatment**\")\n\ntbl"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#gtsummary-exercise-1-output",
    "href": "slides/06-tables-gtsummary/index.html#gtsummary-exercise-1-output",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "{gtsummary} Exercise",
    "text": "{gtsummary} Exercise\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nPlacebo\nN = 861\n\nActive Treatment\n\n\n\nXanomeline High Dose\nN = 721\nXanomeline Low Dose\nN = 961\n\n\n\n\nAge\n\n\n\n\n\n\n\n\n    Mean (SD)\n75 (9)\n74 (8)\n76 (8)\n\n\n    Median (Q1, Q3)\n76 (69, 82)\n76 (70, 79)\n78 (71, 82)\n\n\n    Min, Max\n52, 89\n56, 88\n51, 88\n\n\nAge Group\n\n\n\n\n\n\n\n\n    18-64\n14 (16%)\n11 (15%)\n8 (8.3%)\n\n\n    &gt;64\n72 (84%)\n61 (85%)\n88 (92%)\n\n\nSex\n\n\n\n\n\n\n\n\n    F\n53 (62%)\n35 (49%)\n55 (57%)\n\n\n    M\n33 (38%)\n37 (51%)\n41 (43%)\n\n\nRace\n\n\n\n\n\n\n\n\n    AMERICAN INDIAN OR ALASKA NATIVE\n0 (0%)\n1 (1.4%)\n0 (0%)\n\n\n    BLACK OR AFRICAN AMERICAN\n8 (9.3%)\n9 (13%)\n6 (6.3%)\n\n\n    WHITE\n78 (91%)\n62 (86%)\n90 (94%)\n\n\nEthnicity\n\n\n\n\n\n\n\n\n    HISPANIC OR LATINO\n3 (3.5%)\n3 (4.2%)\n6 (6.3%)\n\n\n    NOT HISPANIC OR LATINO\n83 (97%)\n69 (96%)\n90 (94%)\n\n\nBMI\n\n\n\n\n\n\n\n\n    Mean (SD)\n23.6 (3.6)\n25.3 (3.7)\n25.1 (4.4)\n\n\n    Median (Q1, Q3)\n23.2 (21.0, 25.8)\n24.6 (23.0, 27.4)\n24.6 (22.1, 28.2)\n\n\n    Min, Max\n15.7, 34.0\n19.0, 35.5\n15.0, 39.8\n\n\nHeight, cm\n\n\n\n\n\n\n\n\n    Mean (SD)\n163 (12)\n166 (10)\n164 (10)\n\n\n    Median (Q1, Q3)\n163 (154, 171)\n165 (157, 173)\n163 (157, 170)\n\n\n    Min, Max\n137, 185\n146, 191\n136, 196\n\n\nWeight, kg\n\n\n\n\n\n\n\n\n    Mean (SD)\n63 (13)\n70 (14)\n68 (15)\n\n\n    Median (Q1, Q3)\n60 (54, 74)\n69 (57, 80)\n67 (56, 78)\n\n\n    Min, Max\n34, 85\n47, 107\n41, 105\n\n\n\n1 n (%)"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#adverse-event-reporting-and-friends",
    "href": "slides/06-tables-gtsummary/index.html#adverse-event-reporting-and-friends",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "Adverse Event Reporting (and friends)",
    "text": "Adverse Event Reporting (and friends)\nUse tbl_hierarchicial() and tbl_hierarchicial_count() for reporting of AEs, Con Meds, and more.\n\ntbl_ae &lt;- adae |&gt; \n  tbl_hierarchical(\n    by = \"ARM2\", \n    variables = c(\"AESOC\", \"AEDECOD\"),\n    id = \"USUBJID\",\n    denominator = adsl\n  )\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPrimary System Organ Class\n    Dictionary-Derived Term\nPlacebo\nN = 861\nXanomeline\nN = 1681\n\n\n\n\nCARDIAC DISORDERS\n4 (4.7%)\n8 (4.8%)\n\n\n    ATRIAL FLUTTER\n0 (0%)\n2 (1.2%)\n\n\n    MYOCARDIAL INFARCTION\n4 (4.7%)\n6 (3.6%)\n\n\nEYE DISORDERS\n1 (1.2%)\n0 (0%)\n\n\n    EYE ALLERGY\n1 (1.2%)\n0 (0%)\n\n\n    EYE SWELLING\n1 (1.2%)\n0 (0%)\n\n\n\n1 n (%)"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#tbl_merge-for-side-by-side-tables",
    "href": "slides/06-tables-gtsummary/index.html#tbl_merge-for-side-by-side-tables",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "tbl_merge() for side-by-side tables",
    "text": "tbl_merge() for side-by-side tables\n\ntbl_n &lt;- \n  tbl_summary(adsl, include = ETHNIC, statistic = ETHNIC ~ \"{n}\") |&gt; \n  modify_header(all_stat_cols() ~ \"**N**\") |&gt; # update column header\n  remove_footnote_header() # remove footnote\ntbl_age &lt;-\n  tbl_continuous(adsl, include = ETHNIC, variable = AGE, by = ARM2) |&gt; \n  modify_header(all_stat_cols() ~ \"**{level}**\") # update header\n\n# combine the tables side by side\nlist(tbl_n, tbl_age) |&gt; \n  tbl_merge(tab_spanner = FALSE) # suppress default header\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nN\nPlacebo1\nXanomeline1\n\n\n\n\nEthnicity\n\n\n\n\n\n\n\n\n    HISPANIC OR LATINO\n12\n64 (63, 86)\n63 (56, 78)\n\n\n    NOT HISPANIC OR LATINO\n242\n76 (70, 82)\n77 (71, 81)\n\n\n\n1 Age: Median (Q1, Q3)"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#tbl_stack-to-combine-vertically",
    "href": "slides/06-tables-gtsummary/index.html#tbl_stack-to-combine-vertically",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "tbl_stack() to combine vertically",
    "text": "tbl_stack() to combine vertically\n\ntbl_drug_a &lt;- filter(adsl, ARM2 == \"Placebo\") |&gt; \n  tbl_summary(include = ETHNIC)\ntbl_drug_b &lt;- filter(adsl, ARM2 == \"Xanomeline\") |&gt; \n  tbl_summary(include = ETHNIC)\n\n# stack the two tables \nlist(tbl_drug_a, tbl_drug_b) |&gt; \n  tbl_stack(group_header = c(\"Placebo\", \"Xanomeline\"), quiet = TRUE) |&gt; # optionally include headers for each table\n  modify_header(all_stat_cols() ~ \"**Summary Statistics**\")\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nSummary Statistics1\n\n\n\n\nPlacebo\n\n\nEthnicity\n\n\n\n\n    HISPANIC OR LATINO\n3 (3.5%)\n\n\n    NOT HISPANIC OR LATINO\n83 (97%)\n\n\nXanomeline\n\n\nEthnicity\n\n\n\n\n    HISPANIC OR LATINO\n9 (5.4%)\n\n\n    NOT HISPANIC OR LATINO\n159 (95%)\n\n\n\n1 n (%)"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#define-custom-function-tbl_cmh",
    "href": "slides/06-tables-gtsummary/index.html#define-custom-function-tbl_cmh",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "Define custom function tbl_cmh()",
    "text": "Define custom function tbl_cmh()"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#define-custom-function-tbl_cmh-1",
    "href": "slides/06-tables-gtsummary/index.html#define-custom-function-tbl_cmh-1",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "Define custom function tbl_cmh()",
    "text": "Define custom function tbl_cmh()"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#cobbling-tables-together",
    "href": "slides/06-tables-gtsummary/index.html#cobbling-tables-together",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "Cobbling Tables Together",
    "text": "Cobbling Tables Together\n\nThe {gtsummary} package makes it simple to break complex tables into their simple parts and cobble them together in the end.\nMoreover, the internal structure of a gtsummary table is super simple:\n\nA data frame\nInstructions to print that data frame to make it cute.\n\nModify the underlying data frame directly with modify_table_body().\n\n\ntbl_summary(adsl, include = c(AGE, ETHNIC), by = ARM2) |&gt; \n  pluck(\"table_body\")\n\n# A tibble: 4 × 7\n  variable var_type    row_type var_label label                  stat_1      stat_2     \n  &lt;chr&gt;    &lt;chr&gt;       &lt;chr&gt;    &lt;chr&gt;     &lt;chr&gt;                  &lt;chr&gt;       &lt;chr&gt;      \n1 AGE      continuous  label    Age       Age                    76 (69, 82) 77 (71, 81)\n2 ETHNIC   categorical label    Ethnicity Ethnicity              &lt;NA&gt;        &lt;NA&gt;       \n3 ETHNIC   categorical level    Ethnicity HISPANIC OR LATINO     3 (3.5%)    9 (5.4%)   \n4 ETHNIC   categorical level    Ethnicity NOT HISPANIC OR LATINO 83 (97%)    159 (95%)"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#where-are-the-ards",
    "href": "slides/06-tables-gtsummary/index.html#where-are-the-ards",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "Where are the ARDs?",
    "text": "Where are the ARDs?\n\n\n\nARDs are the backbone for all calculations in gtsummary\nEvery gtsummary table saves the ARDs from each calculation\n\n\n\ntbl &lt;- tbl_summary(adsl, by = \"ARM2\", include = \"AGE\")\ngather_ard(tbl)\n\n$tbl_summary\n\n\n{cards} data frame: 27 x 12\n\n\n   group1 group1_level variable variable_level stat_name stat_label      stat\n1    ARM2      Placebo      AGE                   median     Median        76\n2    ARM2      Placebo      AGE                      p25         Q1        69\n3    ARM2      Placebo      AGE                      p75         Q3        82\n4    ARM2    Xanomeli…      AGE                   median     Median        77\n5    ARM2    Xanomeli…      AGE                      p25         Q1        71\n6    ARM2    Xanomeli…      AGE                      p75         Q3        81\n7    &lt;NA&gt;                   AGE                    label  Variable…       Age\n8    &lt;NA&gt;                   AGE                    class  Variable…   numeric\n9    &lt;NA&gt;                  ARM2                    label  Variable…      ARM2\n10   &lt;NA&gt;                  ARM2                    class  Variable… character\n\n\nℹ 17 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 5 more variables: context, fmt_fun, warning, error, gts_column"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#ard-qc",
    "href": "slides/06-tables-gtsummary/index.html#ard-qc",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "ARD + QC",
    "text": "ARD + QC\nARDs are wonderful for QCing {gtsummary} tables. 😻\n\nARDs include the formatted and un-formatted numbers that appear in the table.\nExtract the ARD from the {gtsummary} table.\nBuild fresh ARD from source data, and compare it to the ARD from the table."
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#ard-qc-build-and-compare-ards",
    "href": "slides/06-tables-gtsummary/index.html#ard-qc-build-and-compare-ards",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "ARD + QC: Build and Compare ARDs",
    "text": "ARD + QC: Build and Compare ARDs\n\nard_demog &lt;- adsl |&gt; \n  cards::ard_stack(\n    cards::ard_summary(\n      variables = \"AGE\",\n      statistic = \n        AGE ~ cards::continuous_summary_fns(c(\"median\", \"p25\", \"p75\"))\n    ),\n    .by = \"ARM2\", \n  )\n\nThe next step is to simply compare the two ARDs to confirm results. As this is done programmatically, it is quick to repeat as data continues to accrue.\n\nThere are numerous ways to compare objects in R. We are currently developing a tool in {cards} that will streamline ARD comparison, with sensible defaults for ARDs. Stay tuned! 📺"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#ard-first-tables-1",
    "href": "slides/06-tables-gtsummary/index.html#ard-first-tables-1",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "ARD-first Tables",
    "text": "ARD-first Tables\nSimilar to functions that accept a data frame, the package exports functions with nearly identical APIs that accept an ARD.\n\n\ntbl_summary()\n\ntbl_hierarchical()\n\ntbl_continuous()\n\ntbl_wide_summary()\n\ntbl_ard_summary()\n\ntbl_ard_hierarchical()\n\ntbl_ard_continuous()\n\ntbl_ard_wide_summary()"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#ard-first-tables-2",
    "href": "slides/06-tables-gtsummary/index.html#ard-first-tables-2",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "ARD-first Tables",
    "text": "ARD-first Tables\nWe can use the skills we learned earlier today to create ARDs for gtsummary tables.\n\n\nlibrary(cards)\n\nard &lt;- ard_stack(\n  data = adsl, \n  ard_summary(variables = AGE),\n  ard_tabulate(variables = ETHNIC),\n  ard_tabulate_value(variables = FEMALE),\n  # add these for best-looking tables\n  .attributes = TRUE, \n  .missing = TRUE \n)\nard\n\n\n{cards} data frame: 38 x 9\n\n\n   variable variable_level  context stat_name stat_label   stat\n1       AGE                 summary         N          N    254\n2       AGE                 summary      mean       Mean 75.087\n3       AGE                 summary        sd         SD  8.246\n4       AGE                 summary    median     Median     77\n5       AGE                 summary       p25         Q1     70\n6       AGE                 summary       p75         Q3     81\n7       AGE                 summary       min        Min     51\n8       AGE                 summary       max        Max     89\n9    ETHNIC      HISPANIC… tabulate         n          n     12\n10   ETHNIC      HISPANIC… tabulate         N          N    254\n\n\nℹ 28 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 3 more variables: fmt_fun, warning, error\n\n\n\n\n\nThe .attributes=TRUE call adds column attributes, like labels, to the ARD table, which leads to better defaults by displaying the column labels in the table."
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#ard-first-tables-3",
    "href": "slides/06-tables-gtsummary/index.html#ard-first-tables-3",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "ARD-first Tables",
    "text": "ARD-first Tables\nWe can simply use the ARD from the previous slide, and pass it to tbl_ard_summary() for a summary table.\n\n\ntbl_ard_summary(ard)\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nOverall1\n\n\n\n\nAge\n77.0 (70.0, 81.0)\n\n\nEthnicity\n\n\n\n\n    HISPANIC OR LATINO\n12 (4.7%)\n\n\n    NOT HISPANIC OR LATINO\n242 (95.3%)\n\n\nFemale\n143 (56.3%)\n\n\n\n1 Median (Q1, Q3); n (%)"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#ard-first-table-shells",
    "href": "slides/06-tables-gtsummary/index.html#ard-first-table-shells",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "ARD-first Table Shells",
    "text": "ARD-first Table Shells\n\nadsl |&gt; \n  labelled::set_variable_labels(AGE = \"Age, years\") |&gt; \n  ard_stack( \n    .by = ARM2,\n    ard_tabulate(variables = ETHNIC),\n    # add these for best-looking tables\n    .attributes = TRUE, \n    .missing = TRUE \n  ) |&gt; \n  cards::update_ard_fmt_fun(stat_names = c(\"n\", \"p\"), fmt_fun = \\(x) \"xx\") |&gt; \n  tbl_ard_summary(\n    by = ARM2,\n    type = all_continuous() ~ \"continuous2\",\n    statistic = all_continuous() ~ c(\"{mean} ({sd})\", \"{min} - {max}\"),\n    missing = \"no\"\n  ) |&gt; \n  modify_header(all_stat_cols() ~ \"**{level}**  \\nN = xx\")\n\n\n\n\nYou can also pass ARDs created with the cards::mock_*() functions if no data are available."
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#ard-first-table-shells-output",
    "href": "slides/06-tables-gtsummary/index.html#ard-first-table-shells-output",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "ARD-first Table Shells",
    "text": "ARD-first Table Shells\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nPlacebo\nN = xx1\nXanomeline\nN = xx1\n\n\n\n\nEthnicity\n\n\n\n\n\n\n    HISPANIC OR LATINO\nxx (xx%)\nxx (xx%)\n\n\n    NOT HISPANIC OR LATINO\nxx (xx%)\nxx (xx%)\n\n\n\n1 n (%)"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#gtsummary-print-engines-1",
    "href": "slides/06-tables-gtsummary/index.html#gtsummary-print-engines-1",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "{gtsummary} print engines",
    "text": "{gtsummary} print engines"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#how-to-adopt-gtsummary",
    "href": "slides/06-tables-gtsummary/index.html#how-to-adopt-gtsummary",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "How to Adopt {gtsummary}",
    "text": "How to Adopt {gtsummary}\nWrite functions\n\nUse {gtsummary} functions to build new functions will be key for adoption.\n\nCreate a theme\n\nA theme is a set of customization preferences that can be easily set and reused.\nThemes control default settings for existing functions\nThemes control more fine-grained customization not available via arguments or helper functions"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#extension-packagecrane",
    "href": "slides/06-tables-gtsummary/index.html#extension-packagecrane",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "Extension Package:{crane} ",
    "text": "Extension Package:{crane} \nThe first function we added to {crane} was tbl_roche_summary(): a thin wrapper for gtsummary::tbl_summary().\n\n\nContinuous variables default to continuous2.\ntbl_summary(missing*) arguments have been changed to tbl_roche_summary(nonmissing*).\n\nWe highlight non-missing counts over missing counts, which are the default in {gtsummary}\n\nCounts represented by 0 (0%) print as 0.\n\n\n\nlibrary(crane)\n\nadsl |&gt; \n  dplyr::mutate(ETHNIC = forcats::fct_expand(ETHNIC, \"REFUSED\")) |&gt; \n  tbl_roche_summary(\n    by = ARM2, \n    include = c(AGE, ETHNIC),\n    nonmissing = \"always\"\n  )"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#extension-packagecrane-output",
    "href": "slides/06-tables-gtsummary/index.html#extension-packagecrane-output",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "Extension Package:{crane} ",
    "text": "Extension Package:{crane} \n\n\n\nTable 1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPlacebo\n(N = 86)\nXanomeline\n(N = 168)\n\n\n\n\nAge\n\n\n\n\n\n\n    n\n86\n168\n\n\n    Mean (SD)\n75 (9)\n75 (8)\n\n\n    Median\n76\n77\n\n\n    Min - Max\n52 - 89\n51 - 88\n\n\nETHNIC\n\n\n\n\n\n\n    n\n86\n168\n\n\n    HISPANIC OR LATINO\n3 (3.5%)\n9 (5.4%)\n\n\n    NOT HISPANIC OR LATINO\n83 (97%)\n159 (95%)\n\n\n    REFUSED\n0\n0"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#what-else-is-in-crane",
    "href": "slides/06-tables-gtsummary/index.html#what-else-is-in-crane",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "What else is in {crane}? ",
    "text": "What else is in {crane}? \n\nLab values are summarized by visit and include the change from baseline.\nThis is a simple table that is just a tbl_merge() of the AVAL summary and the CHG summary.\nBut the general structure appears enough times in our catalog, we make it simple for our programmers to create.\n\n\nadlb |&gt; \n  dplyr::filter(PARAM == \"Albumin (g/L)\") |&gt; \n  tbl_baseline_chg(\n    by = \"ARM2\",\n    baseline_level = \"Baseline\",\n    denominator = adsl\n  )"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#what-else-is-in-crane-1",
    "href": "slides/06-tables-gtsummary/index.html#what-else-is-in-crane-1",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "What else is in {crane}? ",
    "text": "What else is in {crane}?"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#what-else-is-in-crane-2",
    "href": "slides/06-tables-gtsummary/index.html#what-else-is-in-crane-2",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "What else is in {crane}? ",
    "text": "What else is in {crane}?"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#what-else-is-in-crane-3",
    "href": "slides/06-tables-gtsummary/index.html#what-else-is-in-crane-3",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "What else is in {crane}? ",
    "text": "What else is in {crane}?"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#what-else-is-in-crane-4",
    "href": "slides/06-tables-gtsummary/index.html#what-else-is-in-crane-4",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "What else is in {crane}? ",
    "text": "What else is in {crane}?"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#a-pharma-theme-with-crane",
    "href": "slides/06-tables-gtsummary/index.html#a-pharma-theme-with-crane",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "A pharma theme with {crane}",
    "text": "A pharma theme with {crane}\nOur theme is implemented in crane::theme_gtsummary_roche()\nPrimary changes include:\n\nSets a custom function for rounding percentages.\nRound all p-values to four decimal places.\nHeaders default to presenting with bold and include N in parenthesis, e.g. 'Placebo  \\n (N = 184)'.\nAll tables are printed with {flextable} and we add Roche-specific styling to the table.\nUpdate the default font, font size, table borders, cell padding, etc. to meet our guidelines."
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#what-else-is-in-crane-5",
    "href": "slides/06-tables-gtsummary/index.html#what-else-is-in-crane-5",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "What else is in {crane}? ",
    "text": "What else is in {crane}? \n\n\ntheme_gtsummary_roche()\n\nadsl |&gt; \n  dplyr::mutate(ETHNIC = forcats::fct_expand(ETHNIC, \"REFUSED\")) |&gt; \n  tbl_roche_summary(\n    by = ARM2, \n    include = c(AGE, ETHNIC),\n    nonmissing = \"always\"\n  )\n\n\nPlacebo  (N = 86)Xanomeline  (N = 168)Agen86168Mean (SD)75 (9)75 (8)Median7677Min - Max52 - 8951 - 88ETHNICn86168HISPANIC OR LATINO3 (3.5%)9 (5.4%)NOT HISPANIC OR LATINO83 (96.5%)159 (94.6%)REFUSED00"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#cardinal-collaboration",
    "href": "slides/06-tables-gtsummary/index.html#cardinal-collaboration",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "cardinal collaboration ",
    "text": "cardinal collaboration \nThe cardinal initiative is an industry collaborative effort under the pharmaverse.\nThe site includes examples for building ARDs and tables from the FDA Standard Safety Tables and Figures Integrated Guide using {cards} and {gtsummary}.\n Let’s Go!"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#gtsummary-website",
    "href": "slides/06-tables-gtsummary/index.html#gtsummary-website",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "{gtsummary} website",
    "text": "{gtsummary} website\nhttp://www.danieldsjoberg.com/gtsummary/"
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#section-2",
    "href": "slides/06-tables-gtsummary/index.html#section-2",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "",
    "text": "Package Authors/Contributors\n\nDaniel D. Sjoberg\nJoseph Larmarange\nMichael Curry\nJessica Lavery\nKarissa Whiting\nEmily C. Zabor\nXing Bai\nEsther Drill\nJessica Flynn\nMargie Hannum\nStephanie Lobaugh\nShannon Pileggi\nAmy Tin\nGustavo Zapata Wainberg\n\n\nOther Contributors\n\n@abduazizR, @ablack3, @ABohynDOE, @ABorakati, @adilsonbauhofer, @aghaynes, @ahinton-mmc, @aito123, @akarsteve, @akefley, @albamrt, @albertostefanelli, @alecbiom, @alexandrayas, @alexis-catherine, @AlexZHENGH, @alnajar, @amygimma, @anaavu, @anddis, @andrader, @Andrzej-Andrzej, @angelgar, @arbet003, @arnmayer, @aspina7, @AurelienDasre, @awcm0n, @ayogasekaram, @barretmonchka, @barthelmes, @bc-teixeira, @bcjaeger, @BeauMeche, @benediktclaus, @benwhalley, @berg-michael, @bhattmaulik, @BioYork, @blue-abdur, @brachem-christian, @brianmsm, @browne123, @bwiernik, @bx259, @calebasaraba, @CarolineXGao, @CharlyMarie, @ChongTienGoh, @Chris-M-P, @chrisleitzinger, @cjprobst, @ClaudiaCampani, @clmawhorter, @CodieMonster, @coeusanalytics, @coreysparks, @CorradoLanera, @crystalluckett-sanofi, @ctlamb, @dafxy, @DanChaltiel, @DanielPark-MGH, @davideyre, @davidgohel, @davidkane9, @DavisVaughan, @dax44, @dchiu911, @ddsjoberg, @DeFilippis, @denis-or, @dereksonderegger, @derekstein, @DesiQuintans, @dieuv0, @dimbage, @discoleo, @djbirke, @dmenne, @DrDinhLuong, @edelarua, @edrill, @Eduardo-Auer, @ElfatihHasabo, @emilyvertosick, @eokoshi, @ercbk, @eremingt, @erikvona, @eugenividal, @eweisbrod, @fdehrich, @feizhadj, @fh-jsnider, @fh-mthomson, @FrancoisGhesquiere, @ge-generation, @Generalized, @ghost, @giorgioluciano, @giovannitinervia9, @gjones1219, @gorkang, @GuiMarthe, @gungorMetehan, @hass91, @hescalar, @HichemLa, @hichew22, @hr70, @huftis, @hughjonesd, @iaingallagher, @ilyamusabirov, @IndrajeetPatil, @irene9116, @IsadoraBM, @j-tamad, @jalavery, @jaromilfrossard, @JBarsotti, @jbtov, @jeanmanguy, @jemus42, @jenifav, @jennybc, @JeremyPasco, @jerrodanzalone, @JesseRop, @jflynn264, @jhchou, @jhelvy, @jhk0530, @jjallaire, @jkylearmstrong, @jmbarajas, @jmbarbone, @JoanneF1229, @joelgautschi, @johnryan412, @JohnSodling, @jonasrekdalmathisen, @JonGretar, @jordan49er, @jsavinc, @jthomasmock, @juseer, @jwilliman, @karissawhiting, @karl-an, @kendonB, @kentm4, @klh281, @kmdono02, @kristyrobledo, @kwakuduahc1, @lamberp6, @lamhine, @larmarange, @ledermanr, @leejasme, @leslem, @levossen, @lngdet, @longjp, @lorenzoFabbri, @loukesio, @love520lfh, @lspeetluk, @ltin1214, @ltj-github, @lucavd, @LucyMcGowan, @LuiNov, @lukejenner6, @maciekbanas, @maia-sh, @malcolmbarrett, @mariamaseng, @Marsus1972, @martsobm, @Mathicaa, @matthieu-faron, @maxanes, @mayazadok2, @mbac, @mdidish, @medewitt, @meenakshi-kushwaha, @melindahiggins2000, @MelissaAssel, @Melkiades, @mfansler, @michaelcurry1123, @mikemazzucco, @mlamias, @mljaniczek, @moleps, @monitoringhsd, @motocci, @mrmvergeer, @msberends, @mvuorre, @myamortor, @myensr, @MyKo101, @nalimilan, @ndunnewind, @nikostr, @ningyile, @O16789, @oliviercailloux, @oranwutang, @palantre, @parmsam, @Pascal-Schmidt, @PaulC91, @paulduf, @pedersebastian, @perlatex, @pgseye, @philippemichel, @philsf, @polc1410, @Polperobis, @postgres-newbie, @proshano, @raphidoc, @RaviBot, @rawand-hanna, @rbcavanaugh, @remlapmot, @rich-iannone, @RiversPharmD, @rmgpanw, @roaldarbol, @roman2023, @ryzhu75, @s-j-choi, @sachijay, @saifelayan, @sammo3182, @samrodgersmelnick, @samuele-mercan, @sandhyapc, @sbalci, @sda030, @shah-in-boots, @shannonpileggi, @shaunporwal, @shengchaohou, @ShixiangWang, @simonpcouch, @slb2240, @slobaugh, @spiralparagon, @Spring75xx, @StaffanBetner, @steenharsted, @stenw, @Stephonomon, @storopoli, @stratopopolis, @strengejacke, @szimmer, @tamytsujimoto, @TAOS25, @TarJae, @themichjam, @THIB20, @tibirkrajc, @tjmeyers, @tldrcharlene, @tormodb, @toshifumikuroda, @TPDeramus, @UAB-BST-680, @uakimix, @uriahf, @Valja64, @viola-hilbert, @violet-nova, @vvm02, @will-gt, @xkcococo, @xtimbeau, @yatirbe, @yihunzeleke, @yonicd, @yoursdearboy, @YousufMohammed2002, @yuryzablotski, @zabore, @zachariae, @zaddyzad, @zawkzaw, @zdz2101, @zeyunlu, @zhangkaicr, @zhaohongxin0, @zheer-kejlberg, @zhengnow, @zhonghua723, @zlkrvsm, @zongell-star, and @Zoulf001."
  },
  {
    "objectID": "slides/06-tables-gtsummary/index.html#thank-you",
    "href": "slides/06-tables-gtsummary/index.html#thank-you",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "Thank you",
    "text": "Thank you\n\n\n\n Ask on stackoverflow.com\n Use the gtsummary tag\n Thousands of posts!\n\n danieldsjoberg.com\n ddsjoberg.bsky.social\n linkedin.com/in/ddsjoberg/\n github.com/ddsjoberg"
  }
]