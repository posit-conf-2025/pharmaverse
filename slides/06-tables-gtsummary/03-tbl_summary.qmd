# tbl_summary()

## Prepare the data

```{r}
#| message: false
library(pharmaverseadam)
library(tidyverse)

adsl <- pharmaverseadam::adsl |> 
  filter(ARM != "Screen Failure") |> 
  select(USUBJID, ARM, AGE, ETHNIC, SEX, TRTDURD) |> 
  mutate(FEMALE  = SEX == "F") |> 
  labelled::set_variable_labels(FEMALE = "Female")
adae <- pharmaverseadam::adae |> 
  filter(
    USUBJID %in% adsl$USUBJID,
    AESOC %in% c("CARDIAC DISORDERS", "EYE DISORDERS"),
    AEDECOD %in% c("ATRIAL FLUTTER", "MYOCARDIAL INFARCTION",
                   "EYE ALLERGY", "EYE SWELLING")
  ) |> 
  select(USUBJID, ARM, AEDECOD, AESOC, AEHLT, AESEV, AESER, AEREL)
adlb <- pharmaverseadam::adlb |> 
  filter(
    USUBJID %in% adsl$USUBJID, 
    PARAM %in% c("Albumin (g/L)", "Bilirubin (umol/L)" , "Leukocytes (10^9/L)"),
    AVISITN < 100
  ) |> 
  select(USUBJID, AVISIT, AVISITN, PARCAT1, PARAM, PARAMCD, 
         AVAL, AVALC, BASE, CHG)

# Construct an oncology outcomes dataset
ad_onco <-
  list(
    # Best Overall Response
    pharmaverseadam::adrs_onco |> 
      filter(PARAMCD == "CBOR") |> 
      select(USUBJID, RECIST_CBOR = AVALC) |> 
      labelled::set_variable_labels(RECIST_CBOR = "Best Overall Response"),
    # Tumor Size
    pharmaverseadam::adtr_onco |> 
      filter(PARAM == "Target Lesions Sum of Diameters by Investigator") |> 
      select(USUBJID, TUMOR_SIZE = AVAL) |> 
      labelled::set_variable_labels(TUMOR_SIZE = "Tumor Size, mm"),
    # Progression-free Survival
    pharmaverseadam::adtte_onco |> 
      filter(PARAMCD == "PFS") |> 
      select(USUBJID, PFS_CNSR = CNSR, PFS_TIME = AVAL) |> 
      mutate(PFS_EVENT = abs(PFS_CNSR - 1)) |> 
      labelled::set_variable_labels(
        PFS_CNSR = "PFS, Censor",
        PFS_EVENT = "Progression",
        PFS_TIME = "PFS Followup Time, days"
      )
  ) |> 
  reduce(full_join, by = "USUBJID") |> 
  inner_join(adsl[c("USUBJID", "AGE", "ETHNIC", "ARM")], by = "USUBJID") |> 
  mutate(ARM2 = word(ARM, 1))
```

## Basic tbl_summary()

::: columns
::: {.column width="50%"}
```{r}
#| label: 'simple-summary'
library(gtsummary)

adsl |> 
  tbl_summary(
    include = c(AGE, ETHNIC, FEMALE)
  )
```
:::

::: {.column width="50%"}
-   Four types of summaries: `continuous`, `continuous2`, `categorical`, and `dichotomous`

-   Statistics are `median (IQR)` for continuous, `n (%)` for categorical/dichotomous

-   Variables coded `0/1`, `TRUE/FALSE`, `Yes/No` treated as dichotomous by default

-   Label attributes are printed automatically
:::
:::

## Customize tbl_summary() output {auto-animate="true"}

```{r}
#| output-location: "column"
#| label: 'customize-summary1'
tbl_summary(
  adsl,
  include = c(AGE, ETHNIC, FEMALE),
  by = ARM,
)
```

::: small
::: columns
::: {.column width="50%"}
-   `by`: specify a column variable for cross-tabulation
:::

::: {.column width="50%"}
:::
:::
:::

## Customize tbl_summary() output {auto-animate="true"}

```{r}
#| output-location: "column"
#| label: 'customize-summary2'
tbl_summary(
  adsl,
  include = c(AGE, ETHNIC, FEMALE),
  by = ARM,
  type = AGE ~ "continuous2",
)
```

::: small
::: columns
::: {.column width="50%"}
-   `by`: specify a column variable for cross-tabulation

-   `type`: specify the summary type
:::

::: {.column width="50%"}
:::
:::
:::

## Customize tbl_summary() output {auto-animate="true"}

```{r}
#| output-location: "column"
#| label: 'customize-summary3'
tbl_summary(
  adsl,
  include = c(AGE, ETHNIC, FEMALE),
  by = ARM,
  type = AGE ~ "continuous2",
  statistic = 
    list(
      AGE ~ c("{mean} ({sd})", 
              "{min}, {max}"), 
      FEMALE ~ "{n} / {N} ({p}%)"
    ),
)
```

::: small
::: columns
::: {.column width="50%"}
-   `by`: specify a column variable for cross-tabulation

-   `type`: specify the summary type

-   `statistic`: customize the reported statistics
:::

::: {.column width="50%"}
:::
:::
:::

## Customize tbl_summary() output {auto-animate="true"}

```{r}
#| output-location: "column"
#| label: 'customize-summary4'
tbl_summary(
  adsl,
  include = c(AGE, ETHNIC, FEMALE),
  by = ARM,
  type = AGE ~ "continuous2",
  statistic = 
    list(
      AGE ~ c("{mean} ({sd})", 
              "{min}, {max}"), 
      FEMALE ~ "{n} / {N} ({p}%)"
    ),
  label = 
    AGE ~ "Age, years",
)
```

::: small
::: columns
::: {.column width="50%"}
-   `by`: specify a column variable for cross-tabulation

-   `type`: specify the summary type

-   `statistic`: customize the reported statistics
:::

::: {.column width="50%"}
-   `label`: change or customize variable labels
:::
:::
:::

## Customize tbl_summary() output {auto-animate="true"}

```{r}
#| output-location: "column"
#| label: 'customize-summary5'
tbl_summary(
  adsl,
  include = c(AGE, ETHNIC, FEMALE),
  by = ARM,
  type = AGE ~ "continuous2",
  statistic = 
    list(
      AGE ~ c("{mean} ({sd})", 
              "{min}, {max}"), 
      FEMALE ~ "{n} / {N} ({p}%)"
    ),
  label = 
    AGE ~ "Age, years",
  digits = AGE ~ list(sd = 1) # report SD(age) to one decimal place
)
```

::: small
::: columns
::: {.column width="50%"}
-   `by`: specify a column variable for cross-tabulation

-   `type`: specify the summary type

-   `statistic`: customize the reported statistics
:::

::: {.column width="50%"}
-   `label`: change or customize variable labels

-   `digits`: specify the number of decimal places for rounding
:::
:::
:::

## {gtsummary} + formulas

This syntax is also used in {cards}, {cardx}, and {gt}.
<p align="center">

<img src="https://raw.githubusercontent.com/ddsjoberg/gtsummary-weill-cornell-presentation/5887c81b58f4ed0c76f6ae458243e9c2a2fbbcd2/Images/Dan-SummaryTables-5.png" width="95%"/>

</p>

**Named list are OK too!** `label = list(age = "Patient Age")`

## 

### {gtsummary} selectors

- Use the following helpers to [select groups of variables]{.emphasis}: `all_continuous()`, `all_categorical()`

- Use `all_stat_cols()` to select the [summary statistic columns]{.emphasis}

### Add-on functions in {gtsummary}

`tbl_summary()` objects can also be updated using related functions.

-   `add_*()` add [additional column]{.emphasis} of statistics or information, e.g. p-values, q-values, overall statistics, treatment differences, N obs., and more

-   `modify_*()` [modify]{.emphasis} table headers, spanning headers, footnotes, and more

-   `bold_*()/italicize_*()` [style]{.emphasis} labels, variable levels, significant p-values

## Update tbl_summary() with add\_\*()  {auto-animate="true"}

```{r}
#| label: 'summary-with-overall1'
#| output-location: "column"
#| code-line-numbers: "6"
adsl |>
  tbl_summary(
    by = ARM,
    include = c(AGE, ETHNIC, FEMALE)
  ) |> 
  add_overall(last = TRUE)
```

-   `add_overall()`: adds a column of overall statistics

## Update tbl_summary() with add\_\*()

```{r}
#| output-location: "column"
#| code-line-numbers: "8,9"
#| label: 'summary-with-p'
ad_onco |>
  tbl_summary(
    by = ARM2, 
    include = c(TUMOR_SIZE, PFS_EVENT),
    missing = "no"
  ) |> 
  add_n() |> 
  add_p(pvalue_fun = label_style_pvalue(digits = 2)) |> 
  add_q(method = "fdr")
```

-   `add_p()`: adds a column of p-values

-   `add_q()`: adds a column of p-values adjusted for multiple comparisons through a call to `p.adjust()`

## Update tbl_summary() with modify\_\*()

```{r}
#| label: 'summary-modified'
#| output-location: "column"
#| code-line-numbers: "4,5,6,7,8,9,10,11,12,13"
tbl <-
  adsl[c("ARM", "AGE", "ETHNIC", "FEMALE")] |> 
  filter(startsWith(ARM, "Xanomeline")) |> 
  tbl_summary(by = ARM, 
              missing = "no") |>
  modify_header(
    stat_1 ~ "**Group A**",
    stat_2 ~ "**Group B**"
  ) |> 
  modify_spanning_header(
    all_stat_cols() ~ "**Drug**") |> 
  modify_footnote(
    all_stat_cols() ~ 
      paste("median (IQR) for continuous;",
            "n (%) for categorical")
  )
tbl
```

-   Use `show_header_names()` to see the internal header names available for use in `modify_header()`

## Column names

```{r}
#| label: 'column-names'
#| output-location: "column"
show_header_names(tbl)
```

<br><br>

::: {.larger}
`all_stat_cols()` selects columns `"stat_1"` and `"stat_2"`
:::

## Update tbl_summary() with add\_\*()

```{r}
#| label: 'summary-with-difference'
#| code-line-numbers: "12"
ad_onco |>
  tbl_summary(
    by = ARM2,
    include = c(TUMOR_SIZE, PFS_EVENT),
    statistic = list(TUMOR_SIZE = "{mean} ({sd})",
                     PFS_EVENT = "{p}%"),
    missing = "no"
  ) |> 
  add_difference()
```

-   `add_difference()`: mean and rate differences between two groups. Can also be adjusted differences

## Update tbl_summary() with add\_\*()

::: {.columns .v-center-container}
::: {.column width="50%"}
```{r}
#| label: 'summary-with-custom-stat'
#| eval: false
#| code-line-numbers: "6"
adsl |>
  tbl_summary(
    by = ARM,
    include = c(AGE, ETHNIC, FEMALE)
  ) |> 
  add_stat(...)
```
:::

::: {.column width="50%"}
-   Customize statistics presented with `add_stat()`

-   Added statistics can be placed on the label or the level rows

-   Added statistics may be a single column or multiple
:::
:::

## Where are the ARDs?

::: {.columns .v-center-container}
::: {.column width="30%"}

- ARDs are the backbone for all calculations in gtsummary

- Every gtsummary table saves the ARDs from each calculation

- They can be extracted individually, or combined.

:::

::: {.column width="70%"}

```{r}
#| label: 'summary-view-ard'
tbl <- tbl_summary(adsl, by = ARM, include = AGE) |> add_p()
names(tbl$cards)
tbl$cards[["add_p"]][["AGE"]]
```

:::
:::

## Add-on functions in {gtsummary}

And many more!

See the documentation at <http://www.danieldsjoberg.com/gtsummary/reference/index.html>

And a detailed `tbl_summary()` vignette at <http://www.danieldsjoberg.com/gtsummary/articles/tbl_summary.html>

## {gtsummary} Exercise 1

1. Navigate to Posit Cloud script `04-gtsummary_exercise1.R`.

2. Create the table outlined in the script.

3. Add the "completed" sticky note to your laptop when complete.

```{r}
#| echo: false
#| cache: false
countdown(minutes = 10)
```

## Cross-tabulation with tbl_cross()

`tbl_cross()` is a wrapper for `tbl_summary()` for **n x m** tables

```{r}
#| label: 'tbl_cross'
#| output-location: "column"
adsl |>
  tbl_cross(
    row = ARM, 
    col = ETHNIC,
    percent = "row",
    margin = "row"
  ) |>
  bold_labels()
```

## Continuous Summaries with tbl_continuous()

`tbl_continuous()` summarizes a continuous variable by 1, 2, or more categorical variables

```{r}
#| label: 'tbl_continuous'
adsl |>
  tbl_continuous(
    variable = AGE,
    by = ARM,
    include = ETHNIC
  )
```

## Wide Summaries with tbl_wide_summary()

`tbl_wide_summary()` summarizes a continuous variable with summary statistics spread across columns

```{r}
#| label: 'tbl_wide_summary'
adsl |>
  tbl_wide_summary(include = c(ETHNIC, FEMALE))
```

## Wide Summaries with tbl_wide_summary()

```{r}
#| label: 'tbl_wide_summary2'
adsl |>
  tbl_wide_summary(include = c(AGE, TRTDURD))
```

Naturally, you can change the statistics, and which appear in each column.

## Adverse Event Reporting (and friends)

Use `tbl_hierarchicial()` and `tbl_hierarchicial_count()` for reporting of AEs, Con Meds, and more.

```{r}
adae |> 
  tbl_hierarchical(
    by = ARM, 
    variables = c(AESOC, AEDECOD),
    id = "USUBJID",
    denominator = adsl
  )
```

